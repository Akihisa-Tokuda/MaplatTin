{"version":3,"sources":["../src/index.js"],"names":["Tin","options","bounds","setBounds","setWh","wh","vertexMode","VERTEX_PLAIN","strictMode","MODE_AUTO","yaxisMode","YAXIS_INVERT","importance","priority","points","setPoints","edges","setEdges","YAXIS_FOLLOW","map","point","tins","undefined","edgeNodes","minx","miny","maxx","maxy","coords","i","length","xy","push","boundsPolygon","compiled","tins_points","pointsWeightBuffer","weight_buffer","strict_status","kinks_points","STATUS_ERROR","STATUS_LOOSE","STATUS_STRICT","vertices_params","forw","idx","idxNxt","tri","indexesToTri","centroid_point","vertices_points","bakw","centroid","bakwI","idxes","kinks","coord","features","key","geometry","coordinates","properties","geom","pIdx","index","target","vertices","vertex_data","b","tin","kink","mode","self","pointsSet","Promise","all","resolve","counterTri","then","tris","searchIndex","forTri","bakTri","insertSearchIndex","err","overlapCheckAsync","prevResult","overlapped","Object","keys","trises","forUnion","forConvex","forDiff","splittedKey","split","match","numberKey","parseInt","sort","a","sharedVtx","val","alpha","prop","filter","vtx","nonSharedVtx","removeSearchIndex","sVtx","newTriCoords","newTriProp","c","newBakTri","newForTri","direc","poly","findIntersections","retXy","internal","dedupIntersections","reduce","prev","apoint","array","x","y","result","pointsArray","mapxy","mercs","forPoint","createPoint","counterPoint","edgeNodeIndex","startEnd","illstNodes","assign","mercNodes","unshift","lengths","nodes","eachLengths","node","arr","Math","sqrt","pow","sumLengths","eachSum","ratio","thisLengths","anotherLengths","lengthItem","anotherSets","item","next","anotherPrev","anotherNext","ratioDelta","ratioAnother","ratioInEdge","anotherNode","concat","strict","insideCheck","inside","curr","reject","MODE_STRICT","MODE_LOOSE","bbox","generatePointsSet","prevResults","tinForCentroid","tinBakCentroid","forCentroidFt","pointsSetBbox","transformArr","convexBuf","vconvex","e","vertex","bakConvex","expandConvex","_","forVertex","bakVertex","vertexDelta","xRate","Infinity","yRate","abs","orthant","VERTEX_BIRDEYE","pre","cur","ret","distanceSum","thetaDelta","atan2","sumThetaX","cos","sumThetaY","sin","verticesSet","delta","forDelta","forDistance","bakDistance","forTheta","bakTheta","swap","expandRate","j","side","expands","expand","expandLine","intersect","intersect_","expandDist","onSideDist","rate","verticesList","forVertexFt","bakVertexFt","rotateVerticesTriangle","prom","calcurateStrictTinAsync","vertexCalc","calculatePointsWeightAsync","backward","ignoreBounds","tpoint","verticesParams","weightBuffer","rpoint","calcTargets","alreadyChecked","vtxes","vi","vj","indexi","indexj","join","fromi","fromj","toi","toj","weight","feature","substring","type","arcs","ArcCollection","findSegmentIntersections","list","centCoord","itemi","itemj","radian","normalizeRadian","noNegative","rangeFunc","PI","decideUseVertex","radianList","idel","minTheta","minIndex","jdel","minDel","min","transformTin","of","transformTinArr","o","ad","bd","cd","ab","ac","ao","abd","acd","abv","acv","aW","bW","cW","nabv","normB","normC","od","useVertices","useVerticesArr","hit","transform","geoms","props","buildTri","indexes","cent","bboxes","points_","point_base","isFinite","nodeIndex","retValue","searchResult","dir","calcSearchKeys","bakKeys","JSON","stringify","newArray","eachTris","eachTri","set","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nimport { polygon, featureCollection, point, lineString } from '@turf/helpers';\nimport union from '@turf/union';\nimport convex from '@turf/convex';\nimport difference from '@turf/difference';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport centroid from '@turf/centroid';\nimport lineIntersect from '@turf/line-intersect';\nimport intersect from '@turf/intersect';\n\nimport internal from './mapshaper-maplat';\nimport constrainedTin from './constrained-tin';\n\nclass Tin {\n    constructor(options) {\n        options = options || {};\n        if (options.bounds) {\n            this.setBounds(options.bounds);\n        } else {\n            this.setWh(options.wh);\n            this.vertexMode = options.vertexMode || Tin.VERTEX_PLAIN;\n        }\n        this.strictMode = options.strictMode || Tin.MODE_AUTO;\n        this.yaxisMode = options.yaxisMode || Tin.YAXIS_INVERT;\n        this.importance = options.importance || 0;\n        this.priority = options.priority || 0;\n        if (options.points) {\n            this.setPoints(options.points);\n        }\n        if (options.edges) {\n            this.setEdges(options.edges);\n        }\n    }\n\n    setPoints(points) {\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW) {\n            points = points.map((point) => {\n                [point[0], [point[1][0], -1 * point[1][1]]]\n            });\n        }\n        this.points = points;\n        this.tins = undefined;\n    }\n\n    setEdges(edges) {\n        if (!edges) edges = [];\n        this.edges = edges;\n        this.edgeNodes = undefined;\n        this.tins = undefined;\n    }\n\n    setBounds(bounds) {\n        this.bounds = bounds;\n        let minx, miny, maxx, maxy, coords;\n        for (let i = 0; i < bounds.length; i++) {\n            const xy = bounds[i];\n            if (i == 0) {\n                minx = maxx = xy[0];\n                miny = maxy = xy[1];\n                coords = [xy];\n            } else {\n                if (xy[0] < minx) minx = xy[0];\n                if (xy[0] > maxx) maxx = xy[0];\n                if (xy[1] < miny) miny = xy[1];\n                if (xy[1] > maxy) maxy = xy[1];\n                coords.push(xy);\n            }\n        }\n        coords.push(bounds[0]);\n        this.boundsPolygon = polygon([coords]);\n        this.xy = [minx, miny];\n        this.wh = [maxx - minx, maxy - miny];\n        this.vertexMode = Tin.VERTEX_PLAIN;\n        this.tins = undefined;\n    }\n\n    setCompiled(compiled) {\n        if (!compiled.tins && compiled.points && compiled.tins_points) {\n            // 新コンパイルロジック\n            // pointsはそのままpoints, weightBufferも\n            this.points = compiled.points;\n            this.pointsWeightBuffer = compiled.weight_buffer;\n            // kinksやtinsの存在状況でstrict_statusを判定\n            if (compiled.strict_status) {\n                this.strict_status = compiled.strict_status;\n            } else if (compiled.kinks_points) {\n                this.strict_status = Tin.STATUS_ERROR;\n            } else if (compiled.tins_points.length == 2) {\n                this.strict_status = Tin.STATUS_LOOSE;\n            } else {\n                this.strict_status = Tin.STATUS_STRICT;\n            }\n            // vertices_paramsを復元\n            this.vertices_params = {\n                'forw': [compiled.vertices_params[0]],\n                'bakw': [compiled.vertices_params[1]]\n            };\n            this.vertices_params.forw[1] = [0, 1, 2, 3].map((idx) => {\n                const idxNxt = (idx + 1) % 4;\n                const tri = indexesToTri(['cent', `bbox${idx}`, `bbox${idxNxt}`], compiled.points,\n                    compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, false);\n                return featureCollection([tri]);\n            });\n            this.vertices_params.bakw[1] = [0, 1, 2, 3].map((idx) => {\n                const idxNxt = (idx + 1) % 4;\n                const tri = indexesToTri(['cent', `bbox${idx}`, `bbox${idxNxt}`], compiled.points,\n                    compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, true);\n                return featureCollection([tri]);\n            });\n            // centroidを復元\n            this.centroid = {\n                'forw': point(compiled.centroid_point[0], {\n                    'target': {\n                        'geom': compiled.centroid_point[1],\n                        'index': 'cent'\n                    }\n                }),\n                'bakw': point(compiled.centroid_point[1], {\n                    'target': {\n                        'geom': compiled.centroid_point[0],\n                        'index': 'cent'\n                    }\n                })\n            };\n            // edgesを復元\n            this.edges = compiled.edges || [];\n            this.edgeNodes = compiled.edgeNodes || [];\n            // tinsを復元\n            const bakwI = compiled.tins_points.length == 1 ? 0 : 1;\n            this.tins = {\n                'forw': featureCollection(compiled.tins_points[0].map((idxes) =>\n                    indexesToTri(idxes, compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, false)\n                )),\n                'bakw': featureCollection(compiled.tins_points[bakwI].map((idxes) =>\n                    indexesToTri(idxes, compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, true)\n                ))\n            }\n            // kinksを復元\n            if (compiled.kinks_points) {\n                this.kinks = {\n                    'bakw': featureCollection(compiled.kinks_points.map((coord) => point(coord)))\n                };\n            }\n            // yaxisModeを復元\n            if (compiled.yaxisMode) {\n                this.yaxisMode = compiled.yaxisMode;\n            } else {\n                this.yaxisMode = Tin.YAXIS_INVERT;\n            }\n            // boundsを復元\n            if (compiled.bounds) {\n                this.bounds = compiled.bounds;\n                this.boundsPolygon = compiled.boundsPolygon;\n                this.xy = compiled.xy;\n                this.wh = compiled.wh;\n            } else {\n                this.xy = [0, 0];\n                if (compiled.xy) this.wh = compiled.wh;\n                this.bounds = undefined;\n                this.boundsPolygon = undefined;\n            }\n        } else {\n            // 旧コンパイルロジック\n            this.tins = compiled.tins;\n            this.strict_status = compiled.strict_status;\n            this.pointsWeightBuffer = compiled.weight_buffer;\n            this.vertices_params = compiled.vertices_params;\n            this.centroid = compiled.centroid;\n            this.kinks = compiled.kinks;\n            const points = [];\n            for (let i = 0; i < this.tins.forw.features.length; i++) {\n                const tri = this.tins.forw.features[i];\n                ['a', 'b', 'c'].map((key, idx) => {\n                    const forw = tri.geometry.coordinates[0][idx];\n                    const bakw = tri.properties[key].geom;\n                    const pIdx = tri.properties[key].index;\n                    points[pIdx] = [forw, bakw];\n                });\n            }\n            this.points = points;\n        }\n\n        // 翻訳したオブジェクトを返す\n        return {\n            'tins': this.tins,\n            'strict_status': this.strict_status,\n            'weight_buffer': this.pointsWeightBuffer,\n            'vertices_params': this.vertices_params,\n            'centroid': this.centroid,\n            'kinks': this.kinks\n        };\n    }\n\n    getCompiled() {\n        const compiled = {};\n        /* old logic\n        compiled.tins = this.tins;\n        compiled.strict_status = this.strict_status;\n        compiled.weight_buffer = this.pointsWeightBuffer;\n        compiled.vertices_params = this.vertices_params;\n        compiled.centroid = this.centroid;\n        compiled.kinks = this.kinks;*/\n\n        // 新compileロジック\n        // points, weightBufferはそのまま保存\n        compiled.points = this.points;\n        compiled.weight_buffer = this.pointsWeightBuffer;\n        // centroidは座標の対応のみ保存\n        compiled.centroid_point = [this.centroid.forw.geometry.coordinates,\n            this.centroid.forw.properties.target.geom];\n        // vertices_paramsの最初の値はそのまま保存\n        compiled.vertices_params = [this.vertices_params.forw[0], this.vertices_params.bakw[0]];\n        // vertices_paramsの2番目の値（セントロイドと地図頂点の三角形ポリゴン）は、地図頂点座標のみ記録\n        compiled.vertices_points = [];\n        const vertices = this.vertices_params.forw[1];\n        [0, 1, 2, 3].map((i) => {\n            const vertex_data = vertices[i].features[0];\n            const forw = vertex_data.geometry.coordinates[0][1];\n            const bakw = vertex_data.properties.b.geom;\n            compiled.vertices_points[i] = [forw, bakw];\n        });\n        compiled.strict_status = this.strict_status;\n        // tinは座標インデックスのみ記録\n        compiled.tins_points = [[]];\n        this.tins.forw.features.map((tin) => {\n            compiled.tins_points[0].push(['a', 'b', 'c'].map((idx) => tin.properties[idx].index));\n        });\n        // 自動モードでエラーがある時（loose）は、逆方向のtinも記録。\n        // 厳格モードでエラーがある時（strict_error）は、エラー点情報(kinks)を記録。\n        if (this.strict_status == Tin.STATUS_LOOSE) {\n            compiled.tins_points[1] = [];\n            this.tins.bakw.features.map((tin) => {\n                compiled.tins_points[1].push(['a', 'b', 'c'].map((idx) => tin.properties[idx].index));\n            });\n        } else if (this.strict_status == Tin.STATUS_ERROR) {\n            compiled.kinks_points = this.kinks.bakw.features.map((kink) => kink.geometry.coordinates);\n        }\n\n        // yaxisMode対応\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW) {\n            compiled.yaxisMode = Tin.YAXIS_FOLLOW;\n        }\n        // bounds対応\n        if (this.bounds) {\n            compiled.bounds = this.bounds;\n            compiled.boundsPolygon = this.boundsPolygon;\n            compiled.xy = this.xy;\n            compiled.wh = this.wh;\n        } else {\n            compiled.wh = this.wh;\n        }\n        // edge対応\n        compiled.edges = this.edges;\n        compiled.edgeNodes = this.edgeNodes;\n        return compiled;\n    }\n\n    setWh(wh) {\n        this.wh = wh;\n        this.xy = [0, 0];\n        this.bounds = undefined;\n        this.boundsPolygon = undefined;\n        this.tins = undefined;\n    }\n\n    setVertexMode(mode) {\n        this.vertexMode = mode;\n        this.tins = undefined;\n    }\n\n    setStrictMode(mode) {\n        this.strictMode = mode;\n        this.tins = undefined;\n    }\n\n    calcurateStrictTinAsync() {\n        const self = this;\n        const edges = self.pointsSet.edges;\n        return Promise.all(self.tins.forw.features.map((tri) => Promise.resolve(counterTri(tri))))\n            .then((tris) => {\n                self.tins.bakw = featureCollection(tris);\n            }).then(() => {\n                const searchIndex = {};\n                return Promise.all(self.tins.forw.features.map((forTri, index) => {\n                    const bakTri = self.tins.bakw.features[index];\n                    return Promise.resolve(insertSearchIndex(searchIndex, {forw: forTri, bakw: bakTri}));\n                })).then(() => searchIndex).catch((err) => {\n                    throw err;\n                });\n            }).then((searchIndex) => [overlapCheckAsync(searchIndex), searchIndex])\n            .then((prevResult) => {\n                const overlapped = prevResult[0];\n                const searchIndex = prevResult[1];\n                if (overlapped.bakw) Object.keys(overlapped.bakw).map((key) => {\n                    if (overlapped.bakw[key] == 'Not include case') return;\n                    const trises = searchIndex[key];\n                    const forUnion = union(trises[0].forw, trises[1].forw);\n                    const forConvex = convex(featureCollection([trises[0].forw, trises[1].forw]));\n                    const forDiff = difference(forConvex, forUnion);\n                    if (forDiff) return;\n                    const splittedKey = key.split('-');\n                    if (splittedKey[0].match(/^[0-9]+$/) && splittedKey[1].match(/^[0-9]+$/)) {\n                        const numberKey = splittedKey.map((key) => parseInt(key))\n                            .sort((a, b) => a < b ? -1 : 1);\n                        for (let i = 0; i < edges.length - 1; i++) {\n                            if (numberKey[0] == edges[i][0] && numberKey[1] == edges[i][1]) return;\n                        }\n                    }\n                    const sharedVtx = splittedKey.map((val) =>\n                        ['a', 'b', 'c'].map((alpha, index) => {\n                            const prop = trises[0].bakw.properties[alpha];\n                            const geom = trises[0].bakw.geometry.coordinates[0][index];\n                            return {geom, prop};\n                        }).filter((vtx) => vtx.prop.index == val)[0]\n                    );\n                    const nonSharedVtx = trises.map((tris) =>\n                        ['a', 'b', 'c'].map((alpha, index) => {\n                            const prop = tris.bakw.properties[alpha];\n                            const geom = tris.bakw.geometry.coordinates[0][index];\n                            return {geom, prop};\n                        }).filter((vtx) => vtx.prop.index != sharedVtx[0].prop.index && vtx.prop.index != sharedVtx[1].prop.index)[0]\n                    );\n                    removeSearchIndex(searchIndex, trises[0], self.tins);\n                    removeSearchIndex(searchIndex, trises[1], self.tins);\n                    sharedVtx.map((sVtx) => {\n                        const newTriCoords = [sVtx.geom, nonSharedVtx[0].geom, nonSharedVtx[1].geom, sVtx.geom];\n                        const newTriProp = {a: sVtx.prop, b: nonSharedVtx[0].prop, c: nonSharedVtx[1].prop};\n                        const newBakTri = polygon([newTriCoords], newTriProp);\n                        const newForTri = counterTri(newBakTri);\n                        insertSearchIndex(searchIndex, {forw: newForTri, bakw: newBakTri}, self.tins);\n                    });\n                });\n\n                return Promise.all(['forw', 'bakw'].map((direc) =>\n                    new Promise((resolve) => {\n                        const coords = self.tins[direc].features.map((poly) => poly.geometry.coordinates[0]);\n                        const xy = findIntersections(coords);\n                        const retXy = internal.dedupIntersections(xy).reduce((prev, apoint, index, array) => {\n                            if (!prev) prev = {};\n                            prev[`${apoint.x}:${apoint.y}`] = apoint;\n                            if (index != array.length - 1) return prev;\n                            return Object.keys(prev).map((key) => point([prev[key].x, prev[key].y]));\n                        }, []);\n                        resolve(retXy);\n                    }).catch((err) => {\n                        throw err\n                    })\n                )).then((result) => {\n                    if (result[0].length == 0 && result[1].length == 0) {\n                        self.strict_status = Tin.STATUS_STRICT;\n                        delete self.kinks;\n                    } else {\n                        self.strict_status = Tin.STATUS_ERROR;\n                        self.kinks = {};\n                        if (result[0].length > 0) self.kinks.forw = featureCollection(result[0]);\n                        if (result[1].length > 0) self.kinks.bakw = featureCollection(result[1]);\n                    }\n                }).catch((err) => {\n                    throw err\n                });\n            }).catch((err) => {\n                throw err\n            });\n    }\n\n    generatePointsSet() {\n        const self = this;\n        const pointsArray = {forw: [], bakw: []};\n        for (let i = 0; i < self.points.length; i++) {\n            const mapxy = self.points[i][0];\n            const mercs = self.points[i][1];\n            const forPoint = createPoint(mapxy, mercs, i);\n            pointsArray.forw.push(forPoint);\n            pointsArray.bakw.push(counterPoint(forPoint));\n        }\n        const edges = [];\n        let edgeNodeIndex = 0;\n        self.edgeNodes = [];\n        if (!self.edges) self.edges = [];\n        for (let i = 0; i < self.edges.length; i++) {\n            const startEnd = self.edges[i].startEnd;\n            const illstNodes = Object.assign([], self.edges[i].illstNodes);\n            const mercNodes = Object.assign([], self.edges[i].mercNodes);\n            if (illstNodes.length === 0 && mercNodes.length === 0) {\n                edges.push(startEnd);\n                continue;\n            }\n            illstNodes.unshift(self.points[startEnd[0]][0]);\n            illstNodes.push(self.points[startEnd[1]][0]);\n            mercNodes.unshift(self.points[startEnd[0]][1]);\n            mercNodes.push(self.points[startEnd[1]][1]);\n            const lengths = [illstNodes, mercNodes].map((nodes) => {\n                const eachLengths = nodes.map((node, index, arr) => {\n                    if (index === 0) return 0;\n                    const prev = arr[index - 1];\n                    return Math.sqrt(Math.pow(node[0] - prev[0], 2) + Math.pow(node[1] - prev[1], 2));\n                });\n                const sumLengths = eachLengths.reduce((prev, node, index) => {\n                    if (index === 0) return [0];\n                    prev.push(prev[index - 1] + node);\n                    return prev;\n                }, []);\n                return sumLengths.map((eachSum, index, arr) => {\n                    const ratio = eachSum / arr[arr.length - 1];\n                    return [nodes[index], eachLengths[index], sumLengths[index], ratio];\n                });\n            });\n            lengths.map((thisLengths, i) => {\n                const anotherLengths = lengths[i ? 0 : 1];\n                return thisLengths.filter((val, index) =>\n                    index === 0 || index === thisLengths.length - 1 || val[4] === 'handled' ? false : true\n                ).map((lengthItem) => {\n                    const node = lengthItem[0];\n                    const ratio = lengthItem[3];\n                    const anotherSets = anotherLengths.reduce((prev, item, index, arr) => {\n                        if (prev) return prev;\n                        const next = arr[index + 1];\n                        if (item[3] === ratio) {\n                            item[4] = 'handled';\n                            return [item];\n                        }\n                        if (item[3] < ratio && next[3] > ratio) return [item, next];\n                        return;\n                    }, undefined);\n                    if (anotherSets.length === 1) {\n                        return i === 0 ? [node, anotherSets[0][0], ratio] : [anotherSets[0][0], node, ratio];\n                    } else {\n                        const anotherPrev = anotherSets[0];\n                        const anotherNext = anotherSets[1];\n                        const ratioDelta = ratio - anotherPrev[3];\n                        const ratioAnother = anotherNext[3] - anotherPrev[3];\n                        const ratioInEdge = ratioDelta / ratioAnother;\n                        const anotherNode = [(anotherNext[0][0] - anotherPrev[0][0]) * ratioInEdge + anotherPrev[0][0],\n                            (anotherNext[0][1] - anotherPrev[0][1]) * ratioInEdge + anotherPrev[0][1]];\n                        return i === 0 ? [node, anotherNode, ratio] : [anotherNode, node, ratio];\n                    }\n                });\n            }).reduce((prev, nodes) => prev.concat(nodes), [])\n                .sort((a, b) => a[2] < b[2] ? -1 : 1)\n                .map((node, index, arr) => {\n                    self.edgeNodes[edgeNodeIndex] = [node[0], node[1]];\n                    const forPoint = createPoint(node[0], node[1], `edgeNode${edgeNodeIndex}`);\n                    edgeNodeIndex++;\n                    pointsArray.forw.push(forPoint);\n                    pointsArray.bakw.push(counterPoint(forPoint));\n                    if (index === 0) {\n                        edges.push([startEnd[0], pointsArray.forw.length - 1]);\n                    } else {\n                        edges.push([pointsArray.forw.length - 2, pointsArray.forw.length - 1]);\n                    }\n                    if (index === arr.length - 1) {\n                        edges.push([pointsArray.forw.length - 1, startEnd[1]]);\n                    }\n                });\n        }\n        return {forw: featureCollection(pointsArray.forw), bakw: featureCollection(pointsArray.bakw), edges};\n    }\n\n    updateTinAsync() {\n        const self = this;\n        let strict = this.strictMode;\n        const minx = self.xy[0] - 0.05 * self.wh[0];\n        const maxx = self.xy[0] + 1.05 * self.wh[0];\n        const miny = self.xy[1] - 0.05 * self.wh[1];\n        const maxy = self.xy[1] + 1.05 * self.wh[1];\n\n        const insideCheck = this.bounds ? (xy) => booleanPointInPolygon(xy, self.boundsPolygon) :\n            (xy) => xy[0] >= self.xy[0] && xy[0] <= self.xy[0] + self.wh[0] && xy[1] >= self.xy[1] && xy[1] <= self.xy[1] + self.wh[1];\n        const inside = this.points.reduce((prev, curr) => prev && insideCheck(curr[0]), true);\n        if (!inside) {\n            return new Promise((resolve, reject) => {\n                reject('SOME POINTS OUTSIDE');\n            });\n        }\n\n        return new Promise((resolve) => {\n            if (strict != Tin.MODE_STRICT && strict != Tin.MODE_LOOSE) strict = Tin.MODE_AUTO;\n\n            let bbox = [];\n            if (self.wh) {\n                bbox = [\n                    [minx, miny], [maxx, miny],\n                    [minx, maxy], [maxx, maxy]\n                ];\n            }\n            const pointsSet = self.generatePointsSet();\n            resolve([pointsSet, bbox]);\n        }).then((prevResults) => {\n            const pointsSet = prevResults[0];\n\n            // Forward TIN for calcurating Backward Centroid and Backward Vertices\n            return Promise.all([\n                new Promise((resolve) => {\n                    resolve(constrainedTin(pointsSet.forw, pointsSet.edges, 'target'));\n                }),\n                new Promise((resolve) => {\n                    resolve(constrainedTin(pointsSet.bakw, pointsSet.edges, 'target'));\n                }),\n                new Promise((resolve) => {\n                    resolve(centroid(pointsSet.forw));\n                }),\n                Promise.resolve(prevResults)\n            ]).catch((err) => {\n                throw err;\n            });\n        }).then((prevResults) => {\n            const tinForCentroid = prevResults[0];\n            const tinBakCentroid = prevResults[1];\n            const forCentroidFt = prevResults[2];\n            const pointsSetBbox = prevResults[3];\n            const pointsSet = pointsSetBbox[0];\n            if (tinForCentroid.features.length == 0 || tinBakCentroid.features.length == 0) throw 'TOO LINEAR1';\n\n            // Calcurating Forward/Backward Centroid\n            const centroid = {forw: forCentroidFt.geometry.coordinates};\n            centroid.bakw = transformArr(forCentroidFt, tinForCentroid);\n            self.centroid = {forw: createPoint(centroid.forw, centroid.bakw, 'cent')};\n            self.centroid.bakw = counterPoint(self.centroid.forw);\n\n            const convexBuf = {};\n            return Promise.all([\n                new Promise((resolve) => {\n                    const forConvex = convex(pointsSet.forw).geometry.coordinates[0];\n                    let vconvex;\n                    try {\n                        vconvex = forConvex.map((forw) => ({forw, bakw: transformArr(point(forw), tinForCentroid)}));\n                    } catch (e) {\n                        throw 'TOO LINEAR2';\n                    }\n                    vconvex.map((vertex) => {\n                        convexBuf[`${vertex.forw[0]}:${vertex.forw[1]}`] = vertex;\n                    });\n                    resolve();\n                }),\n                new Promise(((resolve) => {\n                    const bakConvex = convex(pointsSet.bakw).geometry.coordinates[0];\n                    let vconvex;\n                    try {\n                        vconvex = bakConvex.map((bakw) => ({\n                            bakw,\n                            forw: transformArr(point(bakw), tinBakCentroid)\n                        }));\n                    } catch (e) {\n                        throw 'TOO LINEAR2';\n                    }\n                    vconvex.map((vertex) => {\n                        convexBuf[`${vertex.forw[0]}:${vertex.forw[1]}`] = vertex;\n                    });\n                    resolve();\n                }))\n            ]).then(() => [centroid, convexBuf, pointsSetBbox]).catch((err) => {\n                throw err;\n            });\n        }).then((prevResults) => {\n            const centroid = prevResults[0];\n            const convexBuf = prevResults[1];\n            const pointsSetBbox = prevResults[2];\n\n            // Calcurating Convex full to get Convex full polygon's vertices\n            const expandConvex = Object.keys(convexBuf).reduce((prev, key, _, array) => { // eslint-disable-line no-unused-vars\n                const forVertex = convexBuf[key].forw;\n                const bakVertex = convexBuf[key].bakw;\n                // Convexhullの各頂点に対し、重心からの差分を取る\n                const vertexDelta = {forw: [forVertex[0] - centroid.forw[0], forVertex[1] - centroid.forw[1]]};\n                vertexDelta.bakw = [bakVertex[0] - centroid.bakw[0], bakVertex[1] - centroid.bakw[1]];\n                // X軸方向、Y軸方向それぞれに対し、地図外郭XY座標との重心との比を取る\n                const xRate = vertexDelta.forw[0] == 0 ? Infinity :\n                    ((vertexDelta.forw[0] < 0 ? minx : maxx) - centroid.forw[0]) / vertexDelta.forw[0];\n                const yRate = vertexDelta.forw[1] == 0 ? Infinity :\n                    ((vertexDelta.forw[1] < 0 ? miny : maxy) - centroid.forw[1]) / vertexDelta.forw[1];\n                // xRate, yRateが同じ値であれば重心と地図頂点を結ぶ線上に乗る\n                if (Math.abs(xRate) / Math.abs(yRate) < 1.1) {\n                    const point = {\n                        forw: [vertexDelta.forw[0] * xRate + centroid.forw[0], vertexDelta.forw[1] * xRate + centroid.forw[1]],\n                        bakw: [vertexDelta.bakw[0] * xRate + centroid.bakw[0], vertexDelta.bakw[1] * xRate + centroid.bakw[1]]\n                    };\n                    if (vertexDelta.forw[0] < 0) prev[3].push(point);\n                    else prev[1].push(point);\n                }\n                if (Math.abs(yRate) / Math.abs(xRate) < 1.1) {\n                    const point = {\n                        forw: [vertexDelta.forw[0] * yRate + centroid.forw[0], vertexDelta.forw[1] * yRate + centroid.forw[1]],\n                        bakw: [vertexDelta.bakw[0] * yRate + centroid.bakw[0], vertexDelta.bakw[1] * yRate + centroid.bakw[1]]\n                    };\n                    if (vertexDelta.forw[1] < 0) prev[0].push(point);\n                    else prev[2].push(point);\n                }\n                return prev;\n            }, [[], [], [], []]);\n\n            // Calcurating Average scaling factors and rotation factors per orthants\n            let orthant = Object.keys(convexBuf).reduce((prev, key, idx, array) => {\n                const forVertex = convexBuf[key].forw;\n                const bakVertex = convexBuf[key].bakw;\n                const vertexDelta = {forw: [forVertex[0] - centroid.forw[0], forVertex[1] - centroid.forw[1]]};\n                vertexDelta.bakw = [bakVertex[0] - centroid.bakw[0], centroid.bakw[1] - bakVertex[1]];\n\n                if (vertexDelta.forw[0] == 0 || vertexDelta.forw[1] == 0) return prev;\n                let index = 0;\n                if (vertexDelta.forw[0] > 0) index += 1;\n                if (vertexDelta.forw[1] > 0) index += 2;\n                prev[index].push([vertexDelta.forw, vertexDelta.bakw]);\n                if (idx == array.length - 1) {\n                    // If some orthants have no Convex full polygon's vertices, use same average factor to every orthants\n                    return (prev.length == prev.filter((val) => val.length > 0).length && self.vertexMode == Tin.VERTEX_BIRDEYE) ? prev : prev.reduce((pre, cur) => {\n                        const ret = [pre[0].concat(cur)];\n                        return ret;\n                    }, [[]]);\n                }\n                return prev;\n            }, [[], [], [], []]).map((item) =>\n                // Finalize calcuration of Average scaling factors and rotation factors\n                item.reduce((prev, curr, index, arr) => {\n                    if (!prev) prev = [Infinity, 0, 0];\n                    // if (!prev) prev = [0, 0, 0];\n                    // var distanceSum = prev[0] + Math.sqrt(Math.pow(curr[0][0], 2) + Math.pow(curr[0][1], 2)) /\n                    //     Math.sqrt(Math.pow(curr[1][0], 2) + Math.pow(curr[1][1], 2));\n                    let distanceSum = Math.sqrt(Math.pow(curr[0][0], 2) + Math.pow(curr[0][1], 2)) /\n                        Math.sqrt(Math.pow(curr[1][0], 2) + Math.pow(curr[1][1], 2));\n                    distanceSum = distanceSum < prev[0] ? distanceSum : prev[0];\n                    const thetaDelta = Math.atan2(curr[0][0], curr[0][1]) - Math.atan2(curr[1][0], curr[1][1]);\n                    const sumThetaX = prev[1] + Math.cos(thetaDelta);\n                    const sumThetaY = prev[2] + Math.sin(thetaDelta);\n                    if (index == arr.length - 1) {\n                        // return [distanceSum / arr.length, Math.atan2(sumThetaY, sumThetaX)];\n                        return [distanceSum, Math.atan2(sumThetaY, sumThetaX)];\n                    }\n                    return [distanceSum, sumThetaX, sumThetaY];\n                }, null)\n            );\n\n            // \"Using same average factor to every orthants\" case\n            if (orthant.length == 1) orthant = [orthant[0], orthant[0], orthant[0], orthant[0]];\n\n            return [orthant, centroid, expandConvex, pointsSetBbox];\n        }).then((prevResults) => {\n            const orthant = prevResults[0];\n            const centroid = prevResults[1];\n            const expandConvex = prevResults[2];\n            const pointsSet = prevResults[3][0];\n            const bbox = prevResults[3][1];\n\n            // Calcurating Backward Bounding box of map\n            let verticesSet = orthant.map((delta, index) => {\n                const forVertex = bbox[index];\n                const forDelta = [forVertex[0] - centroid.forw[0], forVertex[1] - centroid.forw[1]];\n                const forDistance = Math.sqrt(Math.pow(forDelta[0], 2) + Math.pow(forDelta[1], 2));\n                const bakDistance = forDistance / delta[0];\n\n                const forTheta = Math.atan2(forDelta[0], forDelta[1]);\n                const bakTheta = forTheta - delta[1];\n\n                const bakVertex = [centroid.bakw[0] + bakDistance * Math.sin(bakTheta),\n                    centroid.bakw[1] - bakDistance * Math.cos(bakTheta)];\n\n                return {forw: forVertex, bakw: bakVertex};\n            });\n            const swap = verticesSet[2];\n            verticesSet[2] = verticesSet[3];\n            verticesSet[3] = swap;\n\n            // Bounding Boxの頂点を、全てのgcpが内部に入るように引き延ばす\n            const expandRate = [1, 1, 1, 1];\n            for (let i = 0; i < 4; i++) {\n                const j = (i + 1) % 4;\n                const side = lineString([verticesSet[i].bakw, verticesSet[j].bakw]);\n                const expands = expandConvex[i];\n                expands.map((expand) => {\n                    const expandLine = lineString([centroid.bakw, expand.bakw]);\n                    const intersect = lineIntersect(side, expandLine);\n                    if (intersect.features.length > 0 && intersect.features[0].geometry) {\n                        const intersect_ = intersect.features[0];\n                        const expandDist = Math.sqrt(Math.pow(expand.bakw[0] - centroid.bakw[0], 2) +\n                            Math.pow(expand.bakw[1] - centroid.bakw[1], 2));\n                        const onSideDist = Math.sqrt(Math.pow(intersect_.geometry.coordinates[0] - centroid.bakw[0], 2) +\n                            Math.pow(intersect_.geometry.coordinates[1] - centroid.bakw[1], 2));\n                        const rate = expandDist / onSideDist;\n                        if (rate > expandRate[i]) expandRate[i] = rate;\n                        if (rate > expandRate[j]) expandRate[j] = rate;\n                    }\n                });\n            }\n            verticesSet = verticesSet.map((vertex, index) => {\n                const rate = expandRate[index];\n                const point = [(vertex.bakw[0] - centroid.bakw[0]) * rate + centroid.bakw[0],\n                    (vertex.bakw[1] - centroid.bakw[1]) * rate + centroid.bakw[1]];\n                return {forw: vertex.forw, bakw: point};\n            });\n            return [verticesSet, pointsSet];\n        }).then((prevResults) => {\n            const verticesSet = prevResults[0];\n            const pointsSet = prevResults[1];\n\n            const verticesList = {forw: [], bakw: []};\n\n            for (let i = 0; i < verticesSet.length; i++) {\n                const forVertex = verticesSet[i].forw;\n                const bakVertex = verticesSet[i].bakw;\n                const forVertexFt = createPoint(forVertex, bakVertex, `bbox${i}`);\n                const bakVertexFt = counterPoint(forVertexFt);\n                pointsSet.forw.features.push(forVertexFt);\n                pointsSet.bakw.features.push(bakVertexFt);\n                verticesList.forw.push(forVertexFt);\n                verticesList.bakw.push(bakVertexFt);\n            }\n\n            self.pointsSet = pointsSet;\n            self.tins = {forw: rotateVerticesTriangle(constrainedTin(pointsSet.forw, pointsSet.edges, 'target'))};\n            let prom;\n            if (strict == Tin.MODE_STRICT || strict == Tin.MODE_AUTO) {\n                prom = self.calcurateStrictTinAsync();\n            } else {\n                prom = Promise.resolve();\n            }\n            return prom.then(() => {\n                if (strict == Tin.MODE_LOOSE || (strict == Tin.MODE_AUTO && self.strict_status == Tin.STATUS_ERROR)) {\n                    self.tins.bakw = rotateVerticesTriangle(constrainedTin(pointsSet.bakw, pointsSet.edges, 'target'));\n                    delete self.kinks;\n                    self.strict_status = Tin.STATUS_LOOSE;\n                }\n                self.vertices_params = {\n                    forw: vertexCalc(verticesList.forw, self.centroid.forw),\n                    bakw: vertexCalc(verticesList.bakw, self.centroid.bakw)\n                };\n\n                return self.calculatePointsWeightAsync();\n            }).catch((err) => {\n                throw err;\n            });\n        }).catch((err) => {\n            throw err;\n        });\n    }\n\n    transform(apoint, backward, ignoreBounds) {\n        if (backward && this.strict_status == Tin.STATUS_ERROR) throw 'Backward transform is not allowed if strict_status == \"strict_error\"';\n        // if (!this.tins) this.updateTin();\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW && backward) {\n            apoint = [apoint[0], -1 * apoint[1]];\n        }\n        const tpoint = point(apoint);\n        if (this.bounds && !backward && !ignoreBounds) {\n            if (!booleanPointInPolygon(tpoint, this.boundsPolygon)) return false;\n        }\n        const tins = backward ? this.tins.bakw : this.tins.forw;\n        const verticesParams = backward ? this.vertices_params.bakw : this.vertices_params.forw;\n        const centroid = backward ? this.centroid.bakw : this.centroid.forw;\n        const weightBuffer = backward ? this.pointsWeightBuffer.bakw : this.pointsWeightBuffer.forw;\n        let ret = transformArr(tpoint, tins, verticesParams, centroid, weightBuffer);\n        if (this.bounds && backward && !ignoreBounds) {\n            const rpoint = point(ret);\n            if (!booleanPointInPolygon(rpoint, this.boundsPolygon)) return false;\n        } else if (this.yaxisMode == Tin.YAXIS_FOLLOW && !backward) {\n            ret = [ret[0], -1 * ret[1]];\n        }\n        return ret;\n    }\n\n    calculatePointsWeightAsync() {\n        const self = this;\n        const calcTargets = ['forw'];\n        if (self.strict_status == Tin.STATUS_LOOSE) calcTargets.push('bakw');\n        const weightBuffer = {};\n        return Promise.all(calcTargets.map((target) => {\n            weightBuffer[target] = {};\n            const alreadyChecked = {};\n            const tin = self.tins[target];\n            return Promise.all(tin.features.map((tri) => {\n                const vtxes = ['a', 'b', 'c'];\n                return new Promise(((resolve) => {\n                    for (let i = 0; i < 3; i++) {\n                        const j = (i + 1) % 3;\n                        const vi = vtxes[i];\n                        const vj = vtxes[j];\n                        const indexi = tri.properties[vi].index;\n                        const indexj = tri.properties[vj].index;\n                        const key = [indexi, indexj].sort().join('-');\n                        if (!alreadyChecked[key]) {\n                            const fromi = tri.geometry.coordinates[0][i];\n                            const fromj = tri.geometry.coordinates[0][j];\n                            const toi = tri.properties[vi].geom;\n                            const toj = tri.properties[vj].geom;\n                            alreadyChecked[key] = 1;\n\n                            const weight = Math.sqrt(Math.pow(toi[0] - toj[0], 2) + Math.pow(toi[1] - toj[1], 2)) /\n                                Math.sqrt(Math.pow(fromi[0] - fromj[0], 2) + Math.pow(fromi[1] - fromj[1], 2));\n\n                            if (!weightBuffer[target][indexi]) weightBuffer[target][indexi] = {};\n                            if (!weightBuffer[target][indexj]) weightBuffer[target][indexj] = {};\n                            weightBuffer[target][indexi][key] = weight;\n                            weightBuffer[target][indexj][key] = weight;\n                        }\n                    }\n                    resolve();\n                }));\n            })).catch((err) => {\n                throw err;\n            });\n        })).then(() => {\n            const pointsWeightBuffer = {};\n            calcTargets.map((target) => {\n                pointsWeightBuffer[target] = {};\n                if (self.strict_status == Tin.STATUS_STRICT) pointsWeightBuffer['bakw'] = {};\n                Object.keys(weightBuffer[target]).map((vtx) => {\n                    pointsWeightBuffer[target][vtx] = Object.keys(weightBuffer[target][vtx]).reduce((prev, key, idx, arr) => {\n                        prev = prev + weightBuffer[target][vtx][key];\n                        return idx == arr.length - 1 ? prev / arr.length : prev;\n                    }, 0);\n                    if (self.strict_status == Tin.STATUS_STRICT) pointsWeightBuffer['bakw'][vtx] = 1 / pointsWeightBuffer[target][vtx];\n                });\n                pointsWeightBuffer[target]['cent'] = [0, 1, 2, 3].reduce((prev, curr) => {\n                    const key = `bbox${curr}`;\n                    prev = prev + pointsWeightBuffer[target][key];\n                    return curr == 3 ? prev / 4 : prev;\n                }, 0);\n                if (self.strict_status == Tin.STATUS_STRICT) pointsWeightBuffer['bakw']['cent'] = 1 / pointsWeightBuffer[target]['cent'];\n            });\n            self.pointsWeightBuffer = pointsWeightBuffer;\n        }).catch((err) => {\n            throw err;\n        });\n    }\n}\n\nTin.VERTEX_PLAIN = 'plain';\nTin.VERTEX_BIRDEYE = 'birdeye';\nTin.MODE_STRICT = 'strict';\nTin.MODE_AUTO = 'auto';\nTin.MODE_LOOSE = 'loose';\nTin.STATUS_STRICT = 'strict';\nTin.STATUS_ERROR = 'strict_error';\nTin.STATUS_LOOSE = 'loose';\nTin.YAXIS_FOLLOW = 'follow';\nTin.YAXIS_INVERT = 'invert';\n\nfunction rotateVerticesTriangle(tins) {\n    const features = tins.features;\n    for (let i=0; i<features.length; i++) {\n        const feature = features[i];\n        if ((`${feature.properties.a.index}`).substring(0, 4) == 'bbox' &&\n            (`${feature.properties.b.index}`).substring(0, 4) == 'bbox') {\n            features[i] = {\n                geometry: {\n                    type: 'Polygon',\n                    coordinates: [\n                        [feature.geometry.coordinates[0][2], feature.geometry.coordinates[0][0], feature.geometry.coordinates[0][1],\n                            feature.geometry.coordinates[0][2]]\n                    ]\n                },\n                properties: {\n                    a: {\n                        geom: feature.properties.c.geom,\n                        index: feature.properties.c.index\n                    },\n                    b: {\n                        geom: feature.properties.a.geom,\n                        index: feature.properties.a.index\n                    },\n                    c: {\n                        geom: feature.properties.b.geom,\n                        index: feature.properties.b.index\n                    }\n                },\n                type: 'Feature'\n            };\n        } else if ((`${feature.properties.c.index}`).substring(0, 4) == 'bbox' &&\n            (`${feature.properties.a.index}`).substring(0, 4) == 'bbox') {\n            features[i] = {\n                geometry: {\n                    type: 'Polygon',\n                    coordinates: [\n                        [feature.geometry.coordinates[0][1], feature.geometry.coordinates[0][2], feature.geometry.coordinates[0][0],\n                            feature.geometry.coordinates[0][1]]\n                    ]\n                },\n                properties: {\n                    a: {\n                        geom: feature.properties.b.geom,\n                        index: feature.properties.b.index\n                    },\n                    b: {\n                        geom: feature.properties.c.geom,\n                        index: feature.properties.c.index\n                    },\n                    c: {\n                        geom: feature.properties.a.geom,\n                        index: feature.properties.a.index\n                    }\n                },\n                type: 'Feature'\n            };\n        }\n    }\n    return tins;\n}\n\nfunction findIntersections(coords) {\n    const arcs = new internal.ArcCollection(coords);\n    return internal.findSegmentIntersections(arcs);\n}\n\nfunction vertexCalc(list, centroid) {\n    const centCoord = centroid.geometry.coordinates;\n    return [0, 1, 2, 3].map((i) => {\n        const j = (i + 1) % 4;\n        const itemi = list[i];\n        const itemj = list[j];\n        const coord = itemi.geometry.coordinates;\n        const radian = Math.atan2(coord[0] - centCoord[0], coord[1] - centCoord[1]);\n        const coordinates = [centroid, itemi, itemj, centroid].map((point) => point.geometry.coordinates);\n        const properties = {\n            a: {geom: centroid.properties.target.geom, index: centroid.properties.target.index},\n            b: {geom: itemi.properties.target.geom, index: itemi.properties.target.index},\n            c: {geom: itemj.properties.target.geom, index: itemj.properties.target.index}\n        };\n        const tin = featureCollection([polygon([coordinates], properties)]);\n\n        return [radian, tin];\n    }).reduce((prev, curr) => {\n        prev[0].push(curr[0]);\n        prev[1].push(curr[1]);\n        return prev;\n    }, [[], []]);\n}\n\nfunction normalizeRadian(target, noNegative) {\n    const rangeFunc = noNegative ? function(val) {\n        return !(val >= 0 && val < Math.PI * 2);\n    } : function(val) {\n        return !(val > -1 * Math.PI && val <= Math.PI);\n    };\n    while (rangeFunc(target)) {\n        target = target + 2 * Math.PI * (target > 0 ? -1 : 1);\n    }\n    return target;\n}\n\nfunction decideUseVertex(radian, radianList) {\n    let idel = normalizeRadian(radian - radianList[0]);\n    let minTheta = Math.PI * 2;\n    let minIndex;\n    for (let i = 0; i < radianList.length; i++) {\n        const j = (i + 1) % radianList.length;\n        const jdel = normalizeRadian(radian - radianList[j]);\n        const minDel = Math.min(Math.abs(idel), Math.abs(jdel));\n        if (idel * jdel <= 0 && minDel < minTheta) {\n            minTheta = minDel;\n            minIndex = i;\n        }\n        idel = jdel;\n    }\n    return minIndex;\n}\n\nfunction createPoint(xy, geom, index) {\n    return point(xy, {target: {geom, index}});\n}\n\nfunction counterPoint(apoint) {\n    return point(apoint.properties.target.geom, {target: {geom: apoint.geometry.coordinates,\n            index: apoint.properties.target.index}});\n}\n\nfunction transformTin(of, tri, weightBuffer) { // eslint-disable-line no-unused-vars\n    return point(transformTinArr(of, tri, weightBuffer));\n}\nfunction transformTinArr(of, tri, weightBuffer) {\n    const a = tri.geometry.coordinates[0][0];\n    const b = tri.geometry.coordinates[0][1];\n    const c = tri.geometry.coordinates[0][2];\n    const o = of.geometry.coordinates;\n    const ad = tri.properties.a.geom;\n    const bd = tri.properties.b.geom;\n    const cd = tri.properties.c.geom;\n\n    const ab = [b[0] -a[0], b[1] -a[1]];\n    const ac = [c[0] -a[0], c[1] -a[1]];\n    const ao = [o[0] -a[0], o[1] -a[1]];\n    const abd = [bd[0]-ad[0], bd[1]-ad[1]];\n    const acd = [cd[0]-ad[0], cd[1]-ad[1]];\n\n    let abv = (ac[1]*ao[0]-ac[0]*ao[1])/(ab[0]*ac[1]-ab[1]*ac[0]);\n    let acv = (ab[0]*ao[1]-ab[1]*ao[0])/(ab[0]*ac[1]-ab[1]*ac[0]);\n\n    // Considering weight\n    if (weightBuffer) {\n        const aW = weightBuffer[tri.properties.a.index];\n        const bW = weightBuffer[tri.properties.b.index];\n        const cW = weightBuffer[tri.properties.c.index];\n\n        let nabv;\n        if (abv < 0 || acv < 0 || 1 - abv - acv < 0) {\n            const normB = abv / (abv + acv);\n            const normC = acv / (abv + acv);\n            nabv = abv / bW / (normB / bW + normC / cW);\n            acv = acv / cW / (normB / bW + normC / cW);\n        } else {\n            nabv = abv / bW / (abv / bW + acv / cW + (1 - abv - acv) / aW);\n            acv = acv / cW / (abv / bW + acv / cW + (1 - abv - acv) / aW);\n        }\n        abv = nabv;\n    }\n    const od = [abv*abd[0]+acv*acd[0]+ad[0], abv*abd[1]+acv*acd[1]+ad[1]];\n    return od;\n}\n\nfunction useVertices(o, verticesParams, centroid, weightBuffer) { // eslint-disable-line no-unused-vars\n    return point(useVerticesArr(o, verticesParams, centroid, weightBuffer));\n}\nfunction useVerticesArr(o, verticesParams, centroid, weightBuffer) {\n    const coord = o.geometry.coordinates;\n    const centCoord = centroid.geometry.coordinates;\n    const radian = Math.atan2(coord[0] - centCoord[0], coord[1] - centCoord[1]);\n    const index = decideUseVertex(radian, verticesParams[0]);\n    const tin = verticesParams[1][index];\n    return transformTinArr(o, tin.features[0], weightBuffer);\n}\n\nfunction hit(point, tins) {\n    for (let i=0; i< tins.features.length; i++) {\n        const inside = booleanPointInPolygon(point, tins.features[i]);\n        if (inside) {\n            return tins.features[i];\n        }\n    }\n}\n\nfunction transform(point, tins, verticesParams, centroid, weightBuffer) { // eslint-disable-line no-unused-vars\n    return point(transformArr(point, tins, verticesParams, centroid, weightBuffer));\n}\nfunction transformArr(point, tins, verticesParams, centroid, weightBuffer) {\n    const tin = hit(point, tins);\n    return tin ? transformTinArr(point, tin, weightBuffer) : useVerticesArr(point, verticesParams, centroid, weightBuffer);\n}\n\nfunction counterTri(tri) {\n    const coordinates = ['a', 'b', 'c', 'a'].map((key) => tri.properties[key].geom);\n    const geoms = tri.geometry.coordinates[0];\n    const props = tri.properties;\n    const properties = {\n        a: {geom: geoms[0], index: props['a'].index},\n        b: {geom: geoms[1], index: props['b'].index},\n        c: {geom: geoms[2], index: props['c'].index}\n    };\n    return polygon([coordinates], properties);\n}\n\nfunction buildTri(points) {\n    const coordinates = [0, 1, 2, 0].map((i) => points[i][0][0]);\n    const properties = {\n        a: {geom: points[0][0][1], index: points[0][1]},\n        b: {geom: points[1][0][1], index: points[1][1]},\n        c: {geom: points[2][0][1], index: points[2][1]}\n    };\n    return polygon([coordinates], properties);\n}\n\nfunction indexesToTri(indexes, points, edgeNodes, cent, bboxes, bakw) {\n    const points_ = indexes.map((index) => {\n        const point_base = isFinite(index) ? points[index] :\n            index == 'cent' ? cent :\n                index == 'bbox0' ? bboxes[0] :\n                    index == 'bbox1' ? bboxes[1] :\n                        index == 'bbox2' ? bboxes[2] :\n                            index == 'bbox3' ? bboxes[3] :\n                                (function() {\n                                    const match = index.match(/edgeNode(\\d+)/);\n                                    if (match) {\n                                        const nodeIndex = parseInt(match[1]);\n                                        return edgeNodes[nodeIndex];\n                                    }\n                                    return undefined;\n                                })();\n        return bakw ? [[point_base[1], point_base[0]], index] :\n            [[point_base[0], point_base[1]], index];\n    });\n    return buildTri(points_);\n}\n\nfunction overlapCheckAsync(searchIndex) {\n    const retValue = {forw: {}, bakw: {}};\n    return Promise.all(Object.keys(searchIndex).map((key) => new Promise(((resolve) => {\n            const searchResult = searchIndex[key];\n            if (searchResult.length < 2) return resolve();\n            ['forw', 'bakw'].map((dir) => {\n                const result = intersect(searchResult[0][dir], searchResult[1][dir]);\n                if (!result || result.geometry.type == 'Point' || result.geometry.type == 'LineString') return resolve();\n                //const diff1 = difference(searchResult[0][dir], result);\n                //const diff2 = difference(searchResult[1][dir], result);\n                /* if (!diff1 || !diff2) {\n                    searchResult[dir][key] = 'Include case';\n                } else {\n                    searchResult[dir][key] = 'Not include case';\n                }*/\n                resolve();\n            });\n        })))).then(() => {\n        if (Object.keys(retValue.forw).length == 0) delete retValue.forw;\n        if (Object.keys(retValue.bakw).length == 0) delete retValue.bakw;\n        return retValue;\n    }).catch((err) => {\n        throw err;\n    });\n}\n\nfunction insertSearchIndex(searchIndex, tris, tins) {\n    const keys = calcSearchKeys(tris.forw);\n    const bakKeys = calcSearchKeys(tris.bakw);\n    if (JSON.stringify(keys) != JSON.stringify(bakKeys))\n        throw `${JSON.stringify(tris, null, 2)}\\n${JSON.stringify(keys)}\\n${JSON.stringify(bakKeys)}`;\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!searchIndex[key]) searchIndex[key] = [];\n        searchIndex[key].push(tris);\n    }\n    if (tins) {\n        tins.forw.features.push(tris.forw);\n        tins.bakw.features.push(tris.bakw);\n    }\n}\n\nfunction removeSearchIndex(searchIndex, tris, tins) {\n    const keys = calcSearchKeys(tris.forw);\n    const bakKeys = calcSearchKeys(tris.bakw);\n    if (JSON.stringify(keys) != JSON.stringify(bakKeys))\n        throw `${JSON.stringify(tris, null, 2)}\\n${JSON.stringify(keys)}\\n${JSON.stringify(bakKeys)}`;\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const newArray = searchIndex[key].filter((eachTris) => eachTris.forw != tris.forw);\n        if (newArray.length == 0) delete searchIndex[key];\n        else searchIndex[key] = newArray;\n    }\n    if (tins) {\n        let newArray = tins.forw.features.filter((eachTri) => eachTri != tris.forw);\n        tins.forw.features = newArray;\n        newArray = tins.bakw.features.filter((eachTri) => eachTri != tris.bakw);\n        tins.bakw.features = newArray;\n    }\n}\n\nfunction calcSearchKeys(tri) {\n    const vtx = ['a', 'b', 'c'].map((key) => tri.properties[key].index);\n    return [[0, 1], [0, 2], [1, 2], [0, 1, 2]].map((set) => {\n        const index = set.map((i) => vtx[i]).sort().join('-');\n        return index;\n    }).sort();\n}\n\nexport default Tin;\nif (typeof module === \"object\" && module.exports) { // eslint-disable-line no-undef\n    module.exports = Tin; // eslint-disable-line no-undef\n}\n"],"file":"index.js"}