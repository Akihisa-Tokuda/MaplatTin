{"version":3,"sources":["../src/index.js"],"names":["Tin","options","bounds","setBounds","setWh","wh","vertexMode","VERTEX_PLAIN","strictMode","MODE_AUTO","yaxisMode","YAXIS_INVERT","importance","priority","stateFull","points","setPoints","edges","setEdges","YAXIS_FOLLOW","map","point","tins","undefined","indexedTins","edgeNodes","minx","miny","maxx","maxy","coords","i","length","xy","push","boundsPolygon","compiled","tins_points","pointsWeightBuffer","weight_buffer","strict_status","kinks_points","STATUS_ERROR","STATUS_LOOSE","STATUS_STRICT","vertices_params","forw","idx","idxNxt","tri","indexesToTri","centroid_point","vertices_points","bakw","centroid","bakwI","idxes","addIndexedTin","kinks","coord","features","key","geometry","coordinates","properties","geom","pIdx","index","target","vertices","vertex_data","b","tin","kink","gridNum","Math","ceil","sqrt","forwBound","bakwBound","forwEachBound","eachBound","Array","from","forwXUnit","forwYUnit","forwGridCache","reduce","prev","bound","normXMin","unitCalc","normXMax","normYMin","normYMax","cx","cy","bakwEachBound","bakwXUnit","bakwYUnit","bakwGridCache","xOrigin","yOrigin","xUnit","yUnit","gridCache","mode","self","pointsSet","Promise","all","resolve","counterTri","then","tris","searchIndex","forTri","bakTri","insertSearchIndex","err","overlapCheckAsync","prevResult","overlapped","Object","keys","trises","forUnion","forConvex","forDiff","splittedKey","split","match","numberKey","parseInt","sort","a","sharedVtx","val","alpha","prop","filter","vtx","nonSharedVtx","removeSearchIndex","sVtx","newTriCoords","newTriProp","c","newBakTri","newForTri","direc","poly","findIntersections","retXy","internal","dedupIntersections","apoint","array","x","y","result","pointsArray","mapxy","mercs","forPoint","createPoint","counterPoint","edgeNodeIndex","startEnd","illstNodes","assign","mercNodes","unshift","lengths","nodes","eachLengths","node","arr","pow","sumLengths","eachSum","ratio","thisLengths","anotherLengths","lengthItem","anotherSets","item","next","anotherPrev","anotherNext","ratioDelta","ratioAnother","ratioInEdge","anotherNode","concat","strict","insideCheck","inside","curr","reject","MODE_STRICT","MODE_LOOSE","bbox","generatePointsSet","prevResults","tinForCentroid","tinBakCentroid","forCentroidFt","pointsSetBbox","transformArr","convexBuf","vconvex","e","vertex","bakConvex","expandConvex","_","forVertex","bakVertex","vertexDelta","xRate","Infinity","yRate","abs","orthant","VERTEX_BIRDEYE","pre","cur","ret","distanceSum","thetaDelta","atan2","sumThetaX","cos","sumThetaY","sin","verticesSet","delta","forDelta","forDistance","bakDistance","forTheta","bakTheta","swap","expandRate","j","side","expands","expand","expandLine","intersect","intersect_","expandDist","onSideDist","rate","verticesList","forVertexFt","bakVertexFt","rotateVerticesTriangle","prom","calcurateStrictTinAsync","vertexCalc","calculatePointsWeightAsync","backward","ignoreBounds","tpoint","verticesParams","weightBuffer","stateTriangle","stateSetFunc","stateBackward","rpoint","calcTargets","alreadyChecked","vtxes","vi","vj","indexi","indexj","join","fromi","fromj","toi","toj","weight","feature","substring","type","arcs","ArcCollection","findSegmentIntersections","list","centCoord","itemi","itemj","radian","normalizeRadian","noNegative","rangeFunc","PI","decideUseVertex","radianList","idel","minTheta","minIndex","jdel","minDel","min","transformTin","of","transformTinArr","o","ad","bd","cd","ab","ac","ao","abd","acd","abv","acv","aW","bW","cW","nabv","normB","normC","od","useVertices","useVerticesArr","hit","origin","unit","normCoord","floor","transform","normX","normY","tinsKey","geoms","props","buildTri","indexes","cent","bboxes","points_","point_base","isFinite","nodeIndex","retValue","searchResult","dir","calcSearchKeys","bakKeys","JSON","stringify","newArray","eachTris","eachTri","set","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport { polygon, featureCollection, point, lineString } from '@turf/helpers';\r\nimport union from '@turf/union';\r\nimport convex from '@turf/convex';\r\nimport difference from '@turf/difference';\r\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\r\nimport centroid from '@turf/centroid';\r\nimport lineIntersect from '@turf/line-intersect';\r\nimport intersect from '@turf/intersect';\r\nimport {getCoords} from '@turf/invariant';\r\n\r\nimport internal from './mapshaper-maplat';\r\nimport constrainedTin from './constrained-tin';\r\n\r\nclass Tin {\r\n    constructor(options) {\r\n        options = options || {};\r\n        if (options.bounds) {\r\n            this.setBounds(options.bounds);\r\n        } else {\r\n            this.setWh(options.wh);\r\n            this.vertexMode = options.vertexMode || Tin.VERTEX_PLAIN;\r\n        }\r\n        this.strictMode = options.strictMode || Tin.MODE_AUTO;\r\n        this.yaxisMode = options.yaxisMode || Tin.YAXIS_INVERT;\r\n        this.importance = options.importance || 0;\r\n        this.priority = options.priority || 0;\r\n        this.stateFull = options.stateFull;\r\n        if (options.points) {\r\n            this.setPoints(options.points);\r\n        }\r\n        if (options.edges) {\r\n            this.setEdges(options.edges);\r\n        }\r\n    }\r\n\r\n    setPoints(points) {\r\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW) {\r\n            points = points.map((point) => {\r\n                [point[0], [point[1][0], -1 * point[1][1]]]\r\n            });\r\n        }\r\n        this.points = points;\r\n        this.tins = undefined;\r\n        this.indexedTins = undefined;\r\n    }\r\n\r\n    setEdges(edges) {\r\n        if (!edges) edges = [];\r\n        this.edges = edges;\r\n        this.edgeNodes = undefined;\r\n        this.tins = undefined;\r\n        this.indexedTins = undefined;\r\n    }\r\n\r\n    setBounds(bounds) {\r\n        this.bounds = bounds;\r\n        let minx, miny, maxx, maxy, coords;\r\n        for (let i = 0; i < bounds.length; i++) {\r\n            const xy = bounds[i];\r\n            if (i == 0) {\r\n                minx = maxx = xy[0];\r\n                miny = maxy = xy[1];\r\n                coords = [xy];\r\n            } else {\r\n                if (xy[0] < minx) minx = xy[0];\r\n                if (xy[0] > maxx) maxx = xy[0];\r\n                if (xy[1] < miny) miny = xy[1];\r\n                if (xy[1] > maxy) maxy = xy[1];\r\n                coords.push(xy);\r\n            }\r\n        }\r\n        coords.push(bounds[0]);\r\n        this.boundsPolygon = polygon([coords]);\r\n        this.xy = [minx, miny];\r\n        this.wh = [maxx - minx, maxy - miny];\r\n        this.vertexMode = Tin.VERTEX_PLAIN;\r\n        this.tins = undefined;\r\n        this.indexedTins = undefined;\r\n    }\r\n\r\n    setCompiled(compiled) {\r\n        if (!compiled.tins && compiled.points && compiled.tins_points) {\r\n            // 新コンパイルロジック\r\n            // pointsはそのままpoints, weightBufferも\r\n            this.points = compiled.points;\r\n            this.pointsWeightBuffer = compiled.weight_buffer;\r\n            // kinksやtinsの存在状況でstrict_statusを判定\r\n            if (compiled.strict_status) {\r\n                this.strict_status = compiled.strict_status;\r\n            } else if (compiled.kinks_points) {\r\n                this.strict_status = Tin.STATUS_ERROR;\r\n            } else if (compiled.tins_points.length == 2) {\r\n                this.strict_status = Tin.STATUS_LOOSE;\r\n            } else {\r\n                this.strict_status = Tin.STATUS_STRICT;\r\n            }\r\n            // vertices_paramsを復元\r\n            this.vertices_params = {\r\n                'forw': [compiled.vertices_params[0]],\r\n                'bakw': [compiled.vertices_params[1]]\r\n            };\r\n            this.vertices_params.forw[1] = [0, 1, 2, 3].map((idx) => {\r\n                const idxNxt = (idx + 1) % 4;\r\n                const tri = indexesToTri(['cent', `bbox${idx}`, `bbox${idxNxt}`], compiled.points,\r\n                    compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, false);\r\n                return featureCollection([tri]);\r\n            });\r\n            this.vertices_params.bakw[1] = [0, 1, 2, 3].map((idx) => {\r\n                const idxNxt = (idx + 1) % 4;\r\n                const tri = indexesToTri(['cent', `bbox${idx}`, `bbox${idxNxt}`], compiled.points,\r\n                    compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, true);\r\n                return featureCollection([tri]);\r\n            });\r\n            // centroidを復元\r\n            this.centroid = {\r\n                'forw': point(compiled.centroid_point[0], {\r\n                    'target': {\r\n                        'geom': compiled.centroid_point[1],\r\n                        'index': 'cent'\r\n                    }\r\n                }),\r\n                'bakw': point(compiled.centroid_point[1], {\r\n                    'target': {\r\n                        'geom': compiled.centroid_point[0],\r\n                        'index': 'cent'\r\n                    }\r\n                })\r\n            };\r\n            // edgesを復元\r\n            this.edges = compiled.edges || [];\r\n            this.edgeNodes = compiled.edgeNodes || [];\r\n            // tinsを復元\r\n            const bakwI = compiled.tins_points.length == 1 ? 0 : 1;\r\n            this.tins = {\r\n                'forw': featureCollection(compiled.tins_points[0].map((idxes) =>\r\n                    indexesToTri(idxes, compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, false)\r\n                )),\r\n                'bakw': featureCollection(compiled.tins_points[bakwI].map((idxes) =>\r\n                    indexesToTri(idxes, compiled.points, compiled.edgeNodes || [], compiled.centroid_point, compiled.vertices_points, true)\r\n                ))\r\n            }\r\n            this.addIndexedTin();\r\n            // kinksを復元\r\n            if (compiled.kinks_points) {\r\n                this.kinks = {\r\n                    'bakw': featureCollection(compiled.kinks_points.map((coord) => point(coord)))\r\n                };\r\n            }\r\n            // yaxisModeを復元\r\n            if (compiled.yaxisMode) {\r\n                this.yaxisMode = compiled.yaxisMode;\r\n            } else {\r\n                this.yaxisMode = Tin.YAXIS_INVERT;\r\n            }\r\n            // boundsを復元\r\n            if (compiled.bounds) {\r\n                this.bounds = compiled.bounds;\r\n                this.boundsPolygon = compiled.boundsPolygon;\r\n                this.xy = compiled.xy;\r\n                this.wh = compiled.wh;\r\n            } else {\r\n                this.xy = [0, 0];\r\n                if (compiled.xy) this.wh = compiled.wh;\r\n                this.bounds = undefined;\r\n                this.boundsPolygon = undefined;\r\n            }\r\n        } else {\r\n            // 旧コンパイルロジック\r\n            this.tins = compiled.tins;\r\n            this.addIndexedTin();\r\n            this.strict_status = compiled.strict_status;\r\n            this.pointsWeightBuffer = compiled.weight_buffer;\r\n            this.vertices_params = compiled.vertices_params;\r\n            this.centroid = compiled.centroid;\r\n            this.kinks = compiled.kinks;\r\n            const points = [];\r\n            for (let i = 0; i < this.tins.forw.features.length; i++) {\r\n                const tri = this.tins.forw.features[i];\r\n                ['a', 'b', 'c'].map((key, idx) => {\r\n                    const forw = tri.geometry.coordinates[0][idx];\r\n                    const bakw = tri.properties[key].geom;\r\n                    const pIdx = tri.properties[key].index;\r\n                    points[pIdx] = [forw, bakw];\r\n                });\r\n            }\r\n            this.points = points;\r\n        }\r\n\r\n        // 翻訳したオブジェクトを返す\r\n        return {\r\n            'tins': this.tins,\r\n            'strict_status': this.strict_status,\r\n            'weight_buffer': this.pointsWeightBuffer,\r\n            'vertices_params': this.vertices_params,\r\n            'centroid': this.centroid,\r\n            'kinks': this.kinks\r\n        };\r\n    }\r\n\r\n    getCompiled() {\r\n        const compiled = {};\r\n        /* old logic\r\n        compiled.tins = this.tins;\r\n        compiled.strict_status = this.strict_status;\r\n        compiled.weight_buffer = this.pointsWeightBuffer;\r\n        compiled.vertices_params = this.vertices_params;\r\n        compiled.centroid = this.centroid;\r\n        compiled.kinks = this.kinks;*/\r\n\r\n        // 新compileロジック\r\n        // points, weightBufferはそのまま保存\r\n        compiled.points = this.points;\r\n        compiled.weight_buffer = this.pointsWeightBuffer;\r\n        // centroidは座標の対応のみ保存\r\n        compiled.centroid_point = [this.centroid.forw.geometry.coordinates,\r\n            this.centroid.forw.properties.target.geom];\r\n        // vertices_paramsの最初の値はそのまま保存\r\n        compiled.vertices_params = [this.vertices_params.forw[0], this.vertices_params.bakw[0]];\r\n        // vertices_paramsの2番目の値（セントロイドと地図頂点の三角形ポリゴン）は、地図頂点座標のみ記録\r\n        compiled.vertices_points = [];\r\n        const vertices = this.vertices_params.forw[1];\r\n        [0, 1, 2, 3].map((i) => {\r\n            const vertex_data = vertices[i].features[0];\r\n            const forw = vertex_data.geometry.coordinates[0][1];\r\n            const bakw = vertex_data.properties.b.geom;\r\n            compiled.vertices_points[i] = [forw, bakw];\r\n        });\r\n        compiled.strict_status = this.strict_status;\r\n        // tinは座標インデックスのみ記録\r\n        compiled.tins_points = [[]];\r\n        this.tins.forw.features.map((tin) => {\r\n            compiled.tins_points[0].push(['a', 'b', 'c'].map((idx) => tin.properties[idx].index));\r\n        });\r\n        // 自動モードでエラーがある時（loose）は、逆方向のtinも記録。\r\n        // 厳格モードでエラーがある時（strict_error）は、エラー点情報(kinks)を記録。\r\n        if (this.strict_status == Tin.STATUS_LOOSE) {\r\n            compiled.tins_points[1] = [];\r\n            this.tins.bakw.features.map((tin) => {\r\n                compiled.tins_points[1].push(['a', 'b', 'c'].map((idx) => tin.properties[idx].index));\r\n            });\r\n        } else if (this.strict_status == Tin.STATUS_ERROR) {\r\n            compiled.kinks_points = this.kinks.bakw.features.map((kink) => kink.geometry.coordinates);\r\n        }\r\n\r\n        // yaxisMode対応\r\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW) {\r\n            compiled.yaxisMode = Tin.YAXIS_FOLLOW;\r\n        }\r\n        // bounds対応\r\n        if (this.bounds) {\r\n            compiled.bounds = this.bounds;\r\n            compiled.boundsPolygon = this.boundsPolygon;\r\n            compiled.xy = this.xy;\r\n            compiled.wh = this.wh;\r\n        } else {\r\n            compiled.wh = this.wh;\r\n        }\r\n        // edge対応\r\n        compiled.edges = this.edges;\r\n        compiled.edgeNodes = this.edgeNodes;\r\n        return compiled;\r\n    }\r\n\r\n    addIndexedTin() {\r\n        const tins = this.tins;\r\n        const forw = tins.forw;\r\n        const bakw = tins.bakw;\r\n        const gridNum = Math.ceil(Math.sqrt(forw.features.length));\r\n        if (gridNum < 3) {\r\n            this.indexedTins = undefined;\r\n            return;\r\n        }\r\n        let forwBound = null;\r\n        let bakwBound = null;\r\n        const forwEachBound = forw.features.map((tri) => {\r\n            let eachBound = null;\r\n            getCoords(tri)[0].map((point) => {\r\n                if (forwBound == null) forwBound = [Array.from(point), Array.from(point)];\r\n                else {\r\n                    if (point[0] < forwBound[0][0]) forwBound[0][0] = point[0];\r\n                    if (point[0] > forwBound[1][0]) forwBound[1][0] = point[0];\r\n                    if (point[1] < forwBound[0][1]) forwBound[0][1] = point[1];\r\n                    if (point[1] > forwBound[1][1]) forwBound[1][1] = point[1];\r\n                }\r\n                if (eachBound == null) eachBound = [Array.from(point), Array.from(point)];\r\n                else {\r\n                    if (point[0] < eachBound[0][0]) eachBound[0][0] = point[0];\r\n                    if (point[0] > eachBound[1][0]) eachBound[1][0] = point[0];\r\n                    if (point[1] < eachBound[0][1]) eachBound[0][1] = point[1];\r\n                    if (point[1] > eachBound[1][1]) eachBound[1][1] = point[1];\r\n                }\r\n            });\r\n            return eachBound;\r\n        });\r\n        const forwXUnit = (forwBound[1][0] - forwBound[0][0]) / gridNum;\r\n        const forwYUnit = (forwBound[1][1] - forwBound[0][1]) / gridNum;\r\n        const forwGridCache = forwEachBound.reduce((prev, bound, index) => {\r\n            const normXMin = unitCalc(bound[0][0], forwBound[0][0], forwXUnit, gridNum);\r\n            const normXMax = unitCalc(bound[1][0], forwBound[0][0], forwXUnit, gridNum);\r\n            const normYMin = unitCalc(bound[0][1], forwBound[0][1], forwYUnit, gridNum);\r\n            const normYMax = unitCalc(bound[1][1], forwBound[0][1], forwYUnit, gridNum);\r\n            for (let cx = normXMin; cx <= normXMax; cx++) {\r\n                if (!prev[cx]) prev[cx] = [];\r\n                for (let cy = normYMin; cy <= normYMax; cy++) {\r\n                    if (!prev[cx][cy]) prev[cx][cy] = [];\r\n                    prev[cx][cy].push(index);\r\n                }\r\n            }\r\n            return prev;\r\n        }, []);\r\n        const bakwEachBound = bakw.features.map((tri) => {\r\n            let eachBound = null;\r\n            getCoords(tri)[0].map((point) => {\r\n                if (bakwBound == null) bakwBound = [Array.from(point), Array.from(point)];\r\n                else {\r\n                    if (point[0] < bakwBound[0][0]) bakwBound[0][0] = point[0];\r\n                    if (point[0] > bakwBound[1][0]) bakwBound[1][0] = point[0];\r\n                    if (point[1] < bakwBound[0][1]) bakwBound[0][1] = point[1];\r\n                    if (point[1] > bakwBound[1][1]) bakwBound[1][1] = point[1];\r\n                }\r\n                if (eachBound == null) eachBound = [Array.from(point), Array.from(point)];\r\n                else {\r\n                    if (point[0] < eachBound[0][0]) eachBound[0][0] = point[0];\r\n                    if (point[0] > eachBound[1][0]) eachBound[1][0] = point[0];\r\n                    if (point[1] < eachBound[0][1]) eachBound[0][1] = point[1];\r\n                    if (point[1] > eachBound[1][1]) eachBound[1][1] = point[1];\r\n                }\r\n            });\r\n            return eachBound;\r\n        });\r\n        const bakwXUnit = (bakwBound[1][0] - bakwBound[0][0]) / gridNum;\r\n        const bakwYUnit = (bakwBound[1][1] - bakwBound[0][1]) / gridNum;\r\n        const bakwGridCache = bakwEachBound.reduce((prev, bound, index) => {\r\n            const normXMin = unitCalc(bound[0][0], bakwBound[0][0], bakwXUnit, gridNum);\r\n            const normXMax = unitCalc(bound[1][0], bakwBound[0][0], bakwXUnit, gridNum);\r\n            const normYMin = unitCalc(bound[0][1], bakwBound[0][1], bakwYUnit, gridNum);\r\n            const normYMax = unitCalc(bound[1][1], bakwBound[0][1], bakwYUnit, gridNum);\r\n            for (let cx = normXMin; cx <= normXMax; cx++) {\r\n                if (!prev[cx]) prev[cx] = [];\r\n                for (let cy = normYMin; cy <= normYMax; cy++) {\r\n                    if (!prev[cx][cy]) prev[cx][cy] = [];\r\n                    prev[cx][cy].push(index);\r\n                }\r\n            }\r\n            return prev;\r\n        }, []);\r\n\r\n        this.indexedTins = {\r\n            forw: {\r\n                gridNum,\r\n                xOrigin: forwBound[0][0],\r\n                yOrigin: forwBound[0][1],\r\n                xUnit: forwXUnit,\r\n                yUnit: forwYUnit,\r\n                gridCache: forwGridCache\r\n            },\r\n            bakw: {\r\n                gridNum,\r\n                xOrigin: bakwBound[0][0],\r\n                yOrigin: bakwBound[0][1],\r\n                xUnit: bakwXUnit,\r\n                yUnit: bakwYUnit,\r\n                gridCache: bakwGridCache\r\n            }\r\n        };\r\n    }\r\n\r\n    setWh(wh) {\r\n        this.wh = wh;\r\n        this.xy = [0, 0];\r\n        this.bounds = undefined;\r\n        this.boundsPolygon = undefined;\r\n        this.tins = undefined;\r\n        this.indexedTins = undefined;\r\n    }\r\n\r\n    setVertexMode(mode) {\r\n        this.vertexMode = mode;\r\n        this.tins = undefined;\r\n        this.indexedTins = undefined;\r\n    }\r\n\r\n    setStrictMode(mode) {\r\n        this.strictMode = mode;\r\n        this.tins = undefined;\r\n        this.indexedTins = undefined;\r\n    }\r\n\r\n    calcurateStrictTinAsync() {\r\n        const self = this;\r\n        const edges = self.pointsSet.edges;\r\n        return Promise.all(self.tins.forw.features.map((tri) => Promise.resolve(counterTri(tri))))\r\n            .then((tris) => {\r\n                self.tins.bakw = featureCollection(tris);\r\n            }).then(() => {\r\n                const searchIndex = {};\r\n                return Promise.all(self.tins.forw.features.map((forTri, index) => {\r\n                    const bakTri = self.tins.bakw.features[index];\r\n                    return Promise.resolve(insertSearchIndex(searchIndex, {forw: forTri, bakw: bakTri}));\r\n                })).then(() => searchIndex).catch((err) => {\r\n                    throw err;\r\n                });\r\n            }).then((searchIndex) => [overlapCheckAsync(searchIndex), searchIndex])\r\n            .then((prevResult) => {\r\n                const overlapped = prevResult[0];\r\n                const searchIndex = prevResult[1];\r\n                if (overlapped.bakw) Object.keys(overlapped.bakw).map((key) => {\r\n                    if (overlapped.bakw[key] == 'Not include case') return;\r\n                    const trises = searchIndex[key];\r\n                    const forUnion = union(trises[0].forw, trises[1].forw);\r\n                    const forConvex = convex(featureCollection([trises[0].forw, trises[1].forw]));\r\n                    const forDiff = difference(forConvex, forUnion);\r\n                    if (forDiff) return;\r\n                    const splittedKey = key.split('-');\r\n                    if (splittedKey[0].match(/^[0-9]+$/) && splittedKey[1].match(/^[0-9]+$/)) {\r\n                        const numberKey = splittedKey.map((key) => parseInt(key))\r\n                            .sort((a, b) => a < b ? -1 : 1);\r\n                        for (let i = 0; i < edges.length - 1; i++) {\r\n                            if (numberKey[0] == edges[i][0] && numberKey[1] == edges[i][1]) return;\r\n                        }\r\n                    }\r\n                    const sharedVtx = splittedKey.map((val) =>\r\n                        ['a', 'b', 'c'].map((alpha, index) => {\r\n                            const prop = trises[0].bakw.properties[alpha];\r\n                            const geom = trises[0].bakw.geometry.coordinates[0][index];\r\n                            return {geom, prop};\r\n                        }).filter((vtx) => vtx.prop.index == val)[0]\r\n                    );\r\n                    const nonSharedVtx = trises.map((tris) =>\r\n                        ['a', 'b', 'c'].map((alpha, index) => {\r\n                            const prop = tris.bakw.properties[alpha];\r\n                            const geom = tris.bakw.geometry.coordinates[0][index];\r\n                            return {geom, prop};\r\n                        }).filter((vtx) => vtx.prop.index != sharedVtx[0].prop.index && vtx.prop.index != sharedVtx[1].prop.index)[0]\r\n                    );\r\n                    removeSearchIndex(searchIndex, trises[0], self.tins);\r\n                    removeSearchIndex(searchIndex, trises[1], self.tins);\r\n                    sharedVtx.map((sVtx) => {\r\n                        const newTriCoords = [sVtx.geom, nonSharedVtx[0].geom, nonSharedVtx[1].geom, sVtx.geom];\r\n                        const newTriProp = {a: sVtx.prop, b: nonSharedVtx[0].prop, c: nonSharedVtx[1].prop};\r\n                        const newBakTri = polygon([newTriCoords], newTriProp);\r\n                        const newForTri = counterTri(newBakTri);\r\n                        insertSearchIndex(searchIndex, {forw: newForTri, bakw: newBakTri}, self.tins);\r\n                    });\r\n                });\r\n\r\n                return Promise.all(['forw', 'bakw'].map((direc) =>\r\n                    new Promise((resolve) => {\r\n                        const coords = self.tins[direc].features.map((poly) => poly.geometry.coordinates[0]);\r\n                        const xy = findIntersections(coords);\r\n                        const retXy = internal.dedupIntersections(xy).reduce((prev, apoint, index, array) => {\r\n                            if (!prev) prev = {};\r\n                            prev[`${apoint.x}:${apoint.y}`] = apoint;\r\n                            if (index != array.length - 1) return prev;\r\n                            return Object.keys(prev).map((key) => point([prev[key].x, prev[key].y]));\r\n                        }, []);\r\n                        resolve(retXy);\r\n                    }).catch((err) => {\r\n                        throw err\r\n                    })\r\n                )).then((result) => {\r\n                    if (result[0].length == 0 && result[1].length == 0) {\r\n                        self.strict_status = Tin.STATUS_STRICT;\r\n                        delete self.kinks;\r\n                    } else {\r\n                        self.strict_status = Tin.STATUS_ERROR;\r\n                        self.kinks = {};\r\n                        if (result[0].length > 0) self.kinks.forw = featureCollection(result[0]);\r\n                        if (result[1].length > 0) self.kinks.bakw = featureCollection(result[1]);\r\n                    }\r\n                }).catch((err) => {\r\n                    throw err\r\n                });\r\n            }).catch((err) => {\r\n                throw err\r\n            });\r\n    }\r\n\r\n    generatePointsSet() {\r\n        const self = this;\r\n        const pointsArray = {forw: [], bakw: []};\r\n        for (let i = 0; i < self.points.length; i++) {\r\n            const mapxy = self.points[i][0];\r\n            const mercs = self.points[i][1];\r\n            const forPoint = createPoint(mapxy, mercs, i);\r\n            pointsArray.forw.push(forPoint);\r\n            pointsArray.bakw.push(counterPoint(forPoint));\r\n        }\r\n        const edges = [];\r\n        let edgeNodeIndex = 0;\r\n        self.edgeNodes = [];\r\n        if (!self.edges) self.edges = [];\r\n        for (let i = 0; i < self.edges.length; i++) {\r\n            const startEnd = self.edges[i].startEnd;\r\n            const illstNodes = Object.assign([], self.edges[i].illstNodes);\r\n            const mercNodes = Object.assign([], self.edges[i].mercNodes);\r\n            if (illstNodes.length === 0 && mercNodes.length === 0) {\r\n                edges.push(startEnd);\r\n                continue;\r\n            }\r\n            illstNodes.unshift(self.points[startEnd[0]][0]);\r\n            illstNodes.push(self.points[startEnd[1]][0]);\r\n            mercNodes.unshift(self.points[startEnd[0]][1]);\r\n            mercNodes.push(self.points[startEnd[1]][1]);\r\n            const lengths = [illstNodes, mercNodes].map((nodes) => {\r\n                const eachLengths = nodes.map((node, index, arr) => {\r\n                    if (index === 0) return 0;\r\n                    const prev = arr[index - 1];\r\n                    return Math.sqrt(Math.pow(node[0] - prev[0], 2) + Math.pow(node[1] - prev[1], 2));\r\n                });\r\n                const sumLengths = eachLengths.reduce((prev, node, index) => {\r\n                    if (index === 0) return [0];\r\n                    prev.push(prev[index - 1] + node);\r\n                    return prev;\r\n                }, []);\r\n                return sumLengths.map((eachSum, index, arr) => {\r\n                    const ratio = eachSum / arr[arr.length - 1];\r\n                    return [nodes[index], eachLengths[index], sumLengths[index], ratio];\r\n                });\r\n            });\r\n            lengths.map((thisLengths, i) => {\r\n                const anotherLengths = lengths[i ? 0 : 1];\r\n                return thisLengths.filter((val, index) =>\r\n                    index === 0 || index === thisLengths.length - 1 || val[4] === 'handled' ? false : true\r\n                ).map((lengthItem) => {\r\n                    const node = lengthItem[0];\r\n                    const ratio = lengthItem[3];\r\n                    const anotherSets = anotherLengths.reduce((prev, item, index, arr) => {\r\n                        if (prev) return prev;\r\n                        const next = arr[index + 1];\r\n                        if (item[3] === ratio) {\r\n                            item[4] = 'handled';\r\n                            return [item];\r\n                        }\r\n                        if (item[3] < ratio && next[3] > ratio) return [item, next];\r\n                        return;\r\n                    }, undefined);\r\n                    if (anotherSets.length === 1) {\r\n                        return i === 0 ? [node, anotherSets[0][0], ratio] : [anotherSets[0][0], node, ratio];\r\n                    } else {\r\n                        const anotherPrev = anotherSets[0];\r\n                        const anotherNext = anotherSets[1];\r\n                        const ratioDelta = ratio - anotherPrev[3];\r\n                        const ratioAnother = anotherNext[3] - anotherPrev[3];\r\n                        const ratioInEdge = ratioDelta / ratioAnother;\r\n                        const anotherNode = [(anotherNext[0][0] - anotherPrev[0][0]) * ratioInEdge + anotherPrev[0][0],\r\n                            (anotherNext[0][1] - anotherPrev[0][1]) * ratioInEdge + anotherPrev[0][1]];\r\n                        return i === 0 ? [node, anotherNode, ratio] : [anotherNode, node, ratio];\r\n                    }\r\n                });\r\n            }).reduce((prev, nodes) => prev.concat(nodes), [])\r\n                .sort((a, b) => a[2] < b[2] ? -1 : 1)\r\n                .map((node, index, arr) => {\r\n                    self.edgeNodes[edgeNodeIndex] = [node[0], node[1]];\r\n                    const forPoint = createPoint(node[0], node[1], `edgeNode${edgeNodeIndex}`);\r\n                    edgeNodeIndex++;\r\n                    pointsArray.forw.push(forPoint);\r\n                    pointsArray.bakw.push(counterPoint(forPoint));\r\n                    if (index === 0) {\r\n                        edges.push([startEnd[0], pointsArray.forw.length - 1]);\r\n                    } else {\r\n                        edges.push([pointsArray.forw.length - 2, pointsArray.forw.length - 1]);\r\n                    }\r\n                    if (index === arr.length - 1) {\r\n                        edges.push([pointsArray.forw.length - 1, startEnd[1]]);\r\n                    }\r\n                });\r\n        }\r\n        return {forw: featureCollection(pointsArray.forw), bakw: featureCollection(pointsArray.bakw), edges};\r\n    }\r\n\r\n    updateTinAsync() {\r\n        const self = this;\r\n        let strict = this.strictMode;\r\n        const minx = self.xy[0] - 0.05 * self.wh[0];\r\n        const maxx = self.xy[0] + 1.05 * self.wh[0];\r\n        const miny = self.xy[1] - 0.05 * self.wh[1];\r\n        const maxy = self.xy[1] + 1.05 * self.wh[1];\r\n\r\n        const insideCheck = this.bounds ? (xy) => booleanPointInPolygon(xy, self.boundsPolygon) :\r\n            (xy) => xy[0] >= self.xy[0] && xy[0] <= self.xy[0] + self.wh[0] && xy[1] >= self.xy[1] && xy[1] <= self.xy[1] + self.wh[1];\r\n        const inside = this.points.reduce((prev, curr) => prev && insideCheck(curr[0]), true);\r\n        if (!inside) {\r\n            return new Promise((resolve, reject) => {\r\n                reject('SOME POINTS OUTSIDE');\r\n            });\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n            if (strict != Tin.MODE_STRICT && strict != Tin.MODE_LOOSE) strict = Tin.MODE_AUTO;\r\n\r\n            let bbox = [];\r\n            if (self.wh) {\r\n                bbox = [\r\n                    [minx, miny], [maxx, miny],\r\n                    [minx, maxy], [maxx, maxy]\r\n                ];\r\n            }\r\n            const pointsSet = self.generatePointsSet();\r\n            resolve([pointsSet, bbox]);\r\n        }).then((prevResults) => {\r\n            const pointsSet = prevResults[0];\r\n\r\n            // Forward TIN for calcurating Backward Centroid and Backward Vertices\r\n            return Promise.all([\r\n                new Promise((resolve) => {\r\n                    resolve(constrainedTin(pointsSet.forw, pointsSet.edges, 'target'));\r\n                }),\r\n                new Promise((resolve) => {\r\n                    resolve(constrainedTin(pointsSet.bakw, pointsSet.edges, 'target'));\r\n                }),\r\n                new Promise((resolve) => {\r\n                    resolve(centroid(pointsSet.forw));\r\n                }),\r\n                Promise.resolve(prevResults)\r\n            ]).catch((err) => {\r\n                throw err;\r\n            });\r\n        }).then((prevResults) => {\r\n            const tinForCentroid = prevResults[0];\r\n            const tinBakCentroid = prevResults[1];\r\n            const forCentroidFt = prevResults[2];\r\n            const pointsSetBbox = prevResults[3];\r\n            const pointsSet = pointsSetBbox[0];\r\n            if (tinForCentroid.features.length == 0 || tinBakCentroid.features.length == 0) throw 'TOO LINEAR1';\r\n\r\n            // Calcurating Forward/Backward Centroid\r\n            const centroid = {forw: forCentroidFt.geometry.coordinates};\r\n            centroid.bakw = transformArr(forCentroidFt, tinForCentroid);\r\n            self.centroid = {forw: createPoint(centroid.forw, centroid.bakw, 'cent')};\r\n            self.centroid.bakw = counterPoint(self.centroid.forw);\r\n\r\n            const convexBuf = {};\r\n            return Promise.all([\r\n                new Promise((resolve) => {\r\n                    const forConvex = convex(pointsSet.forw).geometry.coordinates[0];\r\n                    let vconvex;\r\n                    try {\r\n                        vconvex = forConvex.map((forw) => ({forw, bakw: transformArr(point(forw), tinForCentroid)}));\r\n                    } catch (e) {\r\n                        throw 'TOO LINEAR2';\r\n                    }\r\n                    vconvex.map((vertex) => {\r\n                        convexBuf[`${vertex.forw[0]}:${vertex.forw[1]}`] = vertex;\r\n                    });\r\n                    resolve();\r\n                }),\r\n                new Promise(((resolve) => {\r\n                    const bakConvex = convex(pointsSet.bakw).geometry.coordinates[0];\r\n                    let vconvex;\r\n                    try {\r\n                        vconvex = bakConvex.map((bakw) => ({\r\n                            bakw,\r\n                            forw: transformArr(point(bakw), tinBakCentroid)\r\n                        }));\r\n                    } catch (e) {\r\n                        throw 'TOO LINEAR2';\r\n                    }\r\n                    vconvex.map((vertex) => {\r\n                        convexBuf[`${vertex.forw[0]}:${vertex.forw[1]}`] = vertex;\r\n                    });\r\n                    resolve();\r\n                }))\r\n            ]).then(() => [centroid, convexBuf, pointsSetBbox]).catch((err) => {\r\n                throw err;\r\n            });\r\n        }).then((prevResults) => {\r\n            const centroid = prevResults[0];\r\n            const convexBuf = prevResults[1];\r\n            const pointsSetBbox = prevResults[2];\r\n\r\n            // Calcurating Convex full to get Convex full polygon's vertices\r\n            const expandConvex = Object.keys(convexBuf).reduce((prev, key, _, array) => { // eslint-disable-line no-unused-vars\r\n                const forVertex = convexBuf[key].forw;\r\n                const bakVertex = convexBuf[key].bakw;\r\n                // Convexhullの各頂点に対し、重心からの差分を取る\r\n                const vertexDelta = {forw: [forVertex[0] - centroid.forw[0], forVertex[1] - centroid.forw[1]]};\r\n                vertexDelta.bakw = [bakVertex[0] - centroid.bakw[0], bakVertex[1] - centroid.bakw[1]];\r\n                // X軸方向、Y軸方向それぞれに対し、地図外郭XY座標との重心との比を取る\r\n                const xRate = vertexDelta.forw[0] == 0 ? Infinity :\r\n                    ((vertexDelta.forw[0] < 0 ? minx : maxx) - centroid.forw[0]) / vertexDelta.forw[0];\r\n                const yRate = vertexDelta.forw[1] == 0 ? Infinity :\r\n                    ((vertexDelta.forw[1] < 0 ? miny : maxy) - centroid.forw[1]) / vertexDelta.forw[1];\r\n                // xRate, yRateが同じ値であれば重心と地図頂点を結ぶ線上に乗る\r\n                if (Math.abs(xRate) / Math.abs(yRate) < 1.1) {\r\n                    const point = {\r\n                        forw: [vertexDelta.forw[0] * xRate + centroid.forw[0], vertexDelta.forw[1] * xRate + centroid.forw[1]],\r\n                        bakw: [vertexDelta.bakw[0] * xRate + centroid.bakw[0], vertexDelta.bakw[1] * xRate + centroid.bakw[1]]\r\n                    };\r\n                    if (vertexDelta.forw[0] < 0) prev[3].push(point);\r\n                    else prev[1].push(point);\r\n                }\r\n                if (Math.abs(yRate) / Math.abs(xRate) < 1.1) {\r\n                    const point = {\r\n                        forw: [vertexDelta.forw[0] * yRate + centroid.forw[0], vertexDelta.forw[1] * yRate + centroid.forw[1]],\r\n                        bakw: [vertexDelta.bakw[0] * yRate + centroid.bakw[0], vertexDelta.bakw[1] * yRate + centroid.bakw[1]]\r\n                    };\r\n                    if (vertexDelta.forw[1] < 0) prev[0].push(point);\r\n                    else prev[2].push(point);\r\n                }\r\n                return prev;\r\n            }, [[], [], [], []]);\r\n\r\n            // Calcurating Average scaling factors and rotation factors per orthants\r\n            let orthant = Object.keys(convexBuf).reduce((prev, key, idx, array) => {\r\n                const forVertex = convexBuf[key].forw;\r\n                const bakVertex = convexBuf[key].bakw;\r\n                const vertexDelta = {forw: [forVertex[0] - centroid.forw[0], forVertex[1] - centroid.forw[1]]};\r\n                vertexDelta.bakw = [bakVertex[0] - centroid.bakw[0], centroid.bakw[1] - bakVertex[1]];\r\n\r\n                if (vertexDelta.forw[0] == 0 || vertexDelta.forw[1] == 0) return prev;\r\n                let index = 0;\r\n                if (vertexDelta.forw[0] > 0) index += 1;\r\n                if (vertexDelta.forw[1] > 0) index += 2;\r\n                prev[index].push([vertexDelta.forw, vertexDelta.bakw]);\r\n                if (idx == array.length - 1) {\r\n                    // If some orthants have no Convex full polygon's vertices, use same average factor to every orthants\r\n                    return (prev.length == prev.filter((val) => val.length > 0).length && self.vertexMode == Tin.VERTEX_BIRDEYE) ? prev : prev.reduce((pre, cur) => {\r\n                        const ret = [pre[0].concat(cur)];\r\n                        return ret;\r\n                    }, [[]]);\r\n                }\r\n                return prev;\r\n            }, [[], [], [], []]).map((item) =>\r\n                // Finalize calcuration of Average scaling factors and rotation factors\r\n                item.reduce((prev, curr, index, arr) => {\r\n                    if (!prev) prev = [Infinity, 0, 0];\r\n                    // if (!prev) prev = [0, 0, 0];\r\n                    // var distanceSum = prev[0] + Math.sqrt(Math.pow(curr[0][0], 2) + Math.pow(curr[0][1], 2)) /\r\n                    //     Math.sqrt(Math.pow(curr[1][0], 2) + Math.pow(curr[1][1], 2));\r\n                    let distanceSum = Math.sqrt(Math.pow(curr[0][0], 2) + Math.pow(curr[0][1], 2)) /\r\n                        Math.sqrt(Math.pow(curr[1][0], 2) + Math.pow(curr[1][1], 2));\r\n                    distanceSum = distanceSum < prev[0] ? distanceSum : prev[0];\r\n                    const thetaDelta = Math.atan2(curr[0][0], curr[0][1]) - Math.atan2(curr[1][0], curr[1][1]);\r\n                    const sumThetaX = prev[1] + Math.cos(thetaDelta);\r\n                    const sumThetaY = prev[2] + Math.sin(thetaDelta);\r\n                    if (index == arr.length - 1) {\r\n                        // return [distanceSum / arr.length, Math.atan2(sumThetaY, sumThetaX)];\r\n                        return [distanceSum, Math.atan2(sumThetaY, sumThetaX)];\r\n                    }\r\n                    return [distanceSum, sumThetaX, sumThetaY];\r\n                }, null)\r\n            );\r\n\r\n            // \"Using same average factor to every orthants\" case\r\n            if (orthant.length == 1) orthant = [orthant[0], orthant[0], orthant[0], orthant[0]];\r\n\r\n            return [orthant, centroid, expandConvex, pointsSetBbox];\r\n        }).then((prevResults) => {\r\n            const orthant = prevResults[0];\r\n            const centroid = prevResults[1];\r\n            const expandConvex = prevResults[2];\r\n            const pointsSet = prevResults[3][0];\r\n            const bbox = prevResults[3][1];\r\n\r\n            // Calcurating Backward Bounding box of map\r\n            let verticesSet = orthant.map((delta, index) => {\r\n                const forVertex = bbox[index];\r\n                const forDelta = [forVertex[0] - centroid.forw[0], forVertex[1] - centroid.forw[1]];\r\n                const forDistance = Math.sqrt(Math.pow(forDelta[0], 2) + Math.pow(forDelta[1], 2));\r\n                const bakDistance = forDistance / delta[0];\r\n\r\n                const forTheta = Math.atan2(forDelta[0], forDelta[1]);\r\n                const bakTheta = forTheta - delta[1];\r\n\r\n                const bakVertex = [centroid.bakw[0] + bakDistance * Math.sin(bakTheta),\r\n                    centroid.bakw[1] - bakDistance * Math.cos(bakTheta)];\r\n\r\n                return {forw: forVertex, bakw: bakVertex};\r\n            });\r\n            const swap = verticesSet[2];\r\n            verticesSet[2] = verticesSet[3];\r\n            verticesSet[3] = swap;\r\n\r\n            // Bounding Boxの頂点を、全てのgcpが内部に入るように引き延ばす\r\n            const expandRate = [1, 1, 1, 1];\r\n            for (let i = 0; i < 4; i++) {\r\n                const j = (i + 1) % 4;\r\n                const side = lineString([verticesSet[i].bakw, verticesSet[j].bakw]);\r\n                const expands = expandConvex[i];\r\n                expands.map((expand) => {\r\n                    const expandLine = lineString([centroid.bakw, expand.bakw]);\r\n                    const intersect = lineIntersect(side, expandLine);\r\n                    if (intersect.features.length > 0 && intersect.features[0].geometry) {\r\n                        const intersect_ = intersect.features[0];\r\n                        const expandDist = Math.sqrt(Math.pow(expand.bakw[0] - centroid.bakw[0], 2) +\r\n                            Math.pow(expand.bakw[1] - centroid.bakw[1], 2));\r\n                        const onSideDist = Math.sqrt(Math.pow(intersect_.geometry.coordinates[0] - centroid.bakw[0], 2) +\r\n                            Math.pow(intersect_.geometry.coordinates[1] - centroid.bakw[1], 2));\r\n                        const rate = expandDist / onSideDist;\r\n                        if (rate > expandRate[i]) expandRate[i] = rate;\r\n                        if (rate > expandRate[j]) expandRate[j] = rate;\r\n                    }\r\n                });\r\n            }\r\n            verticesSet = verticesSet.map((vertex, index) => {\r\n                const rate = expandRate[index];\r\n                const point = [(vertex.bakw[0] - centroid.bakw[0]) * rate + centroid.bakw[0],\r\n                    (vertex.bakw[1] - centroid.bakw[1]) * rate + centroid.bakw[1]];\r\n                return {forw: vertex.forw, bakw: point};\r\n            });\r\n            return [verticesSet, pointsSet];\r\n        }).then((prevResults) => {\r\n            const verticesSet = prevResults[0];\r\n            const pointsSet = prevResults[1];\r\n\r\n            const verticesList = {forw: [], bakw: []};\r\n\r\n            for (let i = 0; i < verticesSet.length; i++) {\r\n                const forVertex = verticesSet[i].forw;\r\n                const bakVertex = verticesSet[i].bakw;\r\n                const forVertexFt = createPoint(forVertex, bakVertex, `bbox${i}`);\r\n                const bakVertexFt = counterPoint(forVertexFt);\r\n                pointsSet.forw.features.push(forVertexFt);\r\n                pointsSet.bakw.features.push(bakVertexFt);\r\n                verticesList.forw.push(forVertexFt);\r\n                verticesList.bakw.push(bakVertexFt);\r\n            }\r\n\r\n            self.pointsSet = pointsSet;\r\n            self.tins = {forw: rotateVerticesTriangle(constrainedTin(pointsSet.forw, pointsSet.edges, 'target'))};\r\n            let prom;\r\n            if (strict == Tin.MODE_STRICT || strict == Tin.MODE_AUTO) {\r\n                prom = self.calcurateStrictTinAsync();\r\n            } else {\r\n                prom = Promise.resolve();\r\n            }\r\n            return prom.then(() => {\r\n                if (strict == Tin.MODE_LOOSE || (strict == Tin.MODE_AUTO && self.strict_status == Tin.STATUS_ERROR)) {\r\n                    self.tins.bakw = rotateVerticesTriangle(constrainedTin(pointsSet.bakw, pointsSet.edges, 'target'));\r\n                    delete self.kinks;\r\n                    self.strict_status = Tin.STATUS_LOOSE;\r\n                }\r\n                self.vertices_params = {\r\n                    forw: vertexCalc(verticesList.forw, self.centroid.forw),\r\n                    bakw: vertexCalc(verticesList.bakw, self.centroid.bakw)\r\n                };\r\n\r\n                self.addIndexedTin();\r\n                return self.calculatePointsWeightAsync();\r\n            }).catch((err) => {\r\n                throw err;\r\n            });\r\n        }).catch((err) => {\r\n            throw err;\r\n        });\r\n    }\r\n\r\n    transform(apoint, backward, ignoreBounds) {\r\n        if (backward && this.strict_status == Tin.STATUS_ERROR) throw 'Backward transform is not allowed if strict_status == \"strict_error\"';\r\n        // if (!this.tins) this.updateTin();\r\n        if (this.yaxisMode == Tin.YAXIS_FOLLOW && backward) {\r\n            apoint = [apoint[0], -1 * apoint[1]];\r\n        }\r\n        const tpoint = point(apoint);\r\n        if (this.bounds && !backward && !ignoreBounds) {\r\n            if (!booleanPointInPolygon(tpoint, this.boundsPolygon)) return false;\r\n        }\r\n        const tins = backward ? this.tins.bakw : this.tins.forw;\r\n        const indexedTins = backward ? this.indexedTins.bakw : this.indexedTins.forw;\r\n        const verticesParams = backward ? this.vertices_params.bakw : this.vertices_params.forw;\r\n        const centroid = backward ? this.centroid.bakw : this.centroid.forw;\r\n        const weightBuffer = backward ? this.pointsWeightBuffer.bakw : this.pointsWeightBuffer.forw;\r\n        let stateTriangle = undefined, stateSetFunc = undefined;\r\n        if (this.stateFull) {\r\n            if (this.stateBackward == backward) {\r\n                stateTriangle = this.stateTriangle;\r\n            } else {\r\n                this.stateBackward = backward;\r\n                this.stateTriangle = undefined;\r\n            }\r\n            stateSetFunc = (tri) => {\r\n                this.stateTriangle = tri;\r\n            };\r\n        }\r\n        let ret = transformArr(tpoint, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc);\r\n        if (this.bounds && backward && !ignoreBounds) {\r\n            const rpoint = point(ret);\r\n            if (!booleanPointInPolygon(rpoint, this.boundsPolygon)) return false;\r\n        } else if (this.yaxisMode == Tin.YAXIS_FOLLOW && !backward) {\r\n            ret = [ret[0], -1 * ret[1]];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    calculatePointsWeightAsync() {\r\n        const self = this;\r\n        const calcTargets = ['forw'];\r\n        if (self.strict_status == Tin.STATUS_LOOSE) calcTargets.push('bakw');\r\n        const weightBuffer = {};\r\n        return Promise.all(calcTargets.map((target) => {\r\n            weightBuffer[target] = {};\r\n            const alreadyChecked = {};\r\n            const tin = self.tins[target];\r\n            return Promise.all(tin.features.map((tri) => {\r\n                const vtxes = ['a', 'b', 'c'];\r\n                return new Promise(((resolve) => {\r\n                    for (let i = 0; i < 3; i++) {\r\n                        const j = (i + 1) % 3;\r\n                        const vi = vtxes[i];\r\n                        const vj = vtxes[j];\r\n                        const indexi = tri.properties[vi].index;\r\n                        const indexj = tri.properties[vj].index;\r\n                        const key = [indexi, indexj].sort().join('-');\r\n                        if (!alreadyChecked[key]) {\r\n                            const fromi = tri.geometry.coordinates[0][i];\r\n                            const fromj = tri.geometry.coordinates[0][j];\r\n                            const toi = tri.properties[vi].geom;\r\n                            const toj = tri.properties[vj].geom;\r\n                            alreadyChecked[key] = 1;\r\n\r\n                            const weight = Math.sqrt(Math.pow(toi[0] - toj[0], 2) + Math.pow(toi[1] - toj[1], 2)) /\r\n                                Math.sqrt(Math.pow(fromi[0] - fromj[0], 2) + Math.pow(fromi[1] - fromj[1], 2));\r\n\r\n                            if (!weightBuffer[target][indexi]) weightBuffer[target][indexi] = {};\r\n                            if (!weightBuffer[target][indexj]) weightBuffer[target][indexj] = {};\r\n                            weightBuffer[target][indexi][key] = weight;\r\n                            weightBuffer[target][indexj][key] = weight;\r\n                        }\r\n                    }\r\n                    resolve();\r\n                }));\r\n            })).catch((err) => {\r\n                throw err;\r\n            });\r\n        })).then(() => {\r\n            const pointsWeightBuffer = {};\r\n            calcTargets.map((target) => {\r\n                pointsWeightBuffer[target] = {};\r\n                if (self.strict_status == Tin.STATUS_STRICT) pointsWeightBuffer['bakw'] = {};\r\n                Object.keys(weightBuffer[target]).map((vtx) => {\r\n                    pointsWeightBuffer[target][vtx] = Object.keys(weightBuffer[target][vtx]).reduce((prev, key, idx, arr) => {\r\n                        prev = prev + weightBuffer[target][vtx][key];\r\n                        return idx == arr.length - 1 ? prev / arr.length : prev;\r\n                    }, 0);\r\n                    if (self.strict_status == Tin.STATUS_STRICT) pointsWeightBuffer['bakw'][vtx] = 1 / pointsWeightBuffer[target][vtx];\r\n                });\r\n                pointsWeightBuffer[target]['cent'] = [0, 1, 2, 3].reduce((prev, curr) => {\r\n                    const key = `bbox${curr}`;\r\n                    prev = prev + pointsWeightBuffer[target][key];\r\n                    return curr == 3 ? prev / 4 : prev;\r\n                }, 0);\r\n                if (self.strict_status == Tin.STATUS_STRICT) pointsWeightBuffer['bakw']['cent'] = 1 / pointsWeightBuffer[target]['cent'];\r\n            });\r\n            self.pointsWeightBuffer = pointsWeightBuffer;\r\n        }).catch((err) => {\r\n            throw err;\r\n        });\r\n    }\r\n}\r\n\r\nTin.VERTEX_PLAIN = 'plain';\r\nTin.VERTEX_BIRDEYE = 'birdeye';\r\nTin.MODE_STRICT = 'strict';\r\nTin.MODE_AUTO = 'auto';\r\nTin.MODE_LOOSE = 'loose';\r\nTin.STATUS_STRICT = 'strict';\r\nTin.STATUS_ERROR = 'strict_error';\r\nTin.STATUS_LOOSE = 'loose';\r\nTin.YAXIS_FOLLOW = 'follow';\r\nTin.YAXIS_INVERT = 'invert';\r\n\r\nfunction rotateVerticesTriangle(tins) {\r\n    const features = tins.features;\r\n    for (let i=0; i<features.length; i++) {\r\n        const feature = features[i];\r\n        if ((`${feature.properties.a.index}`).substring(0, 4) == 'bbox' &&\r\n            (`${feature.properties.b.index}`).substring(0, 4) == 'bbox') {\r\n            features[i] = {\r\n                geometry: {\r\n                    type: 'Polygon',\r\n                    coordinates: [\r\n                        [feature.geometry.coordinates[0][2], feature.geometry.coordinates[0][0], feature.geometry.coordinates[0][1],\r\n                            feature.geometry.coordinates[0][2]]\r\n                    ]\r\n                },\r\n                properties: {\r\n                    a: {\r\n                        geom: feature.properties.c.geom,\r\n                        index: feature.properties.c.index\r\n                    },\r\n                    b: {\r\n                        geom: feature.properties.a.geom,\r\n                        index: feature.properties.a.index\r\n                    },\r\n                    c: {\r\n                        geom: feature.properties.b.geom,\r\n                        index: feature.properties.b.index\r\n                    }\r\n                },\r\n                type: 'Feature'\r\n            };\r\n        } else if ((`${feature.properties.c.index}`).substring(0, 4) == 'bbox' &&\r\n            (`${feature.properties.a.index}`).substring(0, 4) == 'bbox') {\r\n            features[i] = {\r\n                geometry: {\r\n                    type: 'Polygon',\r\n                    coordinates: [\r\n                        [feature.geometry.coordinates[0][1], feature.geometry.coordinates[0][2], feature.geometry.coordinates[0][0],\r\n                            feature.geometry.coordinates[0][1]]\r\n                    ]\r\n                },\r\n                properties: {\r\n                    a: {\r\n                        geom: feature.properties.b.geom,\r\n                        index: feature.properties.b.index\r\n                    },\r\n                    b: {\r\n                        geom: feature.properties.c.geom,\r\n                        index: feature.properties.c.index\r\n                    },\r\n                    c: {\r\n                        geom: feature.properties.a.geom,\r\n                        index: feature.properties.a.index\r\n                    }\r\n                },\r\n                type: 'Feature'\r\n            };\r\n        }\r\n    }\r\n    return tins;\r\n}\r\n\r\nfunction findIntersections(coords) {\r\n    const arcs = new internal.ArcCollection(coords);\r\n    return internal.findSegmentIntersections(arcs);\r\n}\r\n\r\nfunction vertexCalc(list, centroid) {\r\n    const centCoord = centroid.geometry.coordinates;\r\n    return [0, 1, 2, 3].map((i) => {\r\n        const j = (i + 1) % 4;\r\n        const itemi = list[i];\r\n        const itemj = list[j];\r\n        const coord = itemi.geometry.coordinates;\r\n        const radian = Math.atan2(coord[0] - centCoord[0], coord[1] - centCoord[1]);\r\n        const coordinates = [centroid, itemi, itemj, centroid].map((point) => point.geometry.coordinates);\r\n        const properties = {\r\n            a: {geom: centroid.properties.target.geom, index: centroid.properties.target.index},\r\n            b: {geom: itemi.properties.target.geom, index: itemi.properties.target.index},\r\n            c: {geom: itemj.properties.target.geom, index: itemj.properties.target.index}\r\n        };\r\n        const tin = featureCollection([polygon([coordinates], properties)]);\r\n\r\n        return [radian, tin];\r\n    }).reduce((prev, curr) => {\r\n        prev[0].push(curr[0]);\r\n        prev[1].push(curr[1]);\r\n        return prev;\r\n    }, [[], []]);\r\n}\r\n\r\nfunction normalizeRadian(target, noNegative) {\r\n    const rangeFunc = noNegative ? function(val) {\r\n        return !(val >= 0 && val < Math.PI * 2);\r\n    } : function(val) {\r\n        return !(val > -1 * Math.PI && val <= Math.PI);\r\n    };\r\n    while (rangeFunc(target)) {\r\n        target = target + 2 * Math.PI * (target > 0 ? -1 : 1);\r\n    }\r\n    return target;\r\n}\r\n\r\nfunction decideUseVertex(radian, radianList) {\r\n    let idel = normalizeRadian(radian - radianList[0]);\r\n    let minTheta = Math.PI * 2;\r\n    let minIndex;\r\n    for (let i = 0; i < radianList.length; i++) {\r\n        const j = (i + 1) % radianList.length;\r\n        const jdel = normalizeRadian(radian - radianList[j]);\r\n        const minDel = Math.min(Math.abs(idel), Math.abs(jdel));\r\n        if (idel * jdel <= 0 && minDel < minTheta) {\r\n            minTheta = minDel;\r\n            minIndex = i;\r\n        }\r\n        idel = jdel;\r\n    }\r\n    return minIndex;\r\n}\r\n\r\nfunction createPoint(xy, geom, index) {\r\n    return point(xy, {target: {geom, index}});\r\n}\r\n\r\nfunction counterPoint(apoint) {\r\n    return point(apoint.properties.target.geom, {target: {geom: apoint.geometry.coordinates,\r\n            index: apoint.properties.target.index}});\r\n}\r\n\r\nfunction transformTin(of, tri, weightBuffer) { // eslint-disable-line no-unused-vars\r\n    return point(transformTinArr(of, tri, weightBuffer));\r\n}\r\nfunction transformTinArr(of, tri, weightBuffer) {\r\n    const a = tri.geometry.coordinates[0][0];\r\n    const b = tri.geometry.coordinates[0][1];\r\n    const c = tri.geometry.coordinates[0][2];\r\n    const o = of.geometry.coordinates;\r\n    const ad = tri.properties.a.geom;\r\n    const bd = tri.properties.b.geom;\r\n    const cd = tri.properties.c.geom;\r\n\r\n    const ab = [b[0] -a[0], b[1] -a[1]];\r\n    const ac = [c[0] -a[0], c[1] -a[1]];\r\n    const ao = [o[0] -a[0], o[1] -a[1]];\r\n    const abd = [bd[0]-ad[0], bd[1]-ad[1]];\r\n    const acd = [cd[0]-ad[0], cd[1]-ad[1]];\r\n\r\n    let abv = (ac[1]*ao[0]-ac[0]*ao[1])/(ab[0]*ac[1]-ab[1]*ac[0]);\r\n    let acv = (ab[0]*ao[1]-ab[1]*ao[0])/(ab[0]*ac[1]-ab[1]*ac[0]);\r\n\r\n    // Considering weight\r\n    if (weightBuffer) {\r\n        const aW = weightBuffer[tri.properties.a.index];\r\n        const bW = weightBuffer[tri.properties.b.index];\r\n        const cW = weightBuffer[tri.properties.c.index];\r\n\r\n        let nabv;\r\n        if (abv < 0 || acv < 0 || 1 - abv - acv < 0) {\r\n            const normB = abv / (abv + acv);\r\n            const normC = acv / (abv + acv);\r\n            nabv = abv / bW / (normB / bW + normC / cW);\r\n            acv = acv / cW / (normB / bW + normC / cW);\r\n        } else {\r\n            nabv = abv / bW / (abv / bW + acv / cW + (1 - abv - acv) / aW);\r\n            acv = acv / cW / (abv / bW + acv / cW + (1 - abv - acv) / aW);\r\n        }\r\n        abv = nabv;\r\n    }\r\n    const od = [abv*abd[0]+acv*acd[0]+ad[0], abv*abd[1]+acv*acd[1]+ad[1]];\r\n    return od;\r\n}\r\n\r\nfunction useVertices(o, verticesParams, centroid, weightBuffer) { // eslint-disable-line no-unused-vars\r\n    return point(useVerticesArr(o, verticesParams, centroid, weightBuffer));\r\n}\r\nfunction useVerticesArr(o, verticesParams, centroid, weightBuffer) {\r\n    const coord = o.geometry.coordinates;\r\n    const centCoord = centroid.geometry.coordinates;\r\n    const radian = Math.atan2(coord[0] - centCoord[0], coord[1] - centCoord[1]);\r\n    const index = decideUseVertex(radian, verticesParams[0]);\r\n    const tin = verticesParams[1][index];\r\n    return transformTinArr(o, tin.features[0], weightBuffer);\r\n}\r\n\r\nfunction hit(point, tins) {\r\n    for (let i = 0; i < tins.features.length; i++) {\r\n        const inside = booleanPointInPolygon(point, tins.features[i]);\r\n        if (inside) {\r\n            return tins.features[i];\r\n        }\r\n    }\r\n}\r\n\r\nfunction unitCalc(coord, origin, unit, gridNum) {\r\n    let normCoord = Math.floor((coord - origin) / unit);\r\n    if (normCoord >= gridNum) normCoord = gridNum - 1;\r\n    return normCoord;\r\n}\r\n\r\nfunction transform(point, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc) { // eslint-disable-line no-unused-vars\r\n    return point(transformArr(point, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc));\r\n}\r\nfunction transformArr(point, tins, indexedTins, verticesParams, centroid, weightBuffer, stateTriangle, stateSetFunc) {\r\n    let tin;\r\n    if (stateTriangle) {\r\n        tin = hit(point, {features: [stateTriangle]});\r\n    }\r\n    if (!tin) {\r\n        if (indexedTins) {\r\n            const coords = point.geometry.coordinates;\r\n            const gridNum = indexedTins.gridNum;\r\n            const xOrigin = indexedTins.xOrigin;\r\n            const yOrigin = indexedTins.yOrigin;\r\n            const xUnit = indexedTins.xUnit;\r\n            const yUnit = indexedTins.yUnit;\r\n            const gridCache = indexedTins.gridCache;\r\n            const normX = unitCalc(coords[0], xOrigin, xUnit, gridNum);\r\n            const normY = unitCalc(coords[1], yOrigin, yUnit, gridNum);\r\n            const tinsKey = gridCache[normX] ? gridCache[normX][normY] ? gridCache[normX][normY] : [] : [];\r\n            tins = { features: tinsKey.map((key) => tins.features[key]) };\r\n        }\r\n        tin = hit(point, tins);\r\n    }\r\n    if (stateSetFunc) stateSetFunc(tin);\r\n\r\n    return tin ? transformTinArr(point, tin, weightBuffer) : useVerticesArr(point, verticesParams, centroid, weightBuffer);\r\n}\r\n\r\nfunction counterTri(tri) {\r\n    const coordinates = ['a', 'b', 'c', 'a'].map((key) => tri.properties[key].geom);\r\n    const geoms = tri.geometry.coordinates[0];\r\n    const props = tri.properties;\r\n    const properties = {\r\n        a: {geom: geoms[0], index: props['a'].index},\r\n        b: {geom: geoms[1], index: props['b'].index},\r\n        c: {geom: geoms[2], index: props['c'].index}\r\n    };\r\n    return polygon([coordinates], properties);\r\n}\r\n\r\nfunction buildTri(points) {\r\n    const coordinates = [0, 1, 2, 0].map((i) => points[i][0][0]);\r\n    const properties = {\r\n        a: {geom: points[0][0][1], index: points[0][1]},\r\n        b: {geom: points[1][0][1], index: points[1][1]},\r\n        c: {geom: points[2][0][1], index: points[2][1]}\r\n    };\r\n    return polygon([coordinates], properties);\r\n}\r\n\r\nfunction indexesToTri(indexes, points, edgeNodes, cent, bboxes, bakw) {\r\n    const points_ = indexes.map((index) => {\r\n        const point_base = isFinite(index) ? points[index] :\r\n            index == 'cent' ? cent :\r\n                index == 'bbox0' ? bboxes[0] :\r\n                    index == 'bbox1' ? bboxes[1] :\r\n                        index == 'bbox2' ? bboxes[2] :\r\n                            index == 'bbox3' ? bboxes[3] :\r\n                                (function() {\r\n                                    const match = index.match(/edgeNode(\\d+)/);\r\n                                    if (match) {\r\n                                        const nodeIndex = parseInt(match[1]);\r\n                                        return edgeNodes[nodeIndex];\r\n                                    }\r\n                                    return undefined;\r\n                                })();\r\n        return bakw ? [[point_base[1], point_base[0]], index] :\r\n            [[point_base[0], point_base[1]], index];\r\n    });\r\n    return buildTri(points_);\r\n}\r\n\r\nfunction overlapCheckAsync(searchIndex) {\r\n    const retValue = {forw: {}, bakw: {}};\r\n    return Promise.all(Object.keys(searchIndex).map((key) => new Promise(((resolve) => {\r\n            const searchResult = searchIndex[key];\r\n            if (searchResult.length < 2) return resolve();\r\n            ['forw', 'bakw'].map((dir) => {\r\n                const result = intersect(searchResult[0][dir], searchResult[1][dir]);\r\n                if (!result || result.geometry.type == 'Point' || result.geometry.type == 'LineString') return resolve();\r\n                //const diff1 = difference(searchResult[0][dir], result);\r\n                //const diff2 = difference(searchResult[1][dir], result);\r\n                /* if (!diff1 || !diff2) {\r\n                    searchResult[dir][key] = 'Include case';\r\n                } else {\r\n                    searchResult[dir][key] = 'Not include case';\r\n                }*/\r\n                resolve();\r\n            });\r\n        })))).then(() => {\r\n        if (Object.keys(retValue.forw).length == 0) delete retValue.forw;\r\n        if (Object.keys(retValue.bakw).length == 0) delete retValue.bakw;\r\n        return retValue;\r\n    }).catch((err) => {\r\n        throw err;\r\n    });\r\n}\r\n\r\nfunction insertSearchIndex(searchIndex, tris, tins) {\r\n    const keys = calcSearchKeys(tris.forw);\r\n    const bakKeys = calcSearchKeys(tris.bakw);\r\n    if (JSON.stringify(keys) != JSON.stringify(bakKeys))\r\n        throw `${JSON.stringify(tris, null, 2)}\\n${JSON.stringify(keys)}\\n${JSON.stringify(bakKeys)}`;\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        if (!searchIndex[key]) searchIndex[key] = [];\r\n        searchIndex[key].push(tris);\r\n    }\r\n    if (tins) {\r\n        tins.forw.features.push(tris.forw);\r\n        tins.bakw.features.push(tris.bakw);\r\n    }\r\n}\r\n\r\nfunction removeSearchIndex(searchIndex, tris, tins) {\r\n    const keys = calcSearchKeys(tris.forw);\r\n    const bakKeys = calcSearchKeys(tris.bakw);\r\n    if (JSON.stringify(keys) != JSON.stringify(bakKeys))\r\n        throw `${JSON.stringify(tris, null, 2)}\\n${JSON.stringify(keys)}\\n${JSON.stringify(bakKeys)}`;\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        const newArray = searchIndex[key].filter((eachTris) => eachTris.forw != tris.forw);\r\n        if (newArray.length == 0) delete searchIndex[key];\r\n        else searchIndex[key] = newArray;\r\n    }\r\n    if (tins) {\r\n        let newArray = tins.forw.features.filter((eachTri) => eachTri != tris.forw);\r\n        tins.forw.features = newArray;\r\n        newArray = tins.bakw.features.filter((eachTri) => eachTri != tris.bakw);\r\n        tins.bakw.features = newArray;\r\n    }\r\n}\r\n\r\nfunction calcSearchKeys(tri) {\r\n    const vtx = ['a', 'b', 'c'].map((key) => tri.properties[key].index);\r\n    return [[0, 1], [0, 2], [1, 2], [0, 1, 2]].map((set) => {\r\n        const index = set.map((i) => vtx[i]).sort().join('-');\r\n        return index;\r\n    }).sort();\r\n}\r\n\r\nexport default Tin;\r\nif (typeof module === \"object\" && module.exports) { // eslint-disable-line no-undef\r\n    module.exports = Tin; // eslint-disable-line no-undef\r\n}\r\n"],"file":"index.js"}