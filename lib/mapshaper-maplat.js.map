{"version":3,"sources":["../src/mapshaper-maplat.js"],"names":["exportAPI","VERSION","utils","getUniqueName","prefix","n","Utils","__uniqcount","isFunction","obj","isObject","Object","clamp","val","min","max","interpolate","val1","val2","pct","isArray","Array","isNumber","constructor","Number","isInteger","isString","toString","String","prototype","isBoolean","toArray","arr","isArrayLike","error","slice","call","e","i","length","addslashes","str","replace","regexEscape","defaults","dest","src","key","hasOwnProperty","extend","o","args","inherit","targ","f","__super__","apply","subclass","parent","child","arguments","merge","push","difference","other","index","arrayToIndex","filter","el","contains","container","item","indexOf","some","test","reduce","every","find","ctx","matches","prop","nan","len","range","start","inc","v","repeat","times","func","values","sum","info","tot","isNaN","getArrayBounds","Infinity","uniq","memo","pluck","map","countValues","indexOn","k","groupBy","keyval","init","forEach","Error","forEachProperty","keys","initializeArray","replaceArray","arr2","splice","repeatString","pluralSuffix","count","endsWith","ending","lpad","size","pad","rpad","trim","ltrim","rtrim","ltrimRxp","rtrimRxp","addThousandsSep","fmt","dec","end","ins","substring","numToStr","num","decimals","toFixed","formatNumber","nullStr","showPos","parseFloat","Transform","mx","my","bx","by","isNull","invert","inv","transform","x","y","xy","JSON","stringify","Bounds","setBounds","xmin","xmax","ymin","ymax","hasBounds","sameBounds","equals","bb","width","height","area","empty","a","b","c","d","update","centerX","centerY","containsPoint","containsBufferedPoint","containsCircle","buf","intersects","shift","padBounds","scale","pctY","halfWidth","halfHeight","kx","ky","undefined","cloneBounds","clone","clearBounds","mergePoint","fillOut","aspect","focusX","focusY","w","h","currAspect","tmp","t","getTransform","b2","flipY","mergeCircle","r","mergeBounds","sortOn","comparators","getKeyComparator","sort","cmp","genericSort","asc","compare","getGenericComparator","sortOnKey","getter","sortOnKey2","getKey","sortArrayByKeys","ids","getSortedIds","reorderArray","sortArrayIndex","j","idxs","idx","retn","quicksort","quicksortPartition","reverse","lo","hi","pivot","findRankByValue","value","rank","findValueByPct","Math","ceil","findValueByRank","l","m","findMedian","floor","median","mean","avg","NaN","BinArray","le","ArrayBuffer","Buffer","toArrayBuffer","_buffer","_bytes","Uint8Array","_view","DataView","_idx","_le","bufferToUintArray","wordLen","Uint32Array","Uint16Array","uintSize","bufferCopy","destId","srcId","bytes","byteLength","wordSize","srcArr","destArr","view","bufferSize","buffersAreIdentical","alen","blen","littleEndian","bigEndian","buffer","bytesLeft","skipBytes","readUint8","writeUint8","readInt8","getInt8","writeInt8","setInt8","readUint16","getUint16","writeUint16","setUint16","readUint32","getUint32","writeUint32","setUint32","readInt32","getInt32","writeInt32","setInt32","readFloat64","getFloat64","writeFloat64","setFloat64","readFloat64Array","Float64Array","readUint32Array","peek","getUint8","position","readCString","fixedLen","asciiOnly","byteVal","fromCharCode","writeString","maxLen","bytesWritten","charsToWrite","cval","charCodeAt","writeCString","maxChars","writeBuffer","startIdx","format","fn","formatter","formatValue","flags","padding","parseInt","substr","type","isHex","isInt","sign","padDigits","isZero","isNeg","padChar","padStr","toUpperCase","strLen","minWidth","codeRxp","literals","formatCodes","exec","literal","lastIndex","wildcardToRegExp","name","rxp","split","join","RegExp","expandoBuffer","rate","capacity","copyElements","rev","offs","extendBuffer","newLen","copyLen","mergeNames","name1","name2","merged","findStringPrefix","isFiniteNumber","isNonNegNumber","parsePercent","isPct","stop","api","internal","LOGGING","context","createContext","T","stack","Date","note","elapsed","pop","msg","verbose","runningInBrowser","gui","getStateVar","setStateVar","DEBUG","QUIET","VERBOSE","defs","input_files","UserError","err","messageArgs","cmd","unshift","message","debug","logArgs","absArcId","arcId","enableLogging","printError","console","formatLogArgs","formatStringsAsGrid","longest","colWidth","perLine","col","log","getWorldBounds","probablyDecimalDegreeBounds","world","bbox","containsBounds","clampToWorldBounds","layerHasGeometry","lyr","layerHasPaths","layerHasPoints","geometry_type","layerHasNonNullShapes","shapes","shp","requireDataFields","table","fields","dataFields","getFields","missingFields","requirePolylineLayer","requirePolygonLayer","requirePathLayer","R","D2R","PI","degreesToMeters","deg","distance3D","ax","ay","az","bz","dx","dy","dz","sqrt","distanceSq","distance2D","distanceSq3D","nearestPoint","minIdx","minDist","dist","innerAngle2","cx","cy","a1","atan2","a2","a3","abs","standardAngle","twoPI","signedAngle","abx","aby","cbx","cby","dotp","crossp","bearing","lng1","lat1","lng2","lat2","sin","cos","signedAngleSph","alng","alat","blng","blat","clng","clat","b1","convLngLatToSph","xsrc","ysrc","xbuf","ybuf","zbuf","p","lngLatToXYZ","xyzToLngLat","z","lat","asin","lng","cosLat","sphericalDistance","lam1","phi1","lam2","phi2","dlam","dphi","greatCircleDistance","innerAngle","ab","bc","theta","acos","innerAngle3D","cz","triangleArea","detSq","det","cosine","den","cosine3D","triangleArea3D","apexDistSq","ab2","bc2","ac2","dist2","dval","pointSegDistSq","pointSegDistSq3D","calcArcBounds","xx","yy","reversePathCoords","geom","segmentHit","segmentIntersection","ArcIter","_i","_n","_inc","_xx","_yy","fw","hasNext","FilteredArcIter","zz","_zlim","_stop","zlim","zarr","ShapeIter","arcs","_arcs","arc","_arc","nextArc","_ids","reset","getArcIter","ArcCollection","_ii","_nn","_zz","_zlimit","_bb","_allBounds","_arcIter","_filteredArcIter","initLegacyArcs","initXYData","nn","points","initBounds","initZData","data","bounds","numArcs","arcOffs","arcLen","updateVertexData","getVertexData","ii","getCopy","copy","Int32Array","setThresholds","setRetainedInterval","getFilteredPointCount","getPointCount","getFilteredVertexData","len2","arcCount","xx2","yy2","zz2","nn2","i2","n2","getFilteredCopy","iter","toJSON","forEachArcSegment","cb","absId","getRetainedInterval","step","v1","v2","forEachSegment","transformPoints","forEach2","forEach3","subarray","bind","deleteArcs","goodArcs","condenseArcs","goodPoints","dedupCoords","arcLen2","dedupArcCoords","getVertex","nth","indexOfVertex","pointIsEndpoint","arcIsClosed","arcIsLollipop","getArcLength","arcIsDegenerate","getShapeIter","thresholds","flattenThresholds","flatten","getRetainedPct","getPctByThreshold","setRetainedPct","getThresholdByPct","clampIntervalByPct","getRemovableThresholds","skip","getArcThresholds","arcIntersectsBBox","arcIsContained","arcIsSmaller","units","isPlanar","getBounds","getSimpleShapeBounds","arcIds","mergeArcBounds","getSimpleShapeBounds2","id","getMultiShapeBounds","shapeIds","inspect","keep","lineIntersection","orient2D","outsideRange","hit","crossIntersection","collinearIntersection","endpointHit","determinant2D","eps","findEndpointInRange","debugSegmentIntersection","nearest","clampIntersectionPoint","clampToCloseRange","out","lim","findClosestPointOnSeg","px","py","abSq","inside","minX","maxX","minY","maxY","useY","coords","sortSegmentIds","orderSegmentIds","quicksortSegmentIds","swap","insertionSortSegmentIds","id2","getIntersectionPoints","intersections","findSegmentIntersections","getUint32Array","yrange","stripeCount","calcSegmentIntersectionStripeCount","stripeSizes","stripeId","multiStripeId","singleStripeId","id1","s1","s2","stripeData","stripes","stripeSize","stripe","raw","intersectSegments","dedupIntersections","sortIntersections","getIntersectionKey","segLen","getAvgSegment2","s1p1","s1p2","s2p1","s2p2","s1p1x","s1p2x","s2p1x","s2p2x","s1p1y","s1p2y","s2p1y","s2p2y","seg1","seg2","formatIntersection","formatIntersectingSegment","getAvgSegment","getDirectedArcPresenceTest","forEachArcId","getArcPresenceTest","counts","countArcsInShapes","getArcPresenceTest2","layers","countArcsInLayers","traversePaths","findShapesByArcId","found","shpId","isHit","reversePath","findNextRemovableVertices","findNextRemovableVertex","jz","forEachSegmentInShape","shape","forEachSegmentInPath","cbArc","cbPart","cbShape","segId","parts","shapeId","partId","arcHasLength","filterEmptyArcs","shape2","path","groupPolygonRings","paths","reverseWinding","holes","groups","ringIndex","require","load","group","hole","containerId","containerArea","holeArea","candidates","search","ring","ringId","ringArea","isContained","getPathMetadata","getPlanarPathArea","quantizeArcs","quanta","bb1","bb2","round","define","amd","module","exports"],"mappings":"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","sourcesContent":["// This library is based on\n// https://github.com/mbloch/mapshaper\n// Copyright (c) 2013, Matthew Bloch\n// Licensed under the Mozilla Public License, v. 2.0.\n\nlet exportAPI;\n(function () {\n    const VERSION = '0.4.87';\n\n    const utils = {\n        getUniqueName (prefix) {\n            const n = Utils.__uniqcount || 0;\n            Utils.__uniqcount = n + 1;\n            return (prefix || \"__id_\") + n;\n        },\n\n        isFunction (obj) {\n            return typeof obj == 'function';\n        },\n\n        isObject (obj) {\n            return obj === Object(obj); // via underscore\n        },\n\n        clamp (val, min, max) {\n            return val < min ? min : (val > max ? max : val);\n        },\n\n        interpolate (val1, val2, pct) {\n            return val1 * (1 - pct) + val2 * pct;\n        },\n\n        isArray (obj) {\n            return Array.isArray(obj);\n        },\n\n        // NaN -> true\n        isNumber (obj) {\n            // return toString.call(obj) == '[object Number]'; // ie8 breaks?\n            return obj != null && obj.constructor == Number;\n        },\n\n        isInteger (obj) {\n            return Utils.isNumber(obj) && ((obj | 0) === obj);\n        },\n\n        isString (obj) {\n            return obj != null && obj.toString === String.prototype.toString;\n            // TODO: replace w/ something better.\n        },\n\n        isBoolean (obj) {\n            return obj === true || obj === false;\n        },\n\n        // Convert an array-like object to an Array, or make a copy if @obj is an Array\n        toArray (obj) {\n            let arr;\n            if (!Utils.isArrayLike(obj)) error(\"Utils.toArray() requires an array-like object\");\n            try {\n                arr = Array.prototype.slice.call(obj, 0); // breaks in ie8\n            } catch (e) {\n                // support ie8\n                arr = [];\n                for (let i = 0, n = obj.length; i < n; i++) {\n                    arr[i] = obj[i];\n                }\n            }\n            return arr;\n        },\n\n        // Array like: has length property, is numerically indexed and mutable.\n        // TODO: try to detect objects with length property but no indexed data elements\n        isArrayLike (obj) {\n            if (!obj) return false;\n            if (Utils.isArray(obj)) return true;\n            if (Utils.isString(obj)) return false;\n            if (obj.length === 0) return true;\n            if (obj.length > 0) return true;\n            return false;\n        },\n\n        // See https://raw.github.com/kvz/phpjs/master/functions/strings/addslashes.js\n        addslashes (str) {\n            return (`${str}`).replace(/[\\\\\"']/g, '\\\\$&').replace(/\\u0000/g, '\\\\0'); // eslint-disable-line no-control-regex\n        },\n\n        // Escape a literal string to use in a regexp.\n        // Ref.: http://simonwillison.net/2006/Jan/20/escape/\n        regexEscape (str) {\n            return str.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n        },\n\n        defaults (dest, ...args) {\n            for (let i = 0, n = args.length; i < n; i++) {\n                const src = args[i] || {};\n                for (const key in src) {\n                    if (key in dest === false && Object.prototype.hasOwnProperty.call(src, key)) {\n                        dest[key] = src[key];\n                    }\n                }\n            }\n            return dest;\n        },\n\n        extend (o, ...args) {\n            const dest = o || {},\n                n = args.length;\n            let key, i, src;\n            for (i = 0; i < n; i++) {\n                src = args[i] || {};\n                for (key in src) {\n                    if (Object.prototype.hasOwnProperty.call(src, key)) {\n                        dest[key] = src[key];\n                    }\n                }\n            }\n            return dest;\n        },\n\n        // Pseudoclassical inheritance\n        //\n        // Inherit from a Parent function:\n        //    Utils.inherit(Child, Parent);\n        // Call parent's constructor (inside child constructor):\n        //    this.__super__([args...]);\n        inherit (targ, src) {\n            const f = function (...args) {\n                if (this.__super__ == f) {\n                    // add __super__ of parent to front of lookup chain\n                    // so parent class constructor can call its parent using this.__super__\n                    this.__super__ = src.prototype.__super__;\n                    // call parent constructor function. this.__super__ now points to parent-of-parent\n                    src.apply(this, ...args);\n                    // remove temp __super__, expose targ.prototype.__super__ again\n                    delete this.__super__;\n                }\n            };\n\n            f.prototype = src.prototype || src; // added || src to allow inheriting from objects as well as functions\n            // Extend targ prototype instead of wiping it out --\n            //   in case inherit() is called after targ.prototype = {stuff}; statement\n            targ.prototype = Utils.extend(new f(), targ.prototype); //\n            targ.prototype.constructor = targ;\n            targ.prototype.__super__ = f;\n        },\n\n        // Inherit from a parent, call the parent's constructor, optionally extend\n        // prototype with optional additional arguments\n        subclass (parent, ...args) {\n            const child = function () {\n                this.__super__(parent, ...Utils.toArray(args));\n            };\n            Utils.inherit(child, parent);\n            for (let i = 0; i < arguments.length; i++) {\n                Utils.extend(child.prototype, args[i]);\n            }\n            return child;\n        }\n\n    };\n\n    const Utils = utils;\n\n// Append elements of @src array to @dest array\n    utils.merge = function (dest, src) {\n        if (!utils.isArray(dest) || !utils.isArray(src)) {\n            error(\"Usage: utils.merge(destArray, srcArray);\");\n        }\n        for (let i = 0, n = src.length; i < n; i++) {\n            dest.push(src[i]);\n        }\n        return dest;\n    };\n\n// Returns elements in arr and not in other\n// (similar to underscore diff)\n    utils.difference = function (arr, other) {\n        const index = utils.arrayToIndex(other);\n        return arr.filter((el) => !Object.prototype.hasOwnProperty.call(index, el));\n    };\n\n// Test a string or array-like object for existence of substring or element\n    utils.contains = function (container, item) {\n        if (utils.isString(container)) {\n            return container.indexOf(item) != -1;\n        } else if (utils.isArrayLike(container)) {\n            return utils.indexOf(container, item) != -1;\n        }\n        error(\"Expected Array or String argument\");\n    };\n\n    utils.some = function (arr, test) {\n        return arr.reduce((val, item) => \n             val || test(item) // TODO: short-circuit?\n        , false);\n    };\n\n    utils.every = function (arr, test) {\n        return arr.reduce((val, item) => val && test(item), true);\n    };\n\n    utils.find = function (arr, test, ctx) {\n        const matches = arr.filter(test, ctx);\n        return matches.length === 0 ? null : matches[0];\n    };\n\n    utils.indexOf = function (arr, item, prop) {\n        if (prop) error(\"utils.indexOf() No longer supports property argument\");\n        const nan = item !== item;\n        for (let i = 0, len = arr.length || 0; i < len; i++) {\n            if (arr[i] === item) return i;\n            if (nan && arr[i] !== arr[i]) return i;\n        }\n        return -1;\n    };\n\n    utils.range = function (len, start, inc) {\n        const arr = [];\n        let v = start === void 0 ? 0 : start;\n        const i = inc === void 0 ? 1 : inc;\n        while (len--) {\n            arr.push(v);\n            v += i;\n        }\n        return arr;\n    };\n\n    utils.repeat = function (times, func) {\n        const values = [];\n        let val;\n        for (let i = 0; i < times; i++) {\n            val = func(i);\n            if (val !== void 0) {\n                values[i] = val;\n            }\n        }\n        return values.length > 0 ? values : void 0;\n    };\n\n// Calc sum, skip falsy and NaN values\n// Assumes: no other non-numeric objects in array\n//\n    utils.sum = function (arr, info) {\n        if (!utils.isArrayLike(arr)) error(\"utils.sum() expects an array, received:\", arr);\n        let tot = 0,\n            nan = 0,\n            val;\n        for (let i = 0, n = arr.length; i < n; i++) {\n            val = arr[i];\n            if (val) {\n                tot += val;\n            } else if (isNaN(val)) {\n                nan++;\n            }\n        }\n        if (info) {\n            info.nan = nan;\n        }\n        return tot;\n    };\n\n// Calculate min and max values of an array, ignoring NaN values\n    utils.getArrayBounds = function (arr) {\n        let min = Infinity,\n            max = -Infinity,\n            nan = 0, val;\n        for (let i = 0, len = arr.length; i < len; i++) {\n            val = arr[i];\n            if (val !== val) nan++;\n            if (val < min) min = val;\n            if (val > max) max = val;\n        }\n        return {\n            min,\n            max,\n            nan\n        };\n    };\n\n    utils.uniq = function (src) {\n        const index = {};\n        return src.reduce((memo, el) => {\n            if (el in index === false) {\n                index[el] = true;\n                memo.push(el);\n            }\n            return memo;\n        }, []);\n    };\n\n    utils.pluck = function (arr, key) {\n        return arr.map((obj) => obj[key]);\n    };\n\n    utils.countValues = function (arr) {\n        return arr.reduce((memo, val) => {\n            memo[val] = (val in memo) ? memo[val] + 1 : 1;\n            return memo;\n        }, {});\n    };\n\n    utils.indexOn = function (arr, k) {\n        return arr.reduce((index, o) => {\n            index[o[k]] = o;\n            return index;\n        }, {});\n    };\n\n    utils.groupBy = function (arr, k) {\n        return arr.reduce((index, o) => {\n            const keyval = o[k];\n            if (keyval in index) {\n                index[keyval].push(o);\n            } else {\n                index[keyval] = [o];\n            }\n            return index;\n        }, {});\n    };\n\n    utils.arrayToIndex = function (arr, val) {\n        const init = arguments.length > 1;\n        return arr.reduce((index, key) => {\n            index[key] = init ? val : true;\n            return index;\n        }, {});\n    };\n\n// Support for iterating over array-like objects, like typed arrays\n    utils.forEach = function (arr, func, ctx) {\n        if (!utils.isArrayLike(arr)) {\n            throw new Error(`#forEach() takes an array-like argument. ${arr}`);\n        }\n        for (let i = 0, n = arr.length; i < n; i++) {\n            func.call(ctx, arr[i], i);\n        }\n    };\n\n    utils.forEachProperty = function (o, func, ctx) {\n        Object.keys(o).forEach((key) => {\n            func.call(ctx, o[key], key);\n        });\n    };\n\n    utils.initializeArray = function (arr, init) {\n        for (let i = 0, len = arr.length; i < len; i++) {\n            arr[i] = init;\n        }\n        return arr;\n    };\n\n    utils.replaceArray = function (arr, arr2) {\n        arr.splice(0, arr.length);\n        for (let i = 0, n = arr2.length; i < n; i++) {\n            arr.push(arr2[i]);\n        }\n    };\n\n\n    Utils.repeatString = function (src, n) {\n        let str = \"\";\n        for (let i = 0; i < n; i++)\n            str += src;\n        return str;\n    };\n\n    Utils.pluralSuffix = function (count) {\n        return count != 1 ? 's' : '';\n    };\n\n    Utils.endsWith = function (str, ending) {\n        return str.indexOf(ending, str.length - ending.length) !== -1;\n    };\n\n    Utils.lpad = function (str, size, pad) {\n        pad = pad || ' ';\n        str = String(str);\n        return Utils.repeatString(pad, size - str.length) + str;\n    };\n\n    Utils.rpad = function (str, size, pad) {\n        pad = pad || ' ';\n        str = String(str);\n        return str + Utils.repeatString(pad, size - str.length);\n    };\n\n    Utils.trim = function (str) {\n        return Utils.ltrim(Utils.rtrim(str));\n    };\n\n    const ltrimRxp = /^\\s+/;\n    Utils.ltrim = function (str) {\n        return str.replace(ltrimRxp, '');\n    };\n\n    const rtrimRxp = /\\s+$/;\n    Utils.rtrim = function (str) {\n        return str.replace(rtrimRxp, '');\n    };\n\n    Utils.addThousandsSep = function (str) {\n        let fmt = '';\n        const start = str[0] == '-' ? 1 : 0;\n        const dec = str.indexOf('.');\n        let end = str.length,\n            ins = (dec == -1 ? end : dec) - 3;\n        while (ins > start) {\n            fmt = `,${str.substring(ins, end)}${fmt}`;\n            end = ins;\n            ins -= 3;\n        }\n        return str.substring(0, end) + fmt;\n    };\n\n    Utils.numToStr = function (num, decimals) {\n        return decimals >= 0 ? num.toFixed(decimals) : String(num);\n    };\n\n    Utils.formatNumber = function (num, decimals, nullStr, showPos) {\n        let fmt;\n        if (isNaN(num)) {\n            fmt = nullStr || '-';\n        } else {\n            fmt = Utils.numToStr(num, decimals);\n            fmt = Utils.addThousandsSep(fmt);\n            if (showPos && parseFloat(fmt) > 0) {\n                fmt = `+${fmt}`;\n            }\n        }\n        return fmt;\n    };\n\n\n    function Transform() {\n        this.mx = this.my = 1;\n        this.bx = this.by = 0;\n    }\n\n    Transform.prototype.isNull = function () {\n        return !this.mx || !this.my || isNaN(this.bx) || isNaN(this.by);\n    };\n\n    Transform.prototype.invert = function () {\n        const inv = new Transform();\n        inv.mx = 1 / this.mx;\n        inv.my = 1 / this.my;\n        //inv.bx = -this.bx * inv.mx;\n        //inv.by = -this.by * inv.my;\n        inv.bx = -this.bx / this.mx;\n        inv.by = -this.by / this.my;\n        return inv;\n    };\n\n\n    Transform.prototype.transform = function (x, y, xy) {\n        xy = xy || [];\n        xy[0] = x * this.mx + this.bx;\n        xy[1] = y * this.my + this.by;\n        return xy;\n    };\n\n    Transform.prototype.toString = function () {\n        return JSON.stringify(Utils.extend({}, this));\n    };\n\n\n    function Bounds(...args) {\n        if (args.length > 0) {\n            this.setBounds(...args);\n        }\n    }\n\n    Bounds.prototype.toString = function () {\n        return JSON.stringify({\n            xmin: this.xmin,\n            xmax: this.xmax,\n            ymin: this.ymin,\n            ymax: this.ymax\n        });\n    };\n\n    Bounds.prototype.toArray = function () {\n        return this.hasBounds() ? [this.xmin, this.ymin, this.xmax, this.ymax] : [];\n    };\n\n    Bounds.prototype.hasBounds = function () {\n        return this.xmin <= this.xmax && this.ymin <= this.ymax;\n    };\n\n    Bounds.prototype.sameBounds =\n        Bounds.prototype.equals = function (bb) {\n            return bb && this.xmin === bb.xmin && this.xmax === bb.xmax &&\n                this.ymin === bb.ymin && this.ymax === bb.ymax;\n        };\n\n    Bounds.prototype.width = function () {\n        return (this.xmax - this.xmin) || 0;\n    };\n\n    Bounds.prototype.height = function () {\n        return (this.ymax - this.ymin) || 0;\n    };\n\n    Bounds.prototype.area = function () {\n        return this.width() * this.height() || 0;\n    };\n\n    Bounds.prototype.empty = function () {\n        this.xmin = this.ymin = this.xmax = this.ymax = void 0;\n        return this;\n    };\n\n    Bounds.prototype.setBounds = function (a, b, c, d) {\n        if (arguments.length == 1) {\n            // assume first arg is a Bounds or array\n            if (Utils.isArrayLike(a)) {\n                b = a[1];\n                c = a[2];\n                d = a[3];\n                a = a[0];\n            } else {\n                b = a.ymin;\n                c = a.xmax;\n                d = a.ymax;\n                a = a.xmin;\n            }\n        }\n\n        this.xmin = a;\n        this.ymin = b;\n        this.xmax = c;\n        this.ymax = d;\n        if (a > c || b > d) this.update();\n        // error(\"Bounds#setBounds() min/max reversed:\", a, b, c, d);\n        return this;\n    };\n\n\n    Bounds.prototype.centerX = function () {\n        const x = (this.xmin + this.xmax) * 0.5;\n        return x;\n    };\n\n    Bounds.prototype.centerY = function () {\n        const y = (this.ymax + this.ymin) * 0.5;\n        return y;\n    };\n\n    Bounds.prototype.containsPoint = function (x, y) {\n        if (x >= this.xmin && x <= this.xmax &&\n            y <= this.ymax && y >= this.ymin) {\n            return true;\n        }\n        return false;\n    };\n\n// intended to speed up slightly bubble symbol detection; could use intersects() instead\n// TODO: fix false positive where circle is just outside a corner of the box\n    Bounds.prototype.containsBufferedPoint =\n        Bounds.prototype.containsCircle = function (x, y, buf) {\n            if (x + buf > this.xmin && x - buf < this.xmax) {\n                if (y - buf < this.ymax && y + buf > this.ymin) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n    Bounds.prototype.intersects = function (bb) {\n        if (bb.xmin <= this.xmax && bb.xmax >= this.xmin &&\n            bb.ymax >= this.ymin && bb.ymin <= this.ymax) {\n            return true;\n        }\n        return false;\n    };\n\n    Bounds.prototype.contains = function (bb) {\n        if (bb.xmin >= this.xmin && bb.ymax <= this.ymax &&\n            bb.xmax <= this.xmax && bb.ymin >= this.ymin) {\n            return true;\n        }\n        return false;\n    };\n\n    Bounds.prototype.shift = function (x, y) {\n        this.setBounds(this.xmin + x,\n            this.ymin + y, this.xmax + x, this.ymax + y);\n    };\n\n    Bounds.prototype.padBounds = function (a, b, c, d) {\n        this.xmin -= a;\n        this.ymin -= b;\n        this.xmax += c;\n        this.ymax += d;\n    };\n\n// Rescale the bounding box by a fraction. TODO: implement focus.\n// @param {number} pct Fraction of original extents\n// @param {number} pctY Optional amount to scale Y\n//\n    Bounds.prototype.scale = function (pct, pctY) { /*, focusX, focusY*/\n        const halfWidth = (this.xmax - this.xmin) * 0.5;\n        const halfHeight = (this.ymax - this.ymin) * 0.5;\n        const kx = pct - 1;\n        const ky = pctY === undefined ? kx : pctY - 1;\n        this.xmin -= halfWidth * kx;\n        this.ymin -= halfHeight * ky;\n        this.xmax += halfWidth * kx;\n        this.ymax += halfHeight * ky;\n    };\n\n// Return a bounding box with the same extent as this one.\n    Bounds.prototype.cloneBounds = // alias so child classes can override clone()\n        Bounds.prototype.clone = function () {\n            return new Bounds(this.xmin, this.ymin, this.xmax, this.ymax);\n        };\n\n    Bounds.prototype.clearBounds = function () {\n        this.setBounds(new Bounds());\n    };\n\n    Bounds.prototype.mergePoint = function (x, y) {\n        if (this.xmin === void 0) {\n            this.setBounds(x, y, x, y);\n        } else {\n            // this works even if x,y are NaN\n            if (x < this.xmin) this.xmin = x;\n            else if (x > this.xmax) this.xmax = x;\n\n            if (y < this.ymin) this.ymin = y;\n            else if (y > this.ymax) this.ymax = y;\n        }\n    };\n\n// expands either x or y dimension to match @aspect (width/height ratio)\n// @focusX, @focusY (optional): expansion focus, as a fraction of width and height\n    Bounds.prototype.fillOut = function (aspect, focusX, focusY) {\n        if (arguments.length < 3) {\n            focusX = 0.5;\n            focusY = 0.5;\n        }\n        const w = this.width(),\n            h = this.height(),\n            currAspect = w / h;\n        let pad;\n        if (isNaN(aspect) || aspect <= 0) {\n            // error condition; don't pad\n        } else if (currAspect < aspect) { // fill out x dimension\n            pad = h * aspect - w;\n            this.xmin -= (1 - focusX) * pad;\n            this.xmax += focusX * pad;\n        } else {\n            pad = w / aspect - h;\n            this.ymin -= (1 - focusY) * pad;\n            this.ymax += focusY * pad;\n        }\n        return this;\n    };\n\n    Bounds.prototype.update = function () {\n        let tmp;\n        if (this.xmin > this.xmax) {\n            tmp = this.xmin;\n            this.xmin = this.xmax;\n            this.xmax = tmp;\n        }\n        if (this.ymin > this.ymax) {\n            tmp = this.ymin;\n            this.ymin = this.ymax;\n            this.ymax = tmp;\n        }\n    };\n\n    Bounds.prototype.transform = function (t) {\n        this.xmin = this.xmin * t.mx + t.bx;\n        this.xmax = this.xmax * t.mx + t.bx;\n        this.ymin = this.ymin * t.my + t.by;\n        this.ymax = this.ymax * t.my + t.by;\n        this.update();\n        return this;\n    };\n\n// Returns a Transform object for mapping this onto Bounds @b2\n// @flipY (optional) Flip y-axis coords, for converting to/from pixel coords\n//\n    Bounds.prototype.getTransform = function (b2, flipY) {\n        const t = new Transform();\n        t.mx = b2.width() / this.width() || 1; // TODO: better handling of 0 w,h\n        t.bx = b2.xmin - t.mx * this.xmin;\n        if (flipY) {\n            t.my = -b2.height() / this.height() || 1;\n            t.by = b2.ymax - t.my * this.ymin;\n        } else {\n            t.my = b2.height() / this.height() || 1;\n            t.by = b2.ymin - t.my * this.ymin;\n        }\n        return t;\n    };\n\n    Bounds.prototype.mergeCircle = function (x, y, r) {\n        if (r < 0) r = -r;\n        this.mergeBounds([x - r, y - r, x + r, y + r]);\n    };\n\n    Bounds.prototype.mergeBounds = function (bb, ...args) {\n        let a, b, c, d;\n        if (bb instanceof Bounds) {\n            a = bb.xmin;\n            b = bb.ymin;\n            c = bb.xmax;\n            d = bb.ymax;\n        } else if (args.length == 3) {\n            a = bb;\n            b = args[0];\n            c = args[1];\n            d = args[2];\n        } else if (bb.length == 4) {\n            // assume array: [xmin, ymin, xmax, ymax]\n            a = bb[0];\n            b = bb[1];\n            c = bb[2];\n            d = bb[3];\n        } else {\n            error(\"Bounds#mergeBounds() invalid argument:\", bb);\n        }\n\n        if (this.xmin === void 0) {\n            this.setBounds(a, b, c, d);\n        } else {\n            if (a < this.xmin) this.xmin = a;\n            if (b < this.ymin) this.ymin = b;\n            if (c > this.xmax) this.xmax = c;\n            if (d > this.ymax) this.ymax = d;\n        }\n        return this;\n    };\n\n\n// Sort an array of objects based on one or more properties.\n// Usage: Utils.sortOn(array, key1, asc?[, key2, asc? ...])\n//\n    Utils.sortOn = function (arr, ...args) {\n        const comparators = [];\n        for (let i = 0; i < arguments.length; i += 2) {\n            comparators.push(Utils.getKeyComparator(args[i], args[i + 1]));\n        }\n        arr.sort((a, b) => {\n            let cmp = 0,\n                i = 0;\n            const n = comparators.length;\n            while (i < n && cmp === 0) {\n                cmp = comparators[i](a, b);\n                i++;\n            }\n            return cmp;\n        });\n        return arr;\n    };\n\n// Sort array of values that can be compared with < > operators (strings, numbers)\n// null, undefined and NaN are sorted to the end of the array\n//\n    Utils.genericSort = function (arr, asc) {\n        const compare = Utils.getGenericComparator(asc);\n        Array.prototype.sort.call(arr, compare);\n        return arr;\n    };\n\n    Utils.sortOnKey = function (arr, getter, asc) {\n        const compare = Utils.getGenericComparator(asc !== false); // asc is default\n        arr.sort((a, b) => compare(getter(a), getter(b)));\n    };\n\n// Stashes keys in a temp array (better if calculating key is expensive).\n    Utils.sortOnKey2 = function (arr, getKey, asc) {\n        Utils.sortArrayByKeys(arr, arr.map(getKey), asc);\n    };\n\n    Utils.sortArrayByKeys = function (arr, keys, asc) {\n        const ids = Utils.getSortedIds(keys, asc);\n        Utils.reorderArray(arr, ids);\n    };\n\n    Utils.getSortedIds = function (arr, asc) {\n        const ids = Utils.range(arr.length);\n        Utils.sortArrayIndex(ids, arr, asc);\n        return ids;\n    };\n\n    Utils.sortArrayIndex = function (ids, arr, asc) {\n        const compare = Utils.getGenericComparator(asc);\n        ids.sort((i, j) => {\n            // added i, j comparison to guarantee that sort is stable\n            const cmp = compare(arr[i], arr[j]);\n            return cmp > 0 || cmp === 0 && i > j ? 1 : -1;\n        });\n    };\n\n    Utils.reorderArray = function (arr, idxs) {\n        const len = idxs.length;\n        const arr2 = [];\n        for (let i = 0; i < len; i++) {\n            const idx = idxs[i];\n            if (idx < 0 || idx >= len) error(\"Out-of-bounds array idx\");\n            arr2[i] = arr[idx];\n        }\n        Utils.replaceArray(arr, arr2);\n    };\n\n    Utils.getKeyComparator = function (key, asc) {\n        const compare = Utils.getGenericComparator(asc);\n        return function (a, b) {\n            return compare(a[key], b[key]);\n        };\n    };\n\n    Utils.getGenericComparator = function (asc) {\n        asc = asc !== false;\n        return function (a, b) {\n            let retn = 0;\n            if (b == null) {\n                retn = a == null ? 0 : -1;\n            } else if (a == null) {\n                retn = 1;\n            } else if (a < b) {\n                retn = asc ? -1 : 1;\n            } else if (a > b) {\n                retn = asc ? 1 : -1;\n            } else if (a !== a) {\n                retn = 1;\n            } else if (b !== b) {\n                retn = -1;\n            }\n            return retn;\n        };\n    };\n\n\n// Generic in-place sort (null, NaN, undefined not handled)\n    Utils.quicksort = function (arr, asc) {\n        Utils.quicksortPartition(arr, 0, arr.length - 1);\n        if (asc === false) Array.prototype.reverse.call(arr); // Works with typed arrays\n        return arr;\n    };\n\n// Moved out of Utils.quicksort() (saw >100% speedup in Chrome with deep recursion)\n    Utils.quicksortPartition = function (a, lo, hi) {\n        let i = lo,\n            j = hi,\n            pivot, tmp;\n        while (i < hi) {\n            pivot = a[lo + hi >> 1]; // avoid n^2 performance on sorted arrays\n            while (i <= j) {\n                while (a[i] < pivot) i++;\n                while (a[j] > pivot) j--;\n                if (i <= j) {\n                    tmp = a[i];\n                    a[i] = a[j];\n                    a[j] = tmp;\n                    i++;\n                    j--;\n                }\n            }\n            if (lo < j) Utils.quicksortPartition(a, lo, j);\n            lo = i;\n            j = hi;\n        }\n    };\n\n\n    Utils.findRankByValue = function (arr, value) {\n        if (isNaN(value)) return arr.length;\n        let rank = 1;\n        for (let i = 0, n = arr.length; i < n; i++) {\n            if (value > arr[i]) rank++;\n        }\n        return rank;\n    };\n\n    Utils.findValueByPct = function (arr, pct) {\n        const rank = Math.ceil((1 - pct) * (arr.length));\n        return Utils.findValueByRank(arr, rank);\n    };\n\n// See http://ndevilla.free.fr/median/median/src/wirth.c\n// Elements of @arr are reordered\n//\n    Utils.findValueByRank = function (arr, rank) {\n        if (!arr.length || rank < 1 || rank > arr.length) error(\"[findValueByRank()] invalid input\");\n\n        rank = Utils.clamp(rank | 0, 1, arr.length);\n        const k = rank - 1, // conv. rank to array index\n            n = arr.length;\n        let l = 0,\n            m = n - 1,\n            i, j, val, tmp;\n\n        while (l < m) {\n            val = arr[k];\n            i = l;\n            j = m;\n            do {\n                while (arr[i] < val) {\n                    i++;\n                }\n                while (val < arr[j]) {\n                    j--;\n                }\n                if (i <= j) {\n                    tmp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = tmp;\n                    i++;\n                    j--;\n                }\n            } while (i <= j);\n            if (j < k) l = i;\n            if (k < i) m = j;\n        }\n        return arr[k];\n    };\n\n//\n//\n    Utils.findMedian = function (arr) {\n        const n = arr.length,\n            rank = Math.floor(n / 2) + 1;\n        let median = Utils.findValueByRank(arr, rank);\n        if ((n & 1) == 0) {\n            median = (median + Utils.findValueByRank(arr, rank - 1)) / 2;\n        }\n        return median;\n    };\n\n\n    Utils.mean = function (arr) {\n        let count = 0,\n            avg = NaN,\n            val;\n        for (let i = 0, n = arr.length; i < n; i++) {\n            val = arr[i];\n            if (isNaN(val)) continue;\n            avg = ++count == 1 ? val : val / count + (count - 1) / count * avg;\n        }\n        return avg;\n    };\n\n\n// Wrapper for DataView class for more convenient reading and writing of\n//   binary data; Remembers endianness and read/write position.\n// Has convenience methods for copying from buffers, etc.\n//\n    function BinArray(buf, le) {\n        if (Utils.isNumber(buf)) {\n            buf = new ArrayBuffer(buf);\n        } else if (typeof Buffer == 'function' && buf instanceof Buffer) { // eslint-disable-line no-undef\n            // Since node 0.10, DataView constructor doesn't accept Buffers,\n            //   so need to copy Buffer to ArrayBuffer\n            buf = BinArray.toArrayBuffer(buf);\n        }\n        if (buf instanceof ArrayBuffer == false) {\n            error(\"BinArray constructor takes an integer, ArrayBuffer or Buffer argument\");\n        }\n        this._buffer = buf;\n        this._bytes = new Uint8Array(buf);\n        this._view = new DataView(buf);\n        this._idx = 0;\n        this._le = le !== false;\n    }\n\n    BinArray.bufferToUintArray = function (buf, wordLen) {\n        if (wordLen == 4) return new Uint32Array(buf);\n        if (wordLen == 2) return new Uint16Array(buf);\n        if (wordLen == 1) return new Uint8Array(buf);\n        error(\"BinArray.bufferToUintArray() invalid word length:\", wordLen);\n    };\n\n    BinArray.uintSize = function (i) {\n        return i & 1 || i & 2 || 4;\n    };\n\n    BinArray.bufferCopy = function (dest, destId, src, srcId, bytes) {\n        srcId = srcId || 0;\n        bytes = bytes || src.byteLength - srcId;\n        if (dest.byteLength - destId < bytes)\n            error(\"Buffer overflow; tried to write:\", bytes);\n\n        // When possible, copy buffer data in multi-byte chunks... Added this for faster copying of\n        // shapefile data, which is aligned to 32 bits.\n        const wordSize = Math.min(BinArray.uintSize(bytes), BinArray.uintSize(srcId),\n            BinArray.uintSize(dest.byteLength), BinArray.uintSize(destId),\n            BinArray.uintSize(src.byteLength));\n\n        const srcArr = BinArray.bufferToUintArray(src, wordSize),\n            destArr = BinArray.bufferToUintArray(dest, wordSize);\n        let count = bytes / wordSize,\n            i = srcId / wordSize,\n            j = destId / wordSize;\n\n        while (count--) {\n            destArr[j++] = srcArr[i++];\n        }\n        return bytes;\n    };\n\n    BinArray.toArrayBuffer = function (src) {\n        const n = src.length,\n            dest = new ArrayBuffer(n),\n            view = new Uint8Array(dest);\n        for (let i = 0; i < n; i++) {\n            view[i] = src[i];\n        }\n        return dest;\n    };\n\n// Return length in bytes of an ArrayBuffer or Buffer\n//\n    BinArray.bufferSize = function (buf) {\n        return (buf instanceof ArrayBuffer ? buf.byteLength : buf.length | 0);\n    };\n\n    Utils.buffersAreIdentical = function (a, b) {\n        const alen = BinArray.bufferSize(a);\n        const blen = BinArray.bufferSize(b);\n        if (alen != blen) {\n            return false;\n        }\n        for (let i = 0; i < alen; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    BinArray.prototype = {\n        size () {\n            return this._buffer.byteLength;\n        },\n\n        littleEndian () {\n            this._le = true;\n            return this;\n        },\n\n        bigEndian () {\n            this._le = false;\n            return this;\n        },\n\n        buffer () {\n            return this._buffer;\n        },\n\n        bytesLeft () {\n            return this._buffer.byteLength - this._idx;\n        },\n\n        skipBytes (bytes) {\n            this._idx += (bytes + 0);\n            return this;\n        },\n\n        readUint8 () {\n            return this._bytes[this._idx++];\n        },\n\n        writeUint8 (val) {\n            this._bytes[this._idx++] = val;\n            return this;\n        },\n\n        readInt8 () {\n            return this._view.getInt8(this._idx++);\n        },\n\n        writeInt8 (val) {\n            this._view.setInt8(this._idx++, val);\n            return this;\n        },\n\n        readUint16 () {\n            const val = this._view.getUint16(this._idx, this._le);\n            this._idx += 2;\n            return val;\n        },\n\n        writeUint16 (val) {\n            this._view.setUint16(this._idx, val, this._le);\n            this._idx += 2;\n            return this;\n        },\n\n        readUint32 () {\n            const val = this._view.getUint32(this._idx, this._le);\n            this._idx += 4;\n            return val;\n        },\n\n        writeUint32 (val) {\n            this._view.setUint32(this._idx, val, this._le);\n            this._idx += 4;\n            return this;\n        },\n\n        readInt32 () {\n            const val = this._view.getInt32(this._idx, this._le);\n            this._idx += 4;\n            return val;\n        },\n\n        writeInt32 (val) {\n            this._view.setInt32(this._idx, val, this._le);\n            this._idx += 4;\n            return this;\n        },\n\n        readFloat64 () {\n            const val = this._view.getFloat64(this._idx, this._le);\n            this._idx += 8;\n            return val;\n        },\n\n        writeFloat64 (val) {\n            this._view.setFloat64(this._idx, val, this._le);\n            this._idx += 8;\n            return this;\n        },\n\n        // Returns a Float64Array containing @len doubles\n        //\n        readFloat64Array (len) {\n            const bytes = len * 8,\n                i = this._idx,\n                buf = this._buffer;\n            let arr;\n            // Inconsistent: first is a view, second a copy...\n            if (i % 8 === 0) {\n                arr = new Float64Array(buf, i, len);\n            } else if (buf.slice) {\n                arr = new Float64Array(buf.slice(i, i + bytes));\n            } else { // ie10, etc\n                const dest = new ArrayBuffer(bytes);\n                BinArray.bufferCopy(dest, 0, buf, i, bytes);\n                arr = new Float64Array(dest);\n            }\n            this._idx += bytes;\n            return arr;\n        },\n\n        readUint32Array (len) {\n            const arr = [];\n            for (let i = 0; i < len; i++) {\n                arr.push(this.readUint32());\n            }\n            return arr;\n        },\n\n        peek (i) {\n            return this._view.getUint8(i >= 0 ? i : this._idx);\n        },\n\n        position (i) {\n            if (i != null) {\n                this._idx = i;\n                return this;\n            }\n            return this._idx;\n        },\n\n        readCString (fixedLen, asciiOnly) {\n            let str = \"\",\n                count = fixedLen >= 0 ? fixedLen : this.bytesLeft();\n            while (count > 0) {\n                const byteVal = this.readUint8();\n                count--;\n                if (byteVal == 0) {\n                    break;\n                } else if (byteVal > 127 && asciiOnly) {\n                    str = null;\n                    break;\n                }\n                str += String.fromCharCode(byteVal);\n            }\n\n            if (fixedLen > 0 && count > 0) {\n                this.skipBytes(count);\n            }\n            return str;\n        },\n\n        writeString (str, maxLen) {\n            let bytesWritten = 0,\n                charsToWrite = str.length,\n                cval;\n            if (maxLen) {\n                charsToWrite = Math.min(charsToWrite, maxLen);\n            }\n            for (let i = 0; i < charsToWrite; i++) {\n                cval = str.charCodeAt(i);\n                if (cval > 127) {\n                    error(\"#writeCString() Unicode value beyond ascii range\");\n                    cval = '?'.charCodeAt(0);\n                }\n                this.writeUint8(cval);\n                bytesWritten++;\n            }\n            return bytesWritten;\n        },\n\n        writeCString (str, fixedLen) {\n            const maxChars = fixedLen ? fixedLen - 1 : null;\n            let bytesWritten = this.writeString(str, maxChars);\n\n            this.writeUint8(0); // terminator\n            bytesWritten++;\n\n            if (fixedLen) {\n                while (bytesWritten < fixedLen) {\n                    this.writeUint8(0);\n                    bytesWritten++;\n                }\n            }\n            return this;\n        },\n\n        writeBuffer (buf, bytes, startIdx) {\n            this._idx += BinArray.bufferCopy(this._buffer, this._idx, buf, startIdx, bytes);\n            return this;\n        }\n    };\n\n\n    /*\nA simplified version of printf formatting\nFormat codes: %[flags][width][.precision]type\n\nsupported flags:\n  +   add '+' before positive numbers\n  0   left-pad with '0'\n  '   Add thousands separator\nwidth: 1 to many\nprecision: .(1 to many)\ntype:\n  s     string\n  di    integers\n  f     decimal numbers\n  xX    hexidecimal (unsigned)\n  %     literal '%'\n\nExamples:\n  code    val    formatted\n  %+d     1      '+1'\n  %4i     32     '  32'\n  %04i    32     '0032'\n  %x      255    'ff'\n  %.2f    0.125  '0.13'\n  %'f     1000   '1,000'\n*/\n\n// Usage: Utils.format(formatString, [values])\n// Tip: When reusing the same format many times, use Utils.formatter() for 5x - 10x better performance\n//\n    Utils.format = function (fmt, ...args) {\n        const fn = Utils.formatter(fmt);\n        const str = fn(...args);\n        return str;\n    };\n\n    function formatValue(val, matches) {\n        const flags = matches[1];\n        const padding = matches[2];\n        const decimals = matches[3] ? parseInt(matches[3].substr(1)) : void 0;\n        const type = matches[4];\n        const isString = type == 's',\n            isHex = type == 'x' || type == 'X',\n            isInt = type == 'd' || type == 'i',\n            // isFloat = type == 'f',\n            isNumber = !isString;\n\n        let sign = \"\",\n            padDigits = 0,\n            isZero = false,\n            isNeg = false;\n\n        let str, padChar, padStr;\n        if (isString) {\n            str = String(val);\n        } else if (isHex) {\n            str = val.toString(16);\n            if (type == 'X')\n                str = str.toUpperCase();\n        } else if (isNumber) {\n            str = Utils.numToStr(val, isInt ? 0 : decimals);\n            if (str[0] == '-') {\n                isNeg = true;\n                str = str.substr(1);\n            }\n            isZero = parseFloat(str) == 0;\n            if (flags.indexOf(\"'\") != -1 || flags.indexOf(',') != -1) {\n                str = Utils.addThousandsSep(str);\n            }\n            if (!isZero) { // BUG: sign is added when num rounds to 0\n                if (isNeg) {\n                    sign = \"\\u2212\"; // U+2212\n                } else if (flags.indexOf('+') != -1) {\n                    sign = '+';\n                }\n            }\n        }\n\n        if (padding) {\n            const strLen = str.length + sign.length;\n            const minWidth = parseInt(padding, 10);\n            if (strLen < minWidth) {\n                padDigits = minWidth - strLen;\n                padChar = flags.indexOf('0') == -1 ? ' ' : '0';\n                padStr = Utils.repeatString(padChar, padDigits);\n            }\n        }\n\n        if (padDigits == 0) {\n            str = sign + str;\n        } else if (padChar == '0') {\n            str = sign + padStr + str;\n        } else {\n            str = padStr + sign + str;\n        }\n        return str;\n    }\n\n// Get a function for interpolating formatted values into a string.\n    Utils.formatter = function (fmt) {\n        const codeRxp = /%([',+0]*)([1-9]?)((?:\\.[1-9])?)([sdifxX%])/g;\n        const literals = [],\n            formatCodes = [];\n        let startIdx = 0,\n            prefix = \"\",\n            matches = codeRxp.exec(fmt),\n            literal;\n\n        while (matches) {\n            literal = fmt.substring(startIdx, codeRxp.lastIndex - matches[0].length);\n            if (matches[0] == '%%') {\n                prefix += `${literal}%`;\n            } else {\n                literals.push(prefix + literal);\n                prefix = '';\n                formatCodes.push(matches);\n            }\n            startIdx = codeRxp.lastIndex;\n            matches = codeRxp.exec(fmt);\n        }\n        literals.push(prefix + fmt.substr(startIdx));\n\n        return function (...args) {\n            let str = literals[0];\n            const n = args.length;\n            if (n != formatCodes.length) {\n                error(\"[format()] Data does not match format string; format:\", fmt, \"data:\", args);\n            }\n            for (let i = 0; i < n; i++) {\n                str += formatValue(args[i], formatCodes[i]) + literals[i + 1];\n            }\n            return str;\n        };\n    };\n\n\n    utils.wildcardToRegExp = function (name) {\n        const rxp = name.split('*').map((str) => utils.regexEscape(str)).join('.*');\n        return new RegExp(`^${rxp}$`);\n    };\n\n    utils.expandoBuffer = function (constructor, rate) {\n        let capacity = 0;\n        const k = rate >= 1 ? rate : 1.2;\n        let buf;\n        return function (size) {\n            if (size > capacity) {\n                capacity = Math.ceil(size * k);\n                buf = new constructor(capacity);\n            }\n            return buf;\n        };\n    };\n\n    utils.copyElements = function (src, i, dest, j, n, rev) {\n        if (src === dest && j > i) error(\"copy error\");\n        let inc = 1,\n            offs = 0;\n        if (rev) {\n            inc = -1;\n            offs = n - 1;\n        }\n        for (let k = 0; k < n; k++, offs += inc) {\n            dest[k + j] = src[i + offs];\n        }\n    };\n\n    utils.extendBuffer = function (src, newLen, copyLen) {\n        const len = Math.max(src.length, newLen);\n        const n = copyLen || src.length;\n        const dest = new src.constructor(len);\n        utils.copyElements(src, 0, dest, 0, n);\n        return dest;\n    };\n\n    utils.mergeNames = function (name1, name2) {\n        let merged;\n        if (name1 && name2) {\n            merged = utils.findStringPrefix(name1, name2).replace(/[-_]$/, '');\n        }\n        return merged || '';\n    };\n\n    utils.findStringPrefix = function (a, b) {\n        let i = 0;\n        for (let n = a.length; i < n; i++) {\n            if (a[i] !== b[i]) break;\n        }\n        return a.substr(0, i);\n    };\n\n// Similar to isFinite() but does not convert strings or other types\n    utils.isFiniteNumber = function (val) {\n        return val === 0 || !!val && val.constructor == Number && val !== Infinity && val !== -Infinity;\n    };\n\n    utils.isNonNegNumber = function (val) {\n        return val === 0 || val > 0 && val.constructor == Number;\n    };\n\n    utils.parsePercent = function (o) {\n        const str = String(o);\n        const isPct = str.indexOf('%') > 0;\n        let pct;\n        if (isPct) {\n            pct = Number(str.replace('%', '')) / 100;\n        } else {\n            pct = Number(str);\n        }\n        if (!(pct >= 0 && pct <= 1)) {\n            stop(utils.format(\"Invalid percentage: %s\", str));\n        }\n        return pct;\n    };\n\n\n    /*, mapshaper-buffer */\n\n    const api = {};\n    const internal = {\n        VERSION, // export version\n        LOGGING: false,\n        context: createContext()\n    };\n\n// Support for timing using T.start() and T.stop(\"message\")\n    const T = {\n        stack: [],\n        start () {\n            T.stack.push(+new Date());\n        },\n        stop (note) {\n            const elapsed = (+new Date() - T.stack.pop());\n            let msg = `${elapsed}ms`;\n            if (note) {\n                msg = `${note} ${msg}`;\n            }\n            verbose(msg);\n            return elapsed;\n        }\n    };\n\n    new Float64Array(1); // workaround for https://github.com/nodejs/node/issues/6006\n\n    internal.runningInBrowser = function () {\n        return !!api.gui;\n    };\n\n    internal.getStateVar = function (key) {\n        return internal.context[key];\n    };\n\n    internal.setStateVar = function (key, val) {\n        internal.context[key] = val;\n    };\n\n    function createContext() {\n        return {\n            DEBUG: false,\n            QUIET: false,\n            VERBOSE: false,\n            defs: {},\n            input_files: []\n        };\n    }\n\n    function error(...args) {\n        internal.error.apply(null, args);\n    }\n\n// Handle an error caused by invalid input or misuse of API\n    function stop(...args) {\n        internal.stop.apply(null, args);\n    }\n\n    function UserError(msg) {\n        const err = new Error(msg);\n        err.name = 'UserError';\n        return err;\n    }\n\n    function messageArgs(args) {\n        const arr = utils.toArray(args);\n        const cmd = internal.getStateVar('current_command');\n        if (cmd && cmd != 'help') {\n            arr.unshift(`[${cmd}]`);\n        }\n        return arr;\n    }\n\n    function verbose(...args) {\n        if (internal.getStateVar('VERBOSE')) {\n            // internal.logArgs(arguments);\n            internal.message.apply(null, messageArgs(args));\n        }\n    }\n\n    function debug(...args) {\n        if (internal.getStateVar('DEBUG')) {\n            internal.logArgs(args);\n        }\n    }\n\n    function absArcId(arcId) {\n        return arcId >= 0 ? arcId : ~arcId;\n    }\n\n    api.enableLogging = function () {\n        internal.LOGGING = true;\n        return api;\n    };\n\n    api.printError = function (err) {\n        let msg;\n        if (utils.isString(err)) {\n            err = new UserError(err);\n        }\n        if (internal.LOGGING && err.name == 'UserError') {\n            msg = err.message;\n            if (!/Error/.test(msg)) {\n                msg = `Error: ${msg}`;\n            }\n            console.error(messageArgs([msg]).join(' ')); // eslint-disable-line no-undef\n            internal.message(\"Run mapshaper -h to view help\");\n        } else {\n            // not a user error or logging is disabled -- throw it\n            throw err;\n        }\n    };\n\n    internal.error = function (...args) {\n        const msg = args.join(' ');\n        throw new Error(msg);\n    };\n\n    internal.stop = function (...args) {\n        throw new UserError(internal.formatLogArgs(args));\n    };\n\n    internal.message = function (...args) {\n        internal.logArgs(args);\n    };\n\n    internal.formatLogArgs = function (args) {\n        return args.join(' ');\n    };\n\n// Format an array of (preferably short) strings in columns for console logging.\n    internal.formatStringsAsGrid = function (arr) {\n        // TODO: variable column width\n        const longest = arr.reduce((len, str) => Math.max(len, str.length), 0),\n            colWidth = longest + 2,\n            perLine = Math.floor(80 / colWidth) || 1;\n        return arr.reduce((memo, name, i) => {\n            const col = i % perLine;\n            if (i > 0 && col === 0) memo += '\\n';\n            if (col < perLine - 1) { // right-pad all but rightmost column\n                name = utils.rpad(name, colWidth - 2, ' ');\n            }\n            return `${memo}  ${name}`;\n        }, '');\n    };\n\n    internal.logArgs = function (args) {\n        if (internal.LOGGING && !internal.getStateVar('QUIET') && utils.isArrayLike(args)) {\n            (console.error || console.log).call(console, internal.formatLogArgs(args)); // eslint-disable-line no-undef\n        }\n    };\n\n    internal.getWorldBounds = function (e) {\n        e = utils.isFiniteNumber(e) ? e : 1e-10;\n        return [-180 + e, -90 + e, 180 - e, 90 - e];\n    };\n\n    internal.probablyDecimalDegreeBounds = function (b) {\n        const world = internal.getWorldBounds(-1), // add a bit of excess\n            bbox = (b instanceof Bounds) ? b.toArray() : b;\n        return containsBounds(world, bbox);\n    };\n\n    internal.clampToWorldBounds = function (b) {\n        const bbox = (b instanceof Bounds) ? b.toArray() : b;\n        return new Bounds().setBounds(Math.max(bbox[0], -180), Math.max(bbox[1], -90),\n            Math.min(bbox[2], 180), Math.min(bbox[3], 90));\n    };\n\n    internal.layerHasGeometry = function (lyr) {\n        return internal.layerHasPaths(lyr) || internal.layerHasPoints(lyr);\n    };\n\n    internal.layerHasPaths = function (lyr) {\n        return (lyr.geometry_type == 'polygon' || lyr.geometry_type == 'polyline') &&\n            internal.layerHasNonNullShapes(lyr);\n    };\n\n    internal.layerHasPoints = function (lyr) {\n        return lyr.geometry_type == 'point' && internal.layerHasNonNullShapes(lyr);\n    };\n\n    internal.layerHasNonNullShapes = function (lyr) {\n        return utils.some(lyr.shapes || [], (shp) => !!shp);\n    };\n\n    internal.requireDataFields = function (table, fields) {\n        if (!table) {\n            stop(\"Missing attribute data\");\n        }\n        const dataFields = table.getFields(),\n            missingFields = utils.difference(fields, dataFields);\n        if (missingFields.length > 0) {\n            stop(\"Table is missing one or more fields:\\n\",\n                missingFields, \"\\nExisting fields:\", `\\n${internal.formatStringsAsGrid(dataFields)}`);\n        }\n    };\n\n    internal.requirePolylineLayer = function (lyr, msg) {\n        if (!lyr || lyr.geometry_type !== 'polyline') stop(msg || \"Expected a polyline layer\");\n    };\n\n    internal.requirePolygonLayer = function (lyr, msg) {\n        if (!lyr || lyr.geometry_type !== 'polygon') stop(msg || \"Expected a polygon layer\");\n    };\n\n    internal.requirePathLayer = function (lyr, msg) {\n        if (!lyr || !internal.layerHasPaths(lyr)) stop(msg || \"Expected a polygon or polyline layer\");\n    };\n\n\n    const R = 6378137;\n    const D2R = Math.PI / 180;\n\n// Equirectangular projection\n    function degreesToMeters(deg) {\n        return deg * D2R * R;\n    }\n\n    function distance3D(ax, ay, az, bx, by, bz) {\n        const dx = ax - bx,\n            dy = ay - by,\n            dz = az - bz;\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n\n    function distanceSq(ax, ay, bx, by) {\n        const dx = ax - bx,\n            dy = ay - by;\n        return dx * dx + dy * dy;\n    }\n\n    function distance2D(ax, ay, bx, by) {\n        const dx = ax - bx,\n            dy = ay - by;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function distanceSq3D(ax, ay, az, bx, by, bz) {\n        const dx = ax - bx,\n            dy = ay - by,\n            dz = az - bz;\n        return dx * dx + dy * dy + dz * dz;\n    }\n\n// Return id of nearest point to x, y, among x0, y0, x1, y1, ...\n    function nearestPoint(x, y, ...args) {\n        let minIdx = -1,\n            minDist = Infinity,\n            dist;\n        for (let i = 0, j = 0, n = args.length; j < n; i++, j += 2) {\n            dist = distanceSq(x, y, args[j], args[j + 1]);\n            if (dist < minDist) {\n                minDist = dist;\n                minIdx = i;\n            }\n        }\n        return minIdx;\n    }\n\n\n// atan2() makes this function fairly slow, replaced by ~2x faster formula\n    function innerAngle2(ax, ay, bx, by, cx, cy) {\n        const a1 = Math.atan2(ay - by, ax - bx),\n            a2 = Math.atan2(cy - by, cx - bx);\n        let a3 = Math.abs(a1 - a2);\n        if (a3 > Math.PI) {\n            a3 = 2 * Math.PI - a3;\n        }\n        return a3;\n    }\n\n// Return angle abc in range [0, 2PI) or NaN if angle is invalid\n// (e.g. if length of ab or bc is 0)\n    /*\nfunction signedAngle2(ax, ay, bx, by, cx, cy) {\n  var a1 = Math.atan2(ay - by, ax - bx),\n      a2 = Math.atan2(cy - by, cx - bx),\n      a3 = a2 - a1;\n\n  if (ax == bx && ay == by || bx == cx && by == cy) {\n    a3 = NaN; // Use NaN for invalid angles\n  } else if (a3 >= Math.PI * 2) {\n    a3 = 2 * Math.PI - a3;\n  } else if (a3 < 0) {\n    a3 = a3 + 2 * Math.PI;\n  }\n  return a3;\n}\n*/\n\n    function standardAngle(a) {\n        const twoPI = Math.PI * 2;\n        while (a < 0) {\n            a += twoPI;\n        }\n        while (a >= twoPI) {\n            a -= twoPI;\n        }\n        return a;\n    }\n\n    function signedAngle(ax, ay, bx, by, cx, cy) {\n        if (ax == bx && ay == by || bx == cx && by == cy) {\n            return NaN; // Use NaN for invalid angles\n        }\n        const abx = ax - bx,\n            aby = ay - by,\n            cbx = cx - bx,\n            cby = cy - by,\n            dotp = abx * cbx + aby * cby,\n            crossp = abx * cby - aby * cbx,\n            a = Math.atan2(crossp, dotp);\n        return standardAngle(a);\n    }\n\n// Calc bearing in radians at lng1, lat1\n    function bearing(lng1, lat1, lng2, lat2) {\n        const D2R = Math.PI / 180;\n        lng1 *= D2R;\n        lng2 *= D2R;\n        lat1 *= D2R;\n        lat2 *= D2R;\n        const y = Math.sin(lng2 - lng1) * Math.cos(lat2),\n            x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lng2 - lng1);\n        return Math.atan2(y, x);\n    }\n\n// Calc angle of turn from ab to bc, in range [0, 2PI)\n// Receive lat-lng values in degrees\n    function signedAngleSph(alng, alat, blng, blat, clng, clat) {\n        if (alng == blng && alat == blat || blng == clng && blat == clat) {\n            return NaN;\n        }\n        const b1 = bearing(blng, blat, alng, alat), // calc bearing at b\n            b2 = bearing(blng, blat, clng, clat),\n            a = Math.PI * 2 + b1 - b2;\n        return standardAngle(a);\n    }\n\n    /*\n// Convert arrays of lng and lat coords (xsrc, ysrc) into\n// x, y, z coords (meters) on the most common spherical Earth model.\n//\nfunction convLngLatToSph(xsrc, ysrc, xbuf, ybuf, zbuf) {\n  var deg2rad = Math.PI / 180,\n      r = R;\n  for (var i=0, len=xsrc.length; i<len; i++) {\n    var lng = xsrc[i] * deg2rad,\n        lat = ysrc[i] * deg2rad,\n        cosLat = Math.cos(lat);\n    xbuf[i] = Math.cos(lng) * cosLat * r;\n    ybuf[i] = Math.sin(lng) * cosLat * r;\n    zbuf[i] = Math.sin(lat) * r;\n  }\n}\n*/\n\n// Convert arrays of lng and lat coords (xsrc, ysrc) into\n// x, y, z coords (meters) on the most common spherical Earth model.\n//\n    function convLngLatToSph(xsrc, ysrc, xbuf, ybuf, zbuf) {\n        const p = [];\n        for (let i = 0, len = xsrc.length; i < len; i++) {\n            lngLatToXYZ(xsrc[i], ysrc[i], p);\n            xbuf[i] = p[0];\n            ybuf[i] = p[1];\n            zbuf[i] = p[2];\n        }\n    }\n\n    function xyzToLngLat(x, y, z, p) {\n        const d = distance3D(0, 0, 0, x, y, z); // normalize\n        const lat = Math.asin(z / d) / D2R;\n        const lng = Math.atan2(y / d, x / d) / D2R;\n        p[0] = lng;\n        p[1] = lat;\n    }\n\n    function lngLatToXYZ(lng, lat, p) {\n        lng *= D2R;\n        lat *= D2R;\n        const cosLat = Math.cos(lat);\n        p[0] = Math.cos(lng) * cosLat * R;\n        p[1] = Math.sin(lng) * cosLat * R;\n        p[2] = Math.sin(lat) * R;\n    }\n\n// Haversine formula (well conditioned at small distances)\n    function sphericalDistance(lam1, phi1, lam2, phi2) {\n        const dlam = lam2 - lam1,\n            dphi = phi2 - phi1,\n            a = Math.sin(dphi / 2) * Math.sin(dphi / 2) +\n                Math.cos(phi1) * Math.cos(phi2) *\n                Math.sin(dlam / 2) * Math.sin(dlam / 2),\n            c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return c;\n    }\n\n// Receive: coords in decimal degrees;\n// Return: distance in meters on spherical earth\n    function greatCircleDistance(lng1, lat1, lng2, lat2) {\n        const D2R = Math.PI / 180,\n            dist = sphericalDistance(lng1 * D2R, lat1 * D2R, lng2 * D2R, lat2 * D2R);\n        return dist * R;\n    }\n\n// TODO: make this safe for small angles\n    function innerAngle(ax, ay, bx, by, cx, cy) {\n        const ab = distance2D(ax, ay, bx, by),\n            bc = distance2D(bx, by, cx, cy);\n        let theta, dotp;\n        if (ab === 0 || bc === 0) {\n            theta = 0;\n        } else {\n            dotp = ((ax - bx) * (cx - bx) + (ay - by) * (cy - by)) / (ab * bc);\n            if (dotp >= 1 - 1e-14) {\n                theta = 0;\n            } else if (dotp <= -1 + 1e-14) {\n                theta = Math.PI;\n            } else {\n                theta = Math.acos(dotp); // consider using other formula at small dp\n            }\n        }\n        return theta;\n    }\n\n    function innerAngle3D(ax, ay, az, bx, by, bz, cx, cy, cz) {\n        const ab = distance3D(ax, ay, az, bx, by, bz),\n            bc = distance3D(bx, by, bz, cx, cy, cz);\n        let theta, dotp;\n        if (ab === 0 || bc === 0) {\n            theta = 0;\n        } else {\n            dotp = ((ax - bx) * (cx - bx) + (ay - by) * (cy - by) + (az - bz) * (cz - bz)) / (ab * bc);\n            if (dotp >= 1) {\n                theta = 0;\n            } else if (dotp <= -1) {\n                theta = Math.PI;\n            } else {\n                theta = Math.acos(dotp); // consider using other formula at small dp\n            }\n        }\n        return theta;\n    }\n\n    function triangleArea(ax, ay, bx, by, cx, cy) {\n        const area = Math.abs(((ay - cy) * (bx - cx) + (by - cy) * (cx - ax)) / 2);\n        return area;\n    }\n\n    function detSq(ax, ay, bx, by, cx, cy) {\n        const det = ax * by - ax * cy + bx * cy - bx * ay + cx * ay - cx * by;\n        return det * det;\n    }\n\n    function cosine(ax, ay, bx, by, cx, cy) {\n        const den = distance2D(ax, ay, bx, by) * distance2D(bx, by, cx, cy);\n        let cos = 0;\n        if (den > 0) {\n            cos = ((ax - bx) * (cx - bx) + (ay - by) * (cy - by)) / den;\n            if (cos > 1) cos = 1; // handle fp rounding error\n            else if (cos < -1) cos = -1;\n        }\n        return cos;\n    }\n\n    function cosine3D(ax, ay, az, bx, by, bz, cx, cy, cz) {\n        const den = distance3D(ax, ay, az, bx, by, bz) * distance3D(bx, by, bz, cx, cy, cz);\n        let cos = 0;\n        if (den > 0) {\n            cos = ((ax - bx) * (cx - bx) + (ay - by) * (cy - by) + (az - bz) * (cz - bz)) / den;\n            if (cos > 1) cos = 1; // handle fp rounding error\n            else if (cos < -1) cos = -1;\n        }\n        return cos;\n    }\n\n    function triangleArea3D(ax, ay, az, bx, by, bz, cx, cy, cz) {\n        const area = 0.5 * Math.sqrt(detSq(ax, ay, bx, by, cx, cy) +\n            detSq(ax, az, bx, bz, cx, cz) + detSq(ay, az, by, bz, cy, cz));\n        return area;\n    }\n\n// Given point B and segment AC, return the squared distance from B to the\n// nearest point on AC\n// Receive the squared length of segments AB, BC, AC\n// TODO: analyze rounding error. Returns 0 for these coordinates:\n//    P: [2, 3 - 1e-8]  AB: [[1, 3], [3, 3]]\n//\n    function apexDistSq(ab2, bc2, ac2) {\n        let dist2;\n        if (ac2 === 0) {\n            dist2 = ab2;\n        } else if (ab2 >= bc2 + ac2) {\n            dist2 = bc2;\n        } else if (bc2 >= ab2 + ac2) {\n            dist2 = ab2;\n        } else {\n            const dval = (ab2 + ac2 - bc2);\n            dist2 = ab2 - dval * dval / ac2 * 0.25;\n        }\n        if (dist2 < 0) {\n            dist2 = 0;\n        }\n        return dist2;\n    }\n\n    function pointSegDistSq(ax, ay, bx, by, cx, cy) {\n        const ab2 = distanceSq(ax, ay, bx, by),\n            ac2 = distanceSq(ax, ay, cx, cy),\n            bc2 = distanceSq(bx, by, cx, cy);\n        return apexDistSq(ab2, ac2, bc2);\n    }\n\n    function pointSegDistSq3D(ax, ay, az, bx, by, bz, cx, cy, cz) {\n        const ab2 = distanceSq3D(ax, ay, az, bx, by, bz),\n            ac2 = distanceSq3D(ax, ay, az, cx, cy, cz),\n            bc2 = distanceSq3D(bx, by, bz, cx, cy, cz);\n        return apexDistSq(ab2, ac2, bc2);\n    }\n\n\n    internal.calcArcBounds = function (xx, yy, start, len) {\n        let i = start | 0;\n        const n = isNaN(len) ? xx.length - i : len + i;\n        let x, y, xmin, ymin, xmax, ymax;\n        if (n > 0) {\n            xmin = xmax = xx[i];\n            ymin = ymax = yy[i];\n        }\n        for (i++; i < n; i++) {\n            x = xx[i];\n            y = yy[i];\n            if (x < xmin) xmin = x;\n            if (x > xmax) xmax = x;\n            if (y < ymin) ymin = y;\n            if (y > ymax) ymax = y;\n        }\n        return [xmin, ymin, xmax, ymax];\n    };\n\n    internal.reversePathCoords = function (arr, start, len) {\n        let i = start,\n            j = start + len - 1,\n            tmp;\n        while (i < j) {\n            tmp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = tmp;\n            i++;\n            j--;\n        }\n    };\n\n    function containsBounds(a, b) {\n        return a[0] <= b[0] && a[2] >= b[2] && a[1] <= b[1] && a[3] >= b[3];\n    }\n\n// export functions so they can be tested\n    const geom = {\n        R,\n        D2R,\n        degreesToMeters,\n        segmentHit,\n        segmentIntersection,\n        distanceSq,\n        distance2D,\n        distance3D,\n        innerAngle,\n        innerAngle2,\n        signedAngle,\n        bearing,\n        signedAngleSph,\n        standardAngle,\n        convLngLatToSph,\n        lngLatToXYZ,\n        xyzToLngLat,\n        sphericalDistance,\n        greatCircleDistance,\n        pointSegDistSq,\n        pointSegDistSq3D,\n        innerAngle3D,\n        triangleArea,\n        triangleArea3D,\n        cosine,\n        cosine3D\n    };\n\n// Constructor takes arrays of coords: xx, yy, zz (optional)\n//\n    function ArcIter(xx, yy) {\n        this._i = 0;\n        this._n = 0;\n        this._inc = 1;\n        this._xx = xx;\n        this._yy = yy;\n        this.i = 0;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    ArcIter.prototype.init = function (i, len, fw) {\n        if (fw) {\n            this._i = i;\n            this._inc = 1;\n        } else {\n            this._i = i + len - 1;\n            this._inc = -1;\n        }\n        this._n = len;\n        return this;\n    };\n\n    ArcIter.prototype.hasNext = function () {\n        const i = this._i;\n        if (this._n > 0) {\n            this._i = i + this._inc;\n            this.x = this._xx[i];\n            this.y = this._yy[i];\n            this.i = i;\n            this._n--;\n            return true;\n        }\n        return false;\n    };\n\n    function FilteredArcIter(xx, yy, zz) {\n        let _zlim = 0,\n            _i = 0,\n            _inc = 1,\n            _stop = 0;\n\n        this.init = function (i, len, fw, zlim) {\n            _zlim = zlim || 0;\n            if (fw) {\n                _i = i;\n                _inc = 1;\n                _stop = i + len;\n            } else {\n                _i = i + len - 1;\n                _inc = -1;\n                _stop = i - 1;\n            }\n            return this;\n        };\n\n        this.hasNext = function () {\n            // using local vars is significantly faster when skipping many points\n            const zarr = zz,\n                i = _i;\n            let j = i;\n            const zlim = _zlim,\n                stop = _stop,\n                inc = _inc;\n            if (i == stop) return false;\n            do {\n                j += inc;\n            } while (j != stop && zarr[j] < zlim);\n            _i = j;\n            this.x = xx[i];\n            this.y = yy[i];\n            this.i = i;\n            return true;\n        };\n    }\n\n// Iterate along a path made up of one or more arcs.\n//\n    function ShapeIter(arcs) {\n        this._arcs = arcs;\n        this._i = 0;\n        this._n = 0;\n        this.x = 0;\n        this.y = 0;\n    }\n\n    ShapeIter.prototype.hasNext = function () {\n        const arc = this._arc;\n        if (this._i < this._n === false) {\n            return false;\n        }\n        if (arc.hasNext()) {\n            this.x = arc.x;\n            this.y = arc.y;\n            return true;\n        }\n        this.nextArc();\n        return this.hasNext();\n    };\n\n    ShapeIter.prototype.init = function (ids) {\n        this._ids = ids;\n        this._n = ids.length;\n        this.reset();\n        return this;\n    };\n\n    ShapeIter.prototype.nextArc = function () {\n        const i = this._i + 1;\n        if (i < this._n) {\n            this._arc = this._arcs.getArcIter(this._ids[i]);\n            if (i > 0) this._arc.hasNext(); // skip first point\n        }\n        this._i = i;\n    };\n\n    ShapeIter.prototype.reset = function () {\n        this._i = -1;\n        this.nextArc();\n    };\n\n\n// An interface for managing a collection of paths.\n// Constructor signatures:\n//\n// ArcCollection(arcs)\n//    arcs is an array of polyline arcs; each arc is an array of points: [[x0, y0], [x1, y1], ... ]\n//\n// ArcCollection(nn, xx, yy)\n//    nn is an array of arc lengths; xx, yy are arrays of concatenated coords;\n    function ArcCollection(...args) {\n        let _xx, _yy,  // coordinates data\n            _ii, _nn,  // indexes, sizes\n            _zz, _zlimit = 0, // simplification\n            _bb, _allBounds, // bounding boxes\n            _arcIter, _filteredArcIter; // path iterators\n\n        if (args.length == 1) {\n            initLegacyArcs(args[0]);  // want to phase this out\n        } else if (args.length == 3) {\n            initXYData.apply(this, args);\n        } else {\n            error(\"ArcCollection() Invalid arguments\");\n        }\n\n        function initLegacyArcs(arcs) {\n            const xx = [], yy = [];\n            const nn = arcs.map((points) => {\n                const n = points ? points.length : 0;\n                for (let i = 0; i < n; i++) {\n                    xx.push(points[i][0]);\n                    yy.push(points[i][1]);\n                }\n                return n;\n            });\n            initXYData(nn, xx, yy);\n        }\n\n        function initXYData(nn, xx, yy) {\n            const size = nn.length;\n            if (nn instanceof Array) nn = new Uint32Array(nn);\n            if (xx instanceof Array) xx = new Float64Array(xx);\n            if (yy instanceof Array) yy = new Float64Array(yy);\n            _xx = xx;\n            _yy = yy;\n            _nn = nn;\n            _zz = null;\n            _zlimit = 0;\n            _filteredArcIter = null;\n\n            // generate array of starting idxs of each arc\n            _ii = new Uint32Array(size);\n            let idx, j;\n            for (idx = 0, j = 0; j < size; j++) {\n                _ii[j] = idx;\n                idx += nn[j];\n            }\n\n            if (idx != _xx.length || _xx.length != _yy.length) {\n                error(\"ArcCollection#initXYData() Counting error\");\n            }\n\n            initBounds();\n            // Pre-allocate some path iterators for repeated use.\n            _arcIter = new ArcIter(_xx, _yy);\n            return this;\n        }\n\n        function initZData(zz) {\n            if (!zz) {\n                _zz = null;\n                _zlimit = 0;\n                _filteredArcIter = null;\n            } else {\n                if (zz.length != _xx.length) error(\"ArcCollection#initZData() mismatched arrays\");\n                if (zz instanceof Array) zz = new Float64Array(zz);\n                _zz = zz;\n                _filteredArcIter = new FilteredArcIter(_xx, _yy, _zz);\n            }\n        }\n\n        function initBounds() {\n            const data = calcArcBounds(_xx, _yy, _nn);\n            _bb = data.bb;\n            _allBounds = data.bounds;\n        }\n\n        function calcArcBounds(xx, yy, nn) {\n            const numArcs = nn.length,\n                bb = new Float64Array(numArcs * 4),\n                bounds = new Bounds();\n            let arcOffs = 0,\n                arcLen,\n                j, b;\n            for (let i = 0; i < numArcs; i++) {\n                arcLen = nn[i];\n                if (arcLen > 0) {\n                    j = i * 4;\n                    b = internal.calcArcBounds(xx, yy, arcOffs, arcLen);\n                    bb[j++] = b[0];\n                    bb[j++] = b[1];\n                    bb[j++] = b[2];\n                    bb[j] = b[3];\n                    arcOffs += arcLen;\n                    bounds.mergeBounds(b);\n                }\n            }\n            return {\n                bb,\n                bounds\n            };\n        }\n\n        this.updateVertexData = function (nn, xx, yy, zz) {\n            initXYData(nn, xx, yy);\n            initZData(zz || null);\n        };\n\n        // Give access to raw data arrays...\n        this.getVertexData = function () {\n            return {\n                xx: _xx,\n                yy: _yy,\n                zz: _zz,\n                bb: _bb,\n                nn: _nn,\n                ii: _ii\n            };\n        };\n\n        this.getCopy = function () {\n            const copy = new ArcCollection(new Int32Array(_nn), new Float64Array(_xx),\n                new Float64Array(_yy));\n            if (_zz) {\n                copy.setThresholds(new Float64Array(_zz));\n                copy.setRetainedInterval(_zlimit);\n            }\n            return copy;\n        };\n\n        function getFilteredPointCount() {\n            const zz = _zz, z = _zlimit;\n            if (!zz || !z) return this.getPointCount();\n            let count = 0;\n            for (let i = 0, n = zz.length; i < n; i++) {\n                if (zz[i] >= z) count++;\n            }\n            return count;\n        }\n\n        function getFilteredVertexData() {\n            const len2 = getFilteredPointCount();\n            const arcCount = _nn.length;\n            const xx2 = new Float64Array(len2),\n                yy2 = new Float64Array(len2),\n                zz2 = new Float64Array(len2),\n                nn2 = new Int32Array(arcCount);\n            let i = 0, i2 = 0,\n                n, n2;\n\n            for (let arcId = 0; arcId < arcCount; arcId++) {\n                n2 = 0;\n                n = _nn[arcId];\n                for (let end = i + n; i < end; i++) {\n                    if (_zz[i] >= _zlimit) {\n                        xx2[i2] = _xx[i];\n                        yy2[i2] = _yy[i];\n                        zz2[i2] = _zz[i];\n                        i2++;\n                        n2++;\n                    }\n                }\n                if (n2 < 2) error(\"Collapsed arc\"); // endpoints should be z == Infinity\n                nn2[arcId] = n2;\n            }\n            return {\n                xx: xx2,\n                yy: yy2,\n                zz: zz2,\n                nn: nn2\n            };\n        }\n\n        this.getFilteredCopy = function () {\n            if (!_zz || _zlimit === 0) return this.getCopy();\n            const data = getFilteredVertexData();\n            const copy = new ArcCollection(data.nn, data.xx, data.yy);\n            copy.setThresholds(data.zz);\n            return copy;\n        };\n\n        // Return arcs as arrays of [x, y] points (intended for testing).\n        this.toArray = function () {\n            const arr = [];\n            this.forEach((iter) => {\n                const arc = [];\n                while (iter.hasNext()) {\n                    arc.push([iter.x, iter.y]);\n                }\n                arr.push(arc);\n            });\n            return arr;\n        };\n\n        this.toJSON = function () {\n            return this.toArray();\n        };\n\n        // @cb function(i, j, xx, yy)\n        this.forEachArcSegment = function (arcId, cb) {\n            const fw = arcId >= 0,\n                absId = fw ? arcId : ~arcId,\n                zlim = this.getRetainedInterval(),\n                n = _nn[absId],\n                step = fw ? 1 : -1;\n            let v1 = fw ? _ii[absId] : _ii[absId] + n - 1,\n                v2 = v1,\n                count = 0;\n\n            for (let j = 1; j < n; j++) {\n                v2 += step;\n                if (zlim === 0 || _zz[v2] >= zlim) {\n                    cb(v1, v2, _xx, _yy);\n                    v1 = v2;\n                    count++;\n                }\n            }\n            return count;\n        };\n\n        // @cb function(i, j, xx, yy)\n        this.forEachSegment = function (cb) {\n            let count = 0;\n            for (let i = 0, n = this.size(); i < n; i++) {\n                count += this.forEachArcSegment(i, cb);\n            }\n            return count;\n        };\n\n        this.transformPoints = function (f) {\n            const xx = _xx, yy = _yy;\n            let arcId = -1, n = 0, p;\n            for (let i = 0, len = xx.length; i < len; i++, n--) {\n                while (n === 0) {\n                    n = _nn[++arcId];\n                }\n                p = f(xx[i], yy[i], arcId);\n                if (p) {\n                    xx[i] = p[0];\n                    yy[i] = p[1];\n                }\n            }\n            initBounds();\n        };\n\n        // Return an ArcIter object for each path in the dataset\n        //\n        this.forEach = function (cb) {\n            for (let i = 0, n = this.size(); i < n; i++) {\n                cb(this.getArcIter(i), i);\n            }\n        };\n\n        // Iterate over arcs with access to low-level data\n        //\n        this.forEach2 = function (cb) {\n            for (let arcId = 0, n = this.size(); arcId < n; arcId++) {\n                cb(_ii[arcId], _nn[arcId], _xx, _yy, _zz, arcId);\n            }\n        };\n\n        this.forEach3 = function (cb) {\n            let start, end, xx, yy, zz;\n            for (let arcId = 0, n = this.size(); arcId < n; arcId++) {\n                start = _ii[arcId];\n                end = start + _nn[arcId];\n                xx = _xx.subarray(start, end);\n                yy = _yy.subarray(start, end);\n                if (_zz) zz = _zz.subarray(start, end);\n                cb(xx, yy, zz, arcId);\n            }\n        };\n\n        // Remove arcs that don't pass a filter test and re-index arcs\n        // Return array mapping original arc ids to re-indexed ids. If arr[n] == -1\n        // then arc n was removed. arr[n] == m indicates that the arc at n was\n        // moved to index m.\n        // Return null if no arcs were re-indexed (and no arcs were removed)\n        //\n        this.filter = function (cb) {\n            const test = function (i) {\n                return cb(this.getArcIter(i), i);\n            }.bind(this);\n            return this.deleteArcs(test);\n        };\n\n        this.deleteArcs = function (test) {\n            const n = this.size(),\n                map = new Int32Array(n);\n            let goodArcs = 0;\n            for (let i = 0; i < n; i++) {\n                if (test(i)) {\n                    map[i] = goodArcs++;\n                } else {\n                    map[i] = -1;\n                }\n            }\n            if (goodArcs < n) {\n                condenseArcs(map);\n            }\n            return map;\n        };\n\n        function condenseArcs(map) {\n            let goodPoints = 0,\n                goodArcs = 0;\n            const copyElements = utils.copyElements;\n            let k, arcLen;\n            for (let i = 0, n = map.length; i < n; i++) {\n                k = map[i];\n                arcLen = _nn[i];\n                if (k > -1) {\n                    copyElements(_xx, _ii[i], _xx, goodPoints, arcLen);\n                    copyElements(_yy, _ii[i], _yy, goodPoints, arcLen);\n                    if (_zz) copyElements(_zz, _ii[i], _zz, goodPoints, arcLen);\n                    _nn[k] = arcLen;\n                    goodPoints += arcLen;\n                    goodArcs++;\n                }\n            }\n\n            initXYData(_nn.subarray(0, goodArcs), _xx.subarray(0, goodPoints),\n                _yy.subarray(0, goodPoints));\n            if (_zz) initZData(_zz.subarray(0, goodPoints));\n        }\n\n        this.dedupCoords = function () {\n            let arcId = 0, i = 0, i2 = 0;\n            const arcCount = this.size(),\n                zz = _zz;\n            let arcLen, arcLen2;\n            while (arcId < arcCount) {\n                arcLen = _nn[arcId];\n                arcLen2 = internal.dedupArcCoords(i, i2, arcLen, _xx, _yy, zz);\n                _nn[arcId] = arcLen2;\n                i += arcLen;\n                i2 += arcLen2;\n                arcId++;\n            }\n            if (i > i2) {\n                initXYData(_nn, _xx.subarray(0, i2), _yy.subarray(0, i2));\n                if (zz) initZData(zz.subarray(0, i2));\n            }\n            return i - i2;\n        };\n\n        this.getVertex = function (arcId, nth) {\n            const i = this.indexOfVertex(arcId, nth);\n            return {\n                x: _xx[i],\n                y: _yy[i]\n            };\n        };\n\n        // @nth: index of vertex. ~(idx) starts from the opposite endpoint\n        this.indexOfVertex = function (arcId, nth) {\n            const absId = arcId < 0 ? ~arcId : arcId,\n                len = _nn[absId];\n            if (nth < 0) nth = len + nth;\n            if (absId != arcId) nth = len - nth - 1;\n            if (nth < 0 || nth >= len) error(\"[ArcCollection] out-of-range vertex id\");\n            return _ii[absId] + nth;\n        };\n\n        // Test whether the vertex at index @idx is the endpoint of an arc\n        this.pointIsEndpoint = function (idx) {\n            const ii = _ii,\n                nn = _nn;\n            for (let j = 0, n = ii.length; j < n; j++) {\n                if (idx === ii[j] || idx === ii[j] + nn[j] - 1) return true;\n            }\n            return false;\n        };\n\n        // Tests if arc endpoints have same x, y coords\n        // (arc may still have collapsed);\n        this.arcIsClosed = function (arcId) {\n            const i = this.indexOfVertex(arcId, 0),\n                j = this.indexOfVertex(arcId, -1);\n            return i != j && _xx[i] == _xx[j] && _yy[i] == _yy[j];\n        };\n\n        // Tests if first and last segments mirror each other\n        // A 3-vertex arc with same endpoints tests true\n        this.arcIsLollipop = function (arcId) {\n            const len = this.getArcLength(arcId);\n            if (len <= 2 || !this.arcIsClosed(arcId)) return false;\n            const i = this.indexOfVertex(arcId, 1);\n            const j = this.indexOfVertex(arcId, -2);\n            return _xx[i] == _xx[j] && _yy[i] == _yy[j];\n        };\n\n        this.arcIsDegenerate = function (arcId) {\n            const iter = this.getArcIter(arcId);\n            let i = 0,\n                x, y;\n            while (iter.hasNext()) {\n                if (i > 0) {\n                    if (x != iter.x || y != iter.y) return false;\n                }\n                x = iter.x;\n                y = iter.y;\n                i++;\n            }\n            return true;\n        };\n\n        this.getArcLength = function (arcId) {\n            return _nn[absArcId(arcId)];\n        };\n\n        this.getArcIter = function (arcId) {\n            const fw = arcId >= 0,\n                i = fw ? arcId : ~arcId,\n                iter = _zz && _zlimit ? _filteredArcIter : _arcIter;\n            if (i >= _nn.length) {\n                error(\"#getArcId() out-of-range arc id:\", arcId);\n            }\n            return iter.init(_ii[i], _nn[i], fw, _zlimit);\n        };\n\n        this.getShapeIter = function (ids) {\n            return new ShapeIter(this).init(ids);\n        };\n\n        // Add simplification data to the dataset\n        // @thresholds is either a single typed array or an array of arrays of removal thresholds for each arc;\n        //\n        this.setThresholds = function (thresholds) {\n            const n = this.getPointCount();\n            let zz = null;\n            if (!thresholds) {\n                // nop\n            } else if (thresholds.length == n) {\n                zz = thresholds;\n            } else if (thresholds.length == this.size()) {\n                zz = flattenThresholds(thresholds, n);\n            } else {\n                error(\"Invalid threshold data\");\n            }\n            initZData(zz);\n            return this;\n        };\n\n        function flattenThresholds(arr, n) {\n            const zz = new Float64Array(n);\n            let i = 0;\n            arr.forEach((arr) => {\n                for (let j = 0, n = arr.length; j < n; i++, j++) {\n                    zz[i] = arr[j];\n                }\n            });\n            if (i != n) error(\"Mismatched thresholds\");\n            return zz;\n        }\n\n        // bake in current simplification level, if any\n        this.flatten = function () {\n            if (_zlimit > 0) {\n                const data = getFilteredVertexData();\n                this.updateVertexData(data.nn, data.xx, data.yy);\n                _zlimit = 0;\n            } else {\n                _zz = null;\n            }\n        };\n\n        this.getRetainedInterval = function () {\n            return _zlimit;\n        };\n\n        this.setRetainedInterval = function (z) {\n            _zlimit = z;\n            return this;\n        };\n\n        this.getRetainedPct = function () {\n            return this.getPctByThreshold(_zlimit);\n        };\n\n        this.setRetainedPct = function (pct) {\n            if (pct >= 1) {\n                _zlimit = 0;\n            } else {\n                _zlimit = this.getThresholdByPct(pct);\n                _zlimit = internal.clampIntervalByPct(_zlimit, pct);\n            }\n            return this;\n        };\n\n        // Return array of z-values that can be removed for simplification\n        //\n        this.getRemovableThresholds = function (nth) {\n            if (!_zz) error(\"[arcs] Missing simplification data.\");\n            const skip = nth | 1,\n                arr = new Float64Array(Math.ceil(_zz.length / skip));\n            let z, i, j, n;\n            for (i = 0, j = 0, n = this.getPointCount(); i < n; i += skip) {\n                z = _zz[i];\n                if (z != Infinity) {\n                    arr[j++] = z;\n                }\n            }\n            return arr.subarray(0, j);\n        };\n\n        this.getArcThresholds = function (arcId) {\n            if (!(arcId >= 0 && arcId < this.size())) {\n                error(\"[arcs] Invalid arc id:\", arcId);\n            }\n            const start = _ii[arcId],\n                end = start + _nn[arcId];\n            return _zz.subarray(start, end);\n        };\n\n        // nth (optional): sample every nth threshold (use estimate for speed)\n        this.getPctByThreshold = function (val, nth) {\n            let arr, rank, pct;\n            if (val > 0) {\n                arr = this.getRemovableThresholds(nth);\n                rank = utils.findRankByValue(arr, val);\n                pct = arr.length > 0 ? 1 - (rank - 1) / arr.length : 1;\n            } else {\n                pct = 1;\n            }\n            return pct;\n        };\n\n        // nth (optional): sample every nth threshold (use estimate for speed)\n        this.getThresholdByPct = function (pct, nth) {\n            const tmp = this.getRemovableThresholds(nth);\n            let rank, z;\n            if (tmp.length === 0) { // No removable points\n                rank = 0;\n            } else {\n                rank = Math.floor((1 - pct) * (tmp.length + 2));\n            }\n\n            if (rank <= 0) {\n                z = 0;\n            } else if (rank > tmp.length) {\n                z = Infinity;\n            } else {\n                z = utils.findValueByRank(tmp, rank);\n            }\n            return z;\n        };\n\n        this.arcIntersectsBBox = function (i, b1) {\n            const b2 = _bb,\n                j = i * 4;\n            return b2[j] <= b1[2] && b2[j + 2] >= b1[0] && b2[j + 3] >= b1[1] && b2[j + 1] <= b1[3];\n        };\n\n        this.arcIsContained = function (i, b1) {\n            const b2 = _bb,\n                j = i * 4;\n            return b2[j] >= b1[0] && b2[j + 2] <= b1[2] && b2[j + 1] >= b1[1] && b2[j + 3] <= b1[3];\n        };\n\n        this.arcIsSmaller = function (i, units) {\n            const bb = _bb,\n                j = i * 4;\n            return bb[j + 2] - bb[j] < units && bb[j + 3] - bb[j + 1] < units;\n        };\n\n        // TODO: allow datasets in lat-lng coord range to be flagged as planar\n        this.isPlanar = function () {\n            return !internal.probablyDecimalDegreeBounds(this.getBounds());\n        };\n\n        this.size = function () {\n            return _ii && _ii.length || 0;\n        };\n\n        this.getPointCount = function () {\n            return _xx && _xx.length || 0;\n        };\n\n        this.getBounds = function () {\n            return _allBounds.clone();\n        };\n\n        this.getSimpleShapeBounds = function (arcIds, bounds) {\n            bounds = bounds || new Bounds();\n            for (let i = 0, n = arcIds.length; i < n; i++) {\n                this.mergeArcBounds(arcIds[i], bounds);\n            }\n            return bounds;\n        };\n\n        this.getSimpleShapeBounds2 = function (arcIds, arr) {\n            const bbox = arr || [],\n                bb = _bb;\n            let id = absArcId(arcIds[0]) * 4;\n            bbox[0] = bb[id];\n            bbox[1] = bb[++id];\n            bbox[2] = bb[++id];\n            bbox[3] = bb[++id];\n            for (let i = 1, n = arcIds.length; i < n; i++) {\n                id = absArcId(arcIds[i]) * 4;\n                if (bb[id] < bbox[0]) bbox[0] = bb[id];\n                if (bb[++id] < bbox[1]) bbox[1] = bb[id];\n                if (bb[++id] > bbox[2]) bbox[2] = bb[id];\n                if (bb[++id] > bbox[3]) bbox[3] = bb[id];\n            }\n            return bbox;\n        };\n\n        // TODO: move this and similar methods out of ArcCollection\n        this.getMultiShapeBounds = function (shapeIds, bounds) {\n            bounds = bounds || new Bounds();\n            if (shapeIds) { // handle null shapes\n                for (let i = 0, n = shapeIds.length; i < n; i++) {\n                    this.getSimpleShapeBounds(shapeIds[i], bounds);\n                }\n            }\n            return bounds;\n        };\n\n        this.mergeArcBounds = function (arcId, bounds) {\n            if (arcId < 0) arcId = ~arcId;\n            const offs = arcId * 4;\n            bounds.mergeBounds(_bb[offs], _bb[offs + 1], _bb[offs + 2], _bb[offs + 3]);\n        };\n    }\n\n    ArcCollection.prototype.inspect = function () {\n        const n = this.getPointCount();\n        let str;\n        if (n < 50) {\n            str = JSON.stringify(this.toArray());\n        } else {\n            str = `[ArcCollection (${this.size()})]`;\n        }\n        return str;\n    };\n\n// Remove duplicate coords and NaNs\n    internal.dedupArcCoords = function (src, dest, arcLen, xx, yy, zz) {\n        let n = 0, n2 = 0; // counters\n        let x, y, i, j, keep;\n        while (n < arcLen) {\n            j = src + n;\n            x = xx[j];\n            y = yy[j];\n            keep = x == x && y == y && (n2 === 0 || x != xx[j - 1] || y != yy[j - 1]);\n            if (keep) {\n                i = dest + n2;\n                xx[i] = x;\n                yy[i] = y;\n                n2++;\n            }\n            if (zz && n2 > 0 && (keep || zz[j] > zz[i])) {\n                zz[i] = zz[j];\n            }\n            n++;\n        }\n        return n2 > 1 ? n2 : 0;\n    };\n\n\n    geom.segmentIntersection = segmentIntersection;\n    geom.segmentHit = segmentHit;\n    geom.lineIntersection = lineIntersection;\n    geom.orient2D = orient2D;\n    geom.outsideRange = outsideRange;\n\n// Find the interection between two 2D segments\n// Returns 0, 1 or two x, y locations as null, [x, y], or [x1, y1, x2, y2]\n// Special cases:\n// If the segments touch at an endpoint of both segments, it is not treated as an intersection\n// If the segments touch at a T-intersection, it is treated as an intersection\n// If the segments are collinear and partially overlapping, each subsumed endpoint\n//    is counted as an intersection (there will be one or two)\n//\n    function segmentIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n        const hit = segmentHit(ax, ay, bx, by, cx, cy, dx, dy);\n        let p = null;\n        if (hit) {\n            p = crossIntersection(ax, ay, bx, by, cx, cy, dx, dy);\n            if (!p) { // collinear if p is null\n                p = collinearIntersection(ax, ay, bx, by, cx, cy, dx, dy);\n            } else if (endpointHit(ax, ay, bx, by, cx, cy, dx, dy)) {\n                p = null; // filter out segments that only intersect at an endpoint\n            }\n        }\n        return p;\n    }\n\n    function lineIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n        const den = determinant2D(bx - ax, by - ay, dx - cx, dy - cy);\n        const eps = 1e-18;\n        let p;\n        if (den === 0) return null;\n        const m = orient2D(cx, cy, dx, dy, ax, ay) / den;\n        if (den <= eps && den >= -eps) {\n            // tiny denominator = low precision; using one of the endpoints as intersection\n            p = findEndpointInRange(ax, ay, bx, by, cx, cy, dx, dy);\n            if (!p) {\n                debug('[lineIntersection()]');\n                geom.debugSegmentIntersection([], ax, ay, bx, by, cx, cy, dx, dy);\n            }\n        } else {\n            p = [ax + m * (bx - ax), ay + m * (by - ay)];\n        }\n        return p;\n    }\n\n    function findEndpointInRange(ax, ay, bx, by, cx, cy, dx, dy) {\n        let p = null;\n        if (!outsideRange(ax, cx, dx) && !outsideRange(ay, cy, dy)) {\n            p = [ax, ay];\n        } else if (!outsideRange(bx, cx, dx) && !outsideRange(by, cy, dy)) {\n            p = [bx, by];\n        } else if (!outsideRange(cx, ax, bx) && !outsideRange(cy, ay, by)) {\n            p = [cx, cy];\n        } else if (!outsideRange(dx, ax, bx) && !outsideRange(dy, ay, by)) {\n            p = [dx, dy];\n        }\n        return p;\n    }\n\n// Get intersection point if segments are non-collinear, else return null\n// Assumes that segments have been intersect\n    function crossIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n        let p = lineIntersection(ax, ay, bx, by, cx, cy, dx, dy);\n        let nearest;\n        if (p) {\n            // Re-order operands so intersection point is closest to a (better precision)\n            // Source: Jonathan Shewchuk http://www.cs.berkeley.edu/~jrs/meshpapers/robnotes.pdf\n            nearest = nearestPoint(p[0], p[1], ax, ay, bx, by, cx, cy, dx, dy);\n            if (nearest == 1) {\n                p = lineIntersection(bx, by, ax, ay, cx, cy, dx, dy);\n            } else if (nearest == 2) {\n                p = lineIntersection(cx, cy, dx, dy, ax, ay, bx, by);\n            } else if (nearest == 3) {\n                p = lineIntersection(dx, dy, cx, cy, ax, ay, bx, by);\n            }\n        }\n        if (p) {\n            clampIntersectionPoint(p, ax, ay, bx, by, cx, cy, dx, dy);\n        }\n        return p;\n    }\n\n    function clampIntersectionPoint(p, ax, ay, bx, by, cx, cy, dx, dy) {\n        // Handle intersection points that fall outside the x-y range of either\n        // segment by snapping to nearest endpoint coordinate. Out-of-range\n        // intersection points can be caused by floating point rounding errors\n        // when a segment is vertical or horizontal. This has caused problems when\n        // repeatedly applying bbox clipping along the same segment\n        let x = p[0],\n            y = p[1];\n        // assumes that segment ranges intersect\n        x = geom.clampToCloseRange(x, ax, bx);\n        x = geom.clampToCloseRange(x, cx, dx);\n        y = geom.clampToCloseRange(y, ay, by);\n        y = geom.clampToCloseRange(y, cy, dy);\n        p[0] = x;\n        p[1] = y;\n    }\n\n    geom.debugSegmentIntersection = function (p, ax, ay, bx, by, cx, cy, dx, dy) {\n        debug('[debugSegmentIntersection()]');\n        debug('  s1\\n  dx:', Math.abs(ax - bx), '\\n  dy:', Math.abs(ay - by));\n        debug('  s2\\n  dx:', Math.abs(cx - dx), '\\n  dy:', Math.abs(cy - dy));\n        debug('  s1 xx:', ax, bx);\n        debug('  s2 xx:', cx, dx);\n        debug('  s1 yy:', ay, by);\n        debug('  s2 yy:', cy, dy);\n        debug('  angle:', geom.signedAngle(ax, ay, bx, by, dx - cx + bx, dy - cy + by));\n    };\n\n// a: coordinate of point\n// b: endpoint coordinate of segment\n// c: other endpoint of segment\n    function outsideRange(a, b, c) {\n        let out;\n        if (b < c) {\n            out = a < b || a > c;\n        } else if (b > c) {\n            out = a > b || a < c;\n        } else {\n            out = a != b;\n        }\n        return out;\n    }\n\n    geom.clampToCloseRange = function (a, b, c) {\n        let lim;\n        if (geom.outsideRange(a, b, c)) {\n            lim = Math.abs(a - b) < Math.abs(a - c) ? b : c;\n            if (Math.abs(a - lim) > 1e-15) {\n                debug(\"[clampToCloseRange()] large clamping interval\", a, b, c);\n            }\n            a = lim;\n        }\n        return a;\n    };\n\n// Used by mapshaper-gaps.js\n// TODO: make more robust, make sure result is compatible with segmentIntersection()\n// (rounding errors currently must be handled downstream)\n    geom.findClosestPointOnSeg = function (px, py, ax, ay, bx, by) {\n        const dx = bx - ax,\n            dy = by - ay,\n            dotp = (px - ax) * dx + (py - ay) * dy,\n            abSq = dx * dx + dy * dy,\n            k = abSq === 0 ? -1 : dotp / abSq,\n            eps = 0.1; // 1e-6, // snap to endpoint\n        let p;\n        if (k <= eps) {\n            p = [ax, ay];\n        } else if (k >= 1 - eps) {\n            p = [bx, by];\n        } else {\n            p = [ax + k * dx, ay + k * dy];\n        }\n        return p;\n    };\n\n\n// Determinant of matrix\n//  | a  b |\n//  | c  d |\n    function determinant2D(a, b, c, d) {\n        return a * d - b * c;\n    }\n\n// returns a positive value if the points a, b, and c are arranged in\n// counterclockwise order, a negative value if the points are in clockwise\n// order, and zero if the points are collinear.\n// Source: Jonathan Shewchuk http://www.cs.berkeley.edu/~jrs/meshpapers/robnotes.pdf\n    function orient2D(ax, ay, bx, by, cx, cy) {\n        return determinant2D(ax - cx, ay - cy, bx - cx, by - cy);\n    }\n\n// Source: Sedgewick, _Algorithms in C_\n// (Tried various other functions that failed owing to floating point errors)\n    function segmentHit(ax, ay, bx, by, cx, cy, dx, dy) {\n        return orient2D(ax, ay, bx, by, cx, cy) *\n            orient2D(ax, ay, bx, by, dx, dy) <= 0 &&\n            orient2D(cx, cy, dx, dy, ax, ay) *\n            orient2D(cx, cy, dx, dy, bx, by) <= 0;\n    }\n\n    function inside(x, minX, maxX) {\n        return x > minX && x < maxX;\n    }\n\n// Assume segments s1 and s2 are collinear and overlap; find one or two internal endpoints\n    function collinearIntersection(ax, ay, bx, by, cx, cy, dx, dy) {\n        const minX = Math.min(ax, bx, cx, dx),\n            maxX = Math.max(ax, bx, cx, dx),\n            minY = Math.min(ay, by, cy, dy),\n            maxY = Math.max(ay, by, cy, dy),\n            useY = maxY - minY > maxX - minX;\n        let coords = [];\n\n        if (useY ? inside(ay, minY, maxY) : inside(ax, minX, maxX)) {\n            coords.push(ax, ay);\n        }\n        if (useY ? inside(by, minY, maxY) : inside(bx, minX, maxX)) {\n            coords.push(bx, by);\n        }\n        if (useY ? inside(cy, minY, maxY) : inside(cx, minX, maxX)) {\n            coords.push(cx, cy);\n        }\n        if (useY ? inside(dy, minY, maxY) : inside(dx, minX, maxX)) {\n            coords.push(dx, dy);\n        }\n        if (coords.length != 2 && coords.length != 4) {\n            coords = null;\n            debug(\"Invalid collinear segment intersection\", coords);\n        } else if (coords.length == 4 && coords[0] == coords[2] && coords[1] == coords[3]) {\n            // segs that meet in the middle don't count\n            coords = null;\n        }\n        return coords;\n    }\n\n    function endpointHit(ax, ay, bx, by, cx, cy, dx, dy) {\n        return ax == cx && ay == cy || ax == dx && ay == dy ||\n            bx == cx && by == cy || bx == dx && by == dy;\n    }\n\n\n// @xx array of x coords\n// @ids an array of segment endpoint ids [a0, b0, a1, b1, ...]\n// Sort @ids in place so that xx[a(n)] <= xx[b(n)] and xx[a(n)] <= xx[a(n+1)]\n    internal.sortSegmentIds = function (xx, ids) {\n        internal.orderSegmentIds(xx, ids);\n        internal.quicksortSegmentIds(xx, ids, 0, ids.length - 2);\n    };\n\n    internal.orderSegmentIds = function (xx, ids) {\n        function swap(i, j) {\n            const tmp = ids[i];\n            ids[i] = ids[j];\n            ids[j] = tmp;\n        }\n\n        for (let i = 0, n = ids.length; i < n; i += 2) {\n            if (xx[ids[i]] > xx[ids[i + 1]]) {\n                swap(i, i + 1);\n            }\n        }\n    };\n\n    internal.insertionSortSegmentIds = function (arr, ids, start, end) {\n        let id, id2;\n        for (let j = start + 2; j <= end; j += 2) {\n            id = ids[j];\n            id2 = ids[j + 1];\n            let i;\n            for (i = j - 2; i >= start && arr[id] < arr[ids[i]]; i -= 2) {\n                ids[i + 2] = ids[i];\n                ids[i + 3] = ids[i + 1];\n            }\n            ids[i + 2] = id;\n            ids[i + 3] = id2;\n        }\n    };\n\n    internal.quicksortSegmentIds = function (a, ids, lo, hi) {\n        let i = lo,\n            j = hi,\n            pivot, tmp;\n        while (i < hi) {\n            pivot = a[ids[(lo + hi >> 2) << 1]]; // avoid n^2 performance on sorted arrays\n            while (i <= j) {\n                while (a[ids[i]] < pivot) i += 2;\n                while (a[ids[j]] > pivot) j -= 2;\n                if (i <= j) {\n                    tmp = ids[i];\n                    ids[i] = ids[j];\n                    ids[j] = tmp;\n                    tmp = ids[i + 1];\n                    ids[i + 1] = ids[j + 1];\n                    ids[j + 1] = tmp;\n                    i += 2;\n                    j -= 2;\n                }\n            }\n\n            if (j - lo < 40) internal.insertionSortSegmentIds(a, ids, lo, j);\n            else internal.quicksortSegmentIds(a, ids, lo, j);\n            if (hi - i < 40) {\n                internal.insertionSortSegmentIds(a, ids, i, hi);\n                return;\n            }\n            lo = i;\n            j = hi;\n        }\n    };\n\n\n// Convert an array of intersections into an ArcCollection (for display)\n//\n    internal.getIntersectionPoints = function (intersections) {\n        return intersections.map((obj) => [obj.x, obj.y]);\n    };\n\n// Identify intersecting segments in an ArcCollection\n//\n// To find all intersections:\n// 1. Assign each segment to one or more horizontal stripes/bins\n// 2. Find intersections inside each stripe\n// 3. Concat and dedup\n//\n    internal.findSegmentIntersections = (function () {\n\n        // Re-use buffer for temp data -- Chrome's gc starts bogging down\n        // if large buffers are repeatedly created.\n        let buf;\n\n        function getUint32Array(count) {\n            const bytes = count * 4;\n            if (!buf || buf.byteLength < bytes) {\n                buf = new ArrayBuffer(bytes);\n            }\n            return new Uint32Array(buf, 0, count);\n        }\n\n        return function (arcs) {\n            const bounds = arcs.getBounds(),\n                // TODO: handle spherical bounds\n                ymin = bounds.ymin,\n                yrange = bounds.ymax - ymin,\n                stripeCount = internal.calcSegmentIntersectionStripeCount(arcs),\n                stripeSizes = new Uint32Array(stripeCount),\n                stripeId = stripeCount > 1 ? multiStripeId : singleStripeId;\n                let i, j;\n\n            function multiStripeId(y) {\n                return Math.floor((stripeCount - 1) * (y - ymin) / yrange);\n            }\n\n            function singleStripeId() {\n                return 0;\n            }\n\n            // Count segments in each stripe\n            arcs.forEachSegment((id1, id2, xx, yy) => {\n                let s1 = stripeId(yy[id1]);\n                const s2 = stripeId(yy[id2]);\n                while (true) { // eslint-disable-line no-constant-condition\n                    stripeSizes[s1] = stripeSizes[s1] + 2;\n                    if (s1 == s2) break;\n                    s1 += s2 > s1 ? 1 : -1;\n                }\n            });\n\n            // Allocate arrays for segments in each stripe\n            const stripeData = getUint32Array(utils.sum(stripeSizes));\n            let offs = 0;\n            const stripes = [];\n            utils.forEach(stripeSizes, (stripeSize) => {\n                const start = offs;\n                offs += stripeSize;\n                stripes.push(stripeData.subarray(start, offs));\n            });\n            // Assign segment ids to each stripe\n            utils.initializeArray(stripeSizes, 0);\n\n            arcs.forEachSegment((id1, id2, xx, yy) => {\n                let s1 = stripeId(yy[id1]);\n                const s2 = stripeId(yy[id2]);\n                let count, stripe;\n                while (true) { // eslint-disable-line no-constant-condition\n                    count = stripeSizes[s1];\n                    stripeSizes[s1] = count + 2;\n                    stripe = stripes[s1];\n                    stripe[count] = id1;\n                    stripe[count + 1] = id2;\n                    if (s1 == s2) break;\n                    s1 += s2 > s1 ? 1 : -1;\n                }\n            });\n\n            // Detect intersections among segments in each stripe.\n            const raw = arcs.getVertexData(),\n                intersections = [];\n            let arr;\n            for (i = 0; i < stripeCount; i++) {\n                arr = internal.intersectSegments(stripes[i], raw.xx, raw.yy);\n                for (j = 0; j < arr.length; j++) {\n                    intersections.push(arr[j]);\n                }\n            }\n            return internal.dedupIntersections(intersections);\n        };\n    })();\n\n    internal.sortIntersections = function (arr) {\n        arr.sort((a, b) => a.x - b.x || a.y - b.y);\n    };\n\n    internal.dedupIntersections = function (arr) {\n        const index = {};\n        return arr.filter((o) => {\n            const key = internal.getIntersectionKey(o);\n            if (key in index) {\n                return false;\n            }\n            index[key] = true;\n            return true;\n        });\n    };\n\n// Get an indexable key from an intersection object\n// Assumes that vertex ids of o.a and o.b are sorted\n    internal.getIntersectionKey = function (o) {\n        return `${o.a.join(',')};${o.b.join(',')}`;\n    };\n\n    internal.calcSegmentIntersectionStripeCount = function (arcs) {\n        const yrange = arcs.getBounds().height(),\n            segLen = internal.getAvgSegment2(arcs)[1];\n        let count = 1;\n        if (segLen > 0 && yrange > 0) {\n            count = Math.ceil(yrange / segLen / 20);\n        }\n        return count || 1;\n    };\n\n// Find intersections among a group of line segments\n//\n// TODO: handle case where a segment starts and ends at the same point (i.e. duplicate coords);\n//\n// @ids: Array of indexes: [s0p0, s0p1, s1p0, s1p1, ...] where xx[sip0] <= xx[sip1]\n// @xx, @yy: Arrays of x- and y-coordinates\n//\n    internal.intersectSegments = function (ids, xx, yy) {\n        const lim = ids.length - 2,\n            intersections = [];\n        let s1p1, s1p2, s2p1, s2p2,\n            s1p1x, s1p2x, s2p1x, s2p2x,\n            s1p1y, s1p2y, s2p1y, s2p2y,\n            hit, seg1, seg2, i, j;\n\n        // Sort segments by xmin, to allow efficient exclusion of segments with\n        // non-overlapping x extents.\n        internal.sortSegmentIds(xx, ids); // sort by ascending xmin\n\n        i = 0;\n        while (i < lim) {\n            s1p1 = ids[i];\n            s1p2 = ids[i + 1];\n            s1p1x = xx[s1p1];\n            s1p2x = xx[s1p2];\n            s1p1y = yy[s1p1];\n            s1p2y = yy[s1p2];\n            // count++;\n\n            j = i;\n            while (j < lim) {\n                j += 2;\n                s2p1 = ids[j];\n                s2p1x = xx[s2p1];\n\n                if (s1p2x < s2p1x) break; // x extent of seg 2 is greater than seg 1: done with seg 1\n                //if (s1p2x <= s2p1x) break; // this misses point-segment intersections when s1 or s2 is vertical\n\n                s2p1y = yy[s2p1];\n                s2p2 = ids[j + 1];\n                s2p2x = xx[s2p2];\n                s2p2y = yy[s2p2];\n\n                // skip segments with non-overlapping y ranges\n                if (s1p1y >= s2p1y) {\n                    if (s1p1y > s2p2y && s1p2y > s2p1y && s1p2y > s2p2y) continue;\n                } else {\n                    if (s1p1y < s2p2y && s1p2y < s2p1y && s1p2y < s2p2y) continue;\n                }\n\n                // skip segments that are adjacent in a path (optimization)\n                // TODO: consider if this eliminates some cases that should\n                // be detected, e.g. spikes formed by unequal segments\n                if (s1p1 == s2p1 || s1p1 == s2p2 || s1p2 == s2p1 || s1p2 == s2p2) {\n                    continue;\n                }\n\n                // test two candidate segments for intersection\n                hit = segmentIntersection(s1p1x, s1p1y, s1p2x, s1p2y,\n                    s2p1x, s2p1y, s2p2x, s2p2y);\n                if (hit) {\n                    seg1 = [s1p1, s1p2];\n                    seg2 = [s2p1, s2p2];\n                    intersections.push(internal.formatIntersection(hit, seg1, seg2, xx, yy));\n                    if (hit.length == 4) {\n                        // two collinear segments may have two endpoint intersections\n                        intersections.push(internal.formatIntersection(hit.slice(2), seg1, seg2, xx, yy));\n                    }\n                }\n            }\n            i += 2;\n        }\n        return intersections;\n    };\n\n    internal.formatIntersection = function (xy, s1, s2, xx, yy) {\n        const x = xy[0],\n            y = xy[1];\n        s1 = internal.formatIntersectingSegment(x, y, s1[0], s1[1], xx, yy);\n        s2 = internal.formatIntersectingSegment(x, y, s2[0], s2[1], xx, yy);\n        const a = s1[0] < s2[0] ? s1 : s2;\n        const b = a == s1 ? s2 : s1;\n        return {x, y, a, b};\n    };\n\n    internal.formatIntersectingSegment = function (x, y, id1, id2, xx, yy) {\n        let i = id1 < id2 ? id1 : id2,\n            j = i === id1 ? id2 : id1;\n        if (xx[i] == x && yy[i] == y) {\n            j = i;\n        } else if (xx[j] == x && yy[j] == y) {\n            i = j;\n        }\n        return [i, j];\n    };\n\n\n// Utility functions for working with ArcCollection and arrays of arc ids.\n\n// Return average segment length (with simplification)\n    internal.getAvgSegment = function (arcs) {\n        let sum = 0;\n        const count = arcs.forEachSegment((i, j, xx, yy) => {\n            const dx = xx[i] - xx[j],\n                dy = yy[i] - yy[j];\n            sum += Math.sqrt(dx * dx + dy * dy);\n        });\n        return sum / count || 0;\n    };\n\n// Return average magnitudes of dx, dy (with simplification)\n    internal.getAvgSegment2 = function (arcs) {\n        let dx = 0, dy = 0;\n        const count = arcs.forEachSegment((i, j, xx, yy) => {\n            dx += Math.abs(xx[i] - xx[j]);\n            dy += Math.abs(yy[i] - yy[j]);\n        });\n        return [dx / count || 0, dy / count || 0];\n    };\n\n    /*\nthis.getAvgSegmentSph2 = function() {\n  var sumx = 0, sumy = 0;\n  var count = this.forEachSegment(function(i, j, xx, yy) {\n    var lat1 = yy[i],\n        lat2 = yy[j];\n    sumy += geom.degreesToMeters(Math.abs(lat1 - lat2));\n    sumx += geom.degreesToMeters(Math.abs(xx[i] - xx[j]) *\n        Math.cos((lat1 + lat2) * 0.5 * geom.D2R);\n  });\n  return [sumx / count || 0, sumy / count || 0];\n};\n*/\n\n    internal.getDirectedArcPresenceTest = function (shapes, n) {\n        const flags = new Uint8Array(n);\n        internal.forEachArcId(shapes, (id) => {\n            const absId = absArcId(id);\n            if (absId < n === false) error('index error');\n            flags[absId] |= id < 0 ? 2 : 1;\n        });\n        return function (arcId) {\n            const absId = absArcId(arcId);\n            return arcId < 0 ? (flags[absId] & 2) == 2 : (flags[absId] & 1) == 1;\n        };\n    };\n\n    internal.getArcPresenceTest = function (shapes, arcs) {\n        const counts = new Uint8Array(arcs.size());\n        internal.countArcsInShapes(shapes, counts);\n        return function (id) {\n            if (id < 0) id = ~id;\n            return counts[id] > 0;\n        };\n    };\n\n    internal.getArcPresenceTest2 = function (layers, arcs) {\n        const counts = internal.countArcsInLayers(layers, arcs);\n        return function (arcId) {\n            return counts[absArcId(arcId)] > 0;\n        };\n    };\n\n// @counts A typed array for accumulating count of each abs arc id\n//   (assume it won't overflow)\n    internal.countArcsInShapes = function (shapes, counts) {\n        internal.traversePaths(shapes, null, (obj) => {\n            const arcs = obj.arcs;\n            let id;\n            for (let i = 0; i < arcs.length; i++) {\n                id = arcs[i];\n                if (id < 0) id = ~id;\n                counts[id]++;\n            }\n        });\n    };\n\n// Count arcs in a collection of layers\n    internal.countArcsInLayers = function (layers, arcs) {\n        const counts = new Uint32Array(arcs.size());\n        layers.forEach((lyr) => {\n            internal.countArcsInShapes(lyr.shapes, counts);\n        });\n        return counts;\n    };\n\n// Returns subset of shapes in @shapes that contain one or more arcs in @arcIds\n    internal.findShapesByArcId = function (shapes, arcIds, numArcs) {\n        const index = numArcs ? new Uint8Array(numArcs) : [],\n            found = [];\n        arcIds.forEach((id) => {\n            index[absArcId(id)] = 1;\n        });\n        shapes.forEach((shp, shpId) => {\n            let isHit = false;\n            internal.forEachArcId(shp || [], (id) => {\n                isHit = isHit || index[absArcId(id)] == 1;\n            });\n            if (isHit) {\n                found.push(shpId);\n            }\n        });\n        return found;\n    };\n\n    internal.reversePath = function (ids) {\n        ids.reverse();\n        for (let i = 0, n = ids.length; i < n; i++) {\n            ids[i] = ~ids[i];\n        }\n    };\n\n    internal.clampIntervalByPct = function (z, pct) {\n        if (pct <= 0) z = Infinity;\n        else if (pct >= 1) z = 0;\n        return z;\n    };\n\n    internal.findNextRemovableVertices = function (zz, zlim, start, end) {\n        let i = internal.findNextRemovableVertex(zz, zlim, start, end),\n            arr, k;\n        if (i > -1) {\n            k = zz[i];\n            arr = [i];\n            while (++i < end) {\n                if (zz[i] == k) {\n                    arr.push(i);\n                }\n            }\n        }\n        return arr || null;\n    };\n\n// Return id of the vertex between @start and @end with the highest\n// threshold that is less than @zlim, or -1 if none\n//\n    internal.findNextRemovableVertex = function (zz, zlim, start, end) {\n        let tmp, jz = 0, j = -1, z;\n        if (start > end) {\n            tmp = start;\n            start = end;\n            end = tmp;\n        }\n        for (let i = start + 1; i < end; i++) {\n            z = zz[i];\n            if (z < zlim && z > jz) {\n                j = i;\n                jz = z;\n            }\n        }\n        return j;\n    };\n\n// Visit each arc id in a path, shape or array of shapes\n// Use non-undefined return values of callback @cb as replacements.\n    internal.forEachArcId = function (arr, cb) {\n        let item;\n        for (let i = 0; i < arr.length; i++) {\n            item = arr[i];\n            if (item instanceof Array) {\n                internal.forEachArcId(item, cb);\n            } else if (utils.isInteger(item)) {\n                const val = cb(item);\n                if (val !== void 0) {\n                    arr[i] = val;\n                }\n            } else if (item) {\n                error(\"Non-integer arc id in:\", arr);\n            }\n        }\n    };\n\n    internal.forEachSegmentInShape = function (shape, arcs, cb) {\n        for (let i = 0, n = shape ? shape.length : 0; i < n; i++) {\n            internal.forEachSegmentInPath(shape[i], arcs, cb);\n        }\n    };\n\n    internal.forEachSegmentInPath = function (ids, arcs, cb) {\n        for (let i = 0, n = ids.length; i < n; i++) {\n            arcs.forEachArcSegment(ids[i], cb);\n        }\n    };\n\n    internal.traversePaths = function traversePaths(shapes, cbArc, cbPart, cbShape) {\n        let segId = 0;\n        shapes.forEach((parts, shapeId) => {\n            if (!parts || parts.length === 0) return; // null shape\n            let arcIds, arcId;\n            if (cbShape) {\n                cbShape(shapeId);\n            }\n            for (let i = 0, m = parts.length; i < m; i++) {\n                arcIds = parts[i];\n                if (cbPart) {\n                    cbPart({\n                        i,\n                        shapeId,\n                        shape: parts,\n                        arcs: arcIds\n                    });\n                }\n\n                if (cbArc) {\n                    for (let j = 0, n = arcIds.length; j < n; j++, segId++) {\n                        arcId = arcIds[j];\n                        cbArc({\n                            i: j,\n                            shapeId,\n                            partId: i,\n                            arcId,\n                            segId\n                        });\n                    }\n                }\n            }\n        });\n    };\n\n    internal.arcHasLength = function (id, coords) {\n        const iter = coords.getArcIter(id);\n        let x, y;\n        if (iter.hasNext()) {\n            x = iter.x;\n            y = iter.y;\n            while (iter.hasNext()) {\n                if (iter.x != x || iter.y != y) return true;\n            }\n        }\n        return false;\n    };\n\n    internal.filterEmptyArcs = function (shape, coords) {\n        if (!shape) return null;\n        const shape2 = [];\n        shape.forEach((ids) => {\n            const path = [];\n            for (let i = 0; i < ids.length; i++) {\n                if (internal.arcHasLength(ids[i], coords)) {\n                    path.push(ids[i]);\n                }\n            }\n            if (path.length > 0) shape2.push(path);\n        });\n        return shape2.length > 0 ? shape2 : null;\n    };\n\n// Bundle holes with their containing rings for Topo/GeoJSON polygon export.\n// Assumes outer rings are CW and inner (hole) rings are CCW, unless\n//   the reverseWinding flag is set.\n// @paths array of objects with path metadata -- see internal.exportPathData()\n//\n// TODO: Improve reliability. Currently uses winding order, area and bbox to\n//   identify holes and their enclosures -- could be confused by some strange\n//   geometry.\n//\n    internal.groupPolygonRings = function (paths, reverseWinding) {\n        const holes = [],\n            groups = [],\n            sign = reverseWinding ? -1 : 1;\n\n        (paths || []).forEach((path) => {\n            if (path.area * sign > 0) {\n                groups.push([path]);\n            } else if (path.area * sign < 0) {\n                holes.push(path);\n            } else {\n                // Zero-area ring, skipping\n            }\n        });\n\n        if (holes.length === 0) {\n            return groups;\n        }\n\n        // Using a spatial index to improve performance when the current feature\n        // contains many holes and space-filling rings.\n        // (Thanks to @simonepri for providing an example implementation in PR #248)\n        const ringIndex = require('rbush')(); // eslint-disable-line no-undef\n        ringIndex.load(groups.map((group, i) => {\n            const bounds = group[0].bounds;\n            return {\n                minX: bounds.xmin,\n                minY: bounds.ymin,\n                maxX: bounds.xmax,\n                maxY: bounds.ymax,\n                idx: i\n            };\n        }));\n\n        // Group each hole with its containing ring\n        holes.forEach((hole) => {\n            let containerId = -1,\n                containerArea = 0;\n            const holeArea = hole.area * -sign,\n                // Find rings that might contain this hole\n                candidates = ringIndex.search({\n                    minX: hole.bounds.xmin,\n                    minY: hole.bounds.ymin,\n                    maxX: hole.bounds.xmax,\n                    maxY: hole.bounds.ymax\n                });\n            let ring, ringId, ringArea, isContained;\n            // Group this hole with the smallest-area ring that contains it.\n            // (Assumes that if a ring's bbox contains a hole, then the ring also\n            //  contains the hole).\n            for (let i = 0, n = candidates.length; i < n; i++) {\n                ringId = candidates[i].idx;\n                ring = groups[ringId][0];\n                ringArea = ring.area * sign;\n                isContained = ring.bounds.contains(hole.bounds) && ringArea > holeArea;\n                if (isContained && (containerArea === 0 || ringArea < containerArea)) {\n                    containerArea = ringArea;\n                    containerId = ringId;\n                }\n            }\n            if (containerId == -1) {\n                debug(\"[groupPolygonRings()] polygon hole is missing a containing ring, dropping.\");\n            } else {\n                groups[containerId].push(hole);\n            }\n        });\n\n        return groups;\n    };\n\n    internal.getPathMetadata = function (shape, arcs, type) {\n        const data = [];\n        let ids;\n        for (let i = 0, n = shape && shape.length; i < n; i++) {\n            ids = shape[i];\n            data.push({\n                ids,\n                area: type == 'polygon' ? geom.getPlanarPathArea(ids, arcs) : 0,\n                bounds: arcs.getSimpleShapeBounds(ids)\n            });\n        }\n        return data;\n    };\n\n    internal.quantizeArcs = function (arcs, quanta) {\n        // Snap coordinates to a grid of @quanta locations on both axes\n        // This may snap nearby points to the same coordinates.\n        // Consider a cleanup pass to remove dupes, make sure collapsed arcs are\n        //   removed on export.\n        //\n        const bb1 = arcs.getBounds(),\n            bb2 = new Bounds(0, 0, quanta - 1, quanta - 1),\n            fw = bb1.getTransform(bb2),\n            inv = fw.invert();\n\n        arcs.transformPoints((x, y) => {\n            const p = fw.transform(x, y);\n            return inv.transform(Math.round(p[0]), Math.round(p[1]));\n        });\n    };\n\n\n    api.internal = internal;\n    exportAPI = internal;\n    //this.mapshaper = api;\n\n// Expose internal objects for testing\n    utils.extend(api.internal, {\n        ArcCollection,\n        ArcIter\n    });\n\n    if (typeof define === \"function\" && define.amd) { // eslint-disable-line no-undef\n        //define(\"mapshaper\", api);\n        define([], () => exportAPI); // eslint-disable-line no-undef\n    } else if (typeof module === \"object\" && module.exports) { // eslint-disable-line no-undef\n        module.exports = exportAPI; // eslint-disable-line no-undef\n    }\n}());\n\nexport default exportAPI;\n"],"file":"mapshaper-maplat.js"}